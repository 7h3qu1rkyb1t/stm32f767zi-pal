#include "core.h"

#define OTG_FS_GLOBAL_BASE          0x50000000UL
#define OTG_HS_GLOBAL_BASE          0x40040000UL
#define OTG_FS_HOST_BASE            0x50000400UL
#define OTG_FS_DEVICE_BASE          0x50000800UL
#define OTG_FS_PWRCLK_BASE          0x50000E00UL
#define OTG_HS_HOST_BASE            0x40040400UL
#define OTG_HS_DEVICE_BASE          0x40040800UL
#define OTG_HS_PWRCLK_BASE          0x40040E00UL

#define OTG_FS_HOST                 ((volatile OTG_FS_HOST_Type*)       OTG_FS_HOST_BASE)
#define OTG_FS_DEVICE               ((volatile OTG_FS_DEVICE_Type*)     OTG_FS_DEVICE_BASE)
#define OTG_FS_PWRCLK               ((volatile OTG_FS_PWRCLK_Type*)     OTG_FS_PWRCLK_BASE)
#define OTG_HS_HOST                 ((volatile OTG_HS_HOST_Type*)       OTG_HS_HOST_BASE)
#define OTG_HS_DEVICE               ((volatile OTG_HS_DEVICE_Type*)     OTG_HS_DEVICE_BASE)
#define OTG_HS_PWRCLK               ((volatile OTG_HS_PWRCLK_Type*)     OTG_HS_PWRCLK_BASE)
#define OTG_FS_GLOBAL               ((volatile OTG_FS_GLOBAL_Type*)     OTG_FS_GLOBAL_BASE)
#define OTG_HS_GLOBAL               ((volatile OTG_HS_GLOBAL_Type*)     OTG_HS_GLOBAL_BASE)

/* =========================================================================================================================== */
/* ================                                       OTG_HS_PWRCLK                                       ================ */
/* =========================================================================================================================== */


/**
  * @brief USB on the go high speed (OTG_HS_PWRCLK)
  */

typedef struct {                                /*!< (@ 0x40040E00) OTG_HS_PWRCLK Structure                                    */
  
  union {
    __IOM uint32_t OTG_HS_PCGCR;                /*!< (@ 0x00000000) Power and clock gating control register                    */
    
    struct {
      __IOM uint32_t STPPCLK    : 1;            /*!< [0..0] Stop PHY clock                                                     */
      __IOM uint32_t GATEHCLK   : 1;            /*!< [1..1] Gate HCLK                                                          */
            uint32_t            : 2;
      __IOM uint32_t PHYSUSP    : 1;            /*!< [4..4] PHY suspended                                                      */
            uint32_t            : 27;
    } OTG_HS_PCGCR_b;
  } ;
} OTG_HS_PWRCLK_Type;                           /*!< Size = 4 (0x4)                                                            */



/* =========================================================================================================================== */
/* ================                                       OTG_HS_DEVICE                                       ================ */
/* =========================================================================================================================== */


/**
  * @brief USB on the go high speed (OTG_HS_DEVICE)
  */

typedef struct {                                /*!< (@ 0x40040800) OTG_HS_DEVICE Structure                                    */
  
  union {
    __IOM uint32_t OTG_HS_DCFG;                 /*!< (@ 0x00000000) OTG_HS device configuration register                       */
    
    struct {
      __IOM uint32_t DSPD       : 2;            /*!< [1..0] Device speed                                                       */
      __IOM uint32_t NZLSOHSK   : 1;            /*!< [2..2] Nonzero-length status OUT handshake                                */
            uint32_t            : 1;
      __IOM uint32_t DAD        : 7;            /*!< [10..4] Device address                                                    */
      __IOM uint32_t PFIVL      : 2;            /*!< [12..11] Periodic (micro)frame interval                                   */
            uint32_t            : 11;
      __IOM uint32_t PERSCHIVL  : 2;            /*!< [25..24] Periodic scheduling interval                                     */
            uint32_t            : 6;
    } OTG_HS_DCFG_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_DCTL;                 /*!< (@ 0x00000004) OTG_HS device control register                             */
    
    struct {
      __IOM uint32_t RWUSIG     : 1;            /*!< [0..0] Remote wakeup signaling                                            */
      __IOM uint32_t SDIS       : 1;            /*!< [1..1] Soft disconnect                                                    */
      __IM  uint32_t GINSTS     : 1;            /*!< [2..2] Global IN NAK status                                               */
      __IM  uint32_t GONSTS     : 1;            /*!< [3..3] Global OUT NAK status                                              */
      __IOM uint32_t TCTL       : 3;            /*!< [6..4] Test control                                                       */
      __OM  uint32_t SGINAK     : 1;            /*!< [7..7] Set global IN NAK                                                  */
      __OM  uint32_t CGINAK     : 1;            /*!< [8..8] Clear global IN NAK                                                */
      __OM  uint32_t SGONAK     : 1;            /*!< [9..9] Set global OUT NAK                                                 */
      __OM  uint32_t CGONAK     : 1;            /*!< [10..10] Clear global OUT NAK                                             */
      __IOM uint32_t POPRGDNE   : 1;            /*!< [11..11] Power-on programming done                                        */
            uint32_t            : 20;
    } OTG_HS_DCTL_b;
  } ;
  
  union {
    __IM  uint32_t OTG_HS_DSTS;                 /*!< (@ 0x00000008) OTG_HS device status register                              */
    
    struct {
      __IM  uint32_t SUSPSTS    : 1;            /*!< [0..0] Suspend status                                                     */
      __IM  uint32_t ENUMSPD    : 2;            /*!< [2..1] Enumerated speed                                                   */
      __IM  uint32_t EERR       : 1;            /*!< [3..3] Erratic error                                                      */
            uint32_t            : 4;
      __IM  uint32_t FNSOF      : 14;           /*!< [21..8] Frame number of the received SOF                                  */
            uint32_t            : 10;
    } OTG_HS_DSTS_b;
  } ;
  __IM  uint32_t  RESERVED;
  
  union {
    __IOM uint32_t OTG_HS_DIEPMSK;              /*!< (@ 0x00000010) OTG_HS device IN endpoint common interrupt mask
                                                                    register                                                   */
    
    struct {
      __IOM uint32_t XFRCM      : 1;            /*!< [0..0] Transfer completed interrupt mask                                  */
      __IOM uint32_t EPDM       : 1;            /*!< [1..1] Endpoint disabled interrupt mask                                   */
            uint32_t            : 1;
      __IOM uint32_t TOM        : 1;            /*!< [3..3] Timeout condition mask (nonisochronous endpoints)                  */
      __IOM uint32_t ITTXFEMSK  : 1;            /*!< [4..4] IN token received when TxFIFO empty mask                           */
      __IOM uint32_t INEPNMM    : 1;            /*!< [5..5] IN token received with EP mismatch mask                            */
      __IOM uint32_t INEPNEM    : 1;            /*!< [6..6] IN endpoint NAK effective mask                                     */
            uint32_t            : 1;
      __IOM uint32_t TXFURM     : 1;            /*!< [8..8] FIFO underrun mask                                                 */
      __IOM uint32_t BIM        : 1;            /*!< [9..9] BNA interrupt mask                                                 */
            uint32_t            : 22;
    } OTG_HS_DIEPMSK_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_DOEPMSK;              /*!< (@ 0x00000014) OTG_HS device OUT endpoint common interrupt mask
                                                                    register                                                   */
    
    struct {
      __IOM uint32_t XFRCM      : 1;            /*!< [0..0] Transfer completed interrupt mask                                  */
      __IOM uint32_t EPDM       : 1;            /*!< [1..1] Endpoint disabled interrupt mask                                   */
            uint32_t            : 1;
      __IOM uint32_t STUPM      : 1;            /*!< [3..3] SETUP phase done mask                                              */
      __IOM uint32_t OTEPDM     : 1;            /*!< [4..4] OUT token received when endpoint disabled mask                     */
            uint32_t            : 1;
      __IOM uint32_t B2BSTUP    : 1;            /*!< [6..6] Back-to-back SETUP packets received mask                           */
            uint32_t            : 1;
      __IOM uint32_t OPEM       : 1;            /*!< [8..8] OUT packet error mask                                              */
      __IOM uint32_t BOIM       : 1;            /*!< [9..9] BNA interrupt mask                                                 */
            uint32_t            : 22;
    } OTG_HS_DOEPMSK_b;
  } ;
  
  union {
    __IM  uint32_t OTG_HS_DAINT;                /*!< (@ 0x00000018) OTG_HS device all endpoints interrupt register             */
    
    struct {
      __IM  uint32_t IEPINT     : 16;           /*!< [15..0] IN endpoint interrupt bits                                        */
      __IM  uint32_t OEPINT     : 16;           /*!< [31..16] OUT endpoint interrupt bits                                      */
    } OTG_HS_DAINT_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_DAINTMSK;             /*!< (@ 0x0000001C) OTG_HS all endpoints interrupt mask register               */
    
    struct {
      __IOM uint32_t IEPM       : 16;           /*!< [15..0] IN EP interrupt mask bits                                         */
      __IOM uint32_t OEPM       : 16;           /*!< [31..16] OUT EP interrupt mask bits                                       */
    } OTG_HS_DAINTMSK_b;
  } ;
  __IM  uint32_t  RESERVED1[2];
  
  union {
    __IOM uint32_t OTG_HS_DVBUSDIS;             /*!< (@ 0x00000028) OTG_HS device VBUS discharge time register                 */
    
    struct {
      __IOM uint32_t VBUSDT     : 16;           /*!< [15..0] Device VBUS discharge time                                        */
            uint32_t            : 16;
    } OTG_HS_DVBUSDIS_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_DVBUSPULSE;           /*!< (@ 0x0000002C) OTG_HS device VBUS pulsing time register                   */
    
    struct {
      __IOM uint32_t DVBUSP     : 12;           /*!< [11..0] Device VBUS pulsing time                                          */
            uint32_t            : 20;
    } OTG_HS_DVBUSPULSE_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_DTHRCTL;              /*!< (@ 0x00000030) OTG_HS Device threshold control register                   */
    
    struct {
      __IOM uint32_t NONISOTHREN : 1;           /*!< [0..0] Nonisochronous IN endpoints threshold enable                       */
      __IOM uint32_t ISOTHREN   : 1;            /*!< [1..1] ISO IN endpoint threshold enable                                   */
      __IOM uint32_t TXTHRLEN   : 9;            /*!< [10..2] Transmit threshold length                                         */
            uint32_t            : 5;
      __IOM uint32_t RXTHREN    : 1;            /*!< [16..16] Receive threshold enable                                         */
      __IOM uint32_t RXTHRLEN   : 9;            /*!< [25..17] Receive threshold length                                         */
            uint32_t            : 1;
      __IOM uint32_t ARPEN      : 1;            /*!< [27..27] Arbiter parking enable                                           */
            uint32_t            : 4;
    } OTG_HS_DTHRCTL_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_DIEPEMPMSK;           /*!< (@ 0x00000034) OTG_HS device IN endpoint FIFO empty interrupt
                                                                    mask register                                              */
    
    struct {
      __IOM uint32_t INEPTXFEM  : 16;           /*!< [15..0] IN EP Tx FIFO empty interrupt mask bits                           */
            uint32_t            : 16;
    } OTG_HS_DIEPEMPMSK_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_DEACHINT;             /*!< (@ 0x00000038) OTG_HS device each endpoint interrupt register             */
    
    struct {
            uint32_t            : 1;
      __IOM uint32_t IEP1INT    : 1;            /*!< [1..1] IN endpoint 1interrupt bit                                         */
            uint32_t            : 15;
      __IOM uint32_t OEP1INT    : 1;            /*!< [17..17] OUT endpoint 1 interrupt bit                                     */
            uint32_t            : 14;
    } OTG_HS_DEACHINT_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_DEACHINTMSK;          /*!< (@ 0x0000003C) OTG_HS device each endpoint interrupt register
                                                                    mask                                                       */
    
    struct {
            uint32_t            : 1;
      __IOM uint32_t IEP1INTM   : 1;            /*!< [1..1] IN Endpoint 1 interrupt mask bit                                   */
            uint32_t            : 15;
      __IOM uint32_t OEP1INTM   : 1;            /*!< [17..17] OUT Endpoint 1 interrupt mask bit                                */
            uint32_t            : 14;
    } OTG_HS_DEACHINTMSK_b;
  } ;
  __IM  uint32_t  RESERVED2[48];
  
  union {
    __IOM uint32_t OTG_HS_DIEPCTL0;             /*!< (@ 0x00000100) OTG device endpoint-0 control register                     */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
            uint32_t            : 4;
      __IOM uint32_t USBAEP     : 1;            /*!< [15..15] USB active endpoint                                              */
      __IM  uint32_t EONUM_DPID : 1;            /*!< [16..16] Even/odd frame                                                   */
      __IM  uint32_t NAKSTS     : 1;            /*!< [17..17] NAK status                                                       */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
            uint32_t            : 1;
      __IOM uint32_t Stall      : 1;            /*!< [21..21] STALL handshake                                                  */
      __IOM uint32_t TXFNUM     : 4;            /*!< [25..22] TxFIFO number                                                    */
      __OM  uint32_t CNAK       : 1;            /*!< [26..26] Clear NAK                                                        */
      __OM  uint32_t SNAK       : 1;            /*!< [27..27] Set NAK                                                          */
      __OM  uint32_t SD0PID_SEVNFRM : 1;        /*!< [28..28] Set DATA0 PID                                                    */
      __OM  uint32_t SODDFRM    : 1;            /*!< [29..29] Set odd frame                                                    */
      __IOM uint32_t EPDIS      : 1;            /*!< [30..30] Endpoint disable                                                 */
      __IOM uint32_t EPENA      : 1;            /*!< [31..31] Endpoint enable                                                  */
    } OTG_HS_DIEPCTL0_b;
  } ;
  __IM  uint32_t  RESERVED3;
  
  union {
    __IOM uint32_t OTG_HS_DIEPINT0;             /*!< (@ 0x00000108) OTG device endpoint-0 interrupt register                   */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed interrupt                                       */
      __IOM uint32_t EPDISD     : 1;            /*!< [1..1] Endpoint disabled interrupt                                        */
            uint32_t            : 1;
      __IOM uint32_t TOC        : 1;            /*!< [3..3] Timeout condition                                                  */
      __IOM uint32_t ITTXFE     : 1;            /*!< [4..4] IN token received when TxFIFO is empty                             */
            uint32_t            : 1;
      __IOM uint32_t INEPNE     : 1;            /*!< [6..6] IN endpoint NAK effective                                          */
      __IM  uint32_t TXFE       : 1;            /*!< [7..7] Transmit FIFO empty                                                */
      __IOM uint32_t TXFIFOUDRN : 1;            /*!< [8..8] Transmit Fifo Underrun                                             */
      __IOM uint32_t BNA        : 1;            /*!< [9..9] Buffer not available interrupt                                     */
            uint32_t            : 1;
      __IOM uint32_t PKTDRPSTS  : 1;            /*!< [11..11] Packet dropped status                                            */
      __IOM uint32_t BERR       : 1;            /*!< [12..12] Babble error interrupt                                           */
      __IOM uint32_t NAK        : 1;            /*!< [13..13] NAK interrupt                                                    */
            uint32_t            : 18;
    } OTG_HS_DIEPINT0_b;
  } ;
  __IM  uint32_t  RESERVED4;
  
  union {
    __IOM uint32_t OTG_HS_DIEPTSIZ0;            /*!< (@ 0x00000110) OTG_HS device IN endpoint 0 transfer size register         */
    
    struct {
      __IOM uint32_t XFRSIZ     : 7;            /*!< [6..0] Transfer size                                                      */
            uint32_t            : 12;
      __IOM uint32_t PKTCNT     : 2;            /*!< [20..19] Packet count                                                     */
            uint32_t            : 11;
    } OTG_HS_DIEPTSIZ0_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_DIEPDMA1;             /*!< (@ 0x00000114) OTG_HS device endpoint-1 DMA address register              */
    
    struct {
      __IOM uint32_t DMAADDR    : 32;           /*!< [31..0] DMA address                                                       */
    } OTG_HS_DIEPDMA1_b;
  } ;
  
  union {
    __IM  uint32_t OTG_HS_DTXFSTS0;             /*!< (@ 0x00000118) OTG_HS device IN endpoint transmit FIFO status
                                                                    register                                                   */
    
    struct {
      __IM  uint32_t INEPTFSAV  : 16;           /*!< [15..0] IN endpoint TxFIFO space avail                                    */
            uint32_t            : 16;
    } OTG_HS_DTXFSTS0_b;
  } ;
  __IM  uint32_t  RESERVED5;
  
  union {
    __IOM uint32_t OTG_HS_DIEPCTL1;             /*!< (@ 0x00000120) OTG device endpoint-1 control register                     */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
            uint32_t            : 4;
      __IOM uint32_t USBAEP     : 1;            /*!< [15..15] USB active endpoint                                              */
      __IM  uint32_t EONUM_DPID : 1;            /*!< [16..16] Even/odd frame                                                   */
      __IM  uint32_t NAKSTS     : 1;            /*!< [17..17] NAK status                                                       */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
            uint32_t            : 1;
      __IOM uint32_t Stall      : 1;            /*!< [21..21] STALL handshake                                                  */
      __IOM uint32_t TXFNUM     : 4;            /*!< [25..22] TxFIFO number                                                    */
      __OM  uint32_t CNAK       : 1;            /*!< [26..26] Clear NAK                                                        */
      __OM  uint32_t SNAK       : 1;            /*!< [27..27] Set NAK                                                          */
      __OM  uint32_t SD0PID_SEVNFRM : 1;        /*!< [28..28] Set DATA0 PID                                                    */
      __OM  uint32_t SODDFRM    : 1;            /*!< [29..29] Set odd frame                                                    */
      __IOM uint32_t EPDIS      : 1;            /*!< [30..30] Endpoint disable                                                 */
      __IOM uint32_t EPENA      : 1;            /*!< [31..31] Endpoint enable                                                  */
    } OTG_HS_DIEPCTL1_b;
  } ;
  __IM  uint32_t  RESERVED6;
  
  union {
    __IOM uint32_t OTG_HS_DIEPINT1;             /*!< (@ 0x00000128) OTG device endpoint-1 interrupt register                   */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed interrupt                                       */
      __IOM uint32_t EPDISD     : 1;            /*!< [1..1] Endpoint disabled interrupt                                        */
            uint32_t            : 1;
      __IOM uint32_t TOC        : 1;            /*!< [3..3] Timeout condition                                                  */
      __IOM uint32_t ITTXFE     : 1;            /*!< [4..4] IN token received when TxFIFO is empty                             */
            uint32_t            : 1;
      __IOM uint32_t INEPNE     : 1;            /*!< [6..6] IN endpoint NAK effective                                          */
      __IM  uint32_t TXFE       : 1;            /*!< [7..7] Transmit FIFO empty                                                */
      __IOM uint32_t TXFIFOUDRN : 1;            /*!< [8..8] Transmit Fifo Underrun                                             */
      __IOM uint32_t BNA        : 1;            /*!< [9..9] Buffer not available interrupt                                     */
            uint32_t            : 1;
      __IOM uint32_t PKTDRPSTS  : 1;            /*!< [11..11] Packet dropped status                                            */
      __IOM uint32_t BERR       : 1;            /*!< [12..12] Babble error interrupt                                           */
      __IOM uint32_t NAK        : 1;            /*!< [13..13] NAK interrupt                                                    */
            uint32_t            : 18;
    } OTG_HS_DIEPINT1_b;
  } ;
  __IM  uint32_t  RESERVED7;
  
  union {
    __IOM uint32_t OTG_HS_DIEPTSIZ1;            /*!< (@ 0x00000130) OTG_HS device endpoint transfer size register              */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t MCNT       : 2;            /*!< [30..29] Multi count                                                      */
            uint32_t            : 1;
    } OTG_HS_DIEPTSIZ1_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_DIEPDMA2;             /*!< (@ 0x00000134) OTG_HS device endpoint-2 DMA address register              */
    
    struct {
      __IOM uint32_t DMAADDR    : 32;           /*!< [31..0] DMA address                                                       */
    } OTG_HS_DIEPDMA2_b;
  } ;
  
  union {
    __IM  uint32_t OTG_HS_DTXFSTS1;             /*!< (@ 0x00000138) OTG_HS device IN endpoint transmit FIFO status
                                                                    register                                                   */
    
    struct {
      __IM  uint32_t INEPTFSAV  : 16;           /*!< [15..0] IN endpoint TxFIFO space avail                                    */
            uint32_t            : 16;
    } OTG_HS_DTXFSTS1_b;
  } ;
  __IM  uint32_t  RESERVED8;
  
  union {
    __IOM uint32_t OTG_HS_DIEPCTL2;             /*!< (@ 0x00000140) OTG device endpoint-2 control register                     */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
            uint32_t            : 4;
      __IOM uint32_t USBAEP     : 1;            /*!< [15..15] USB active endpoint                                              */
      __IM  uint32_t EONUM_DPID : 1;            /*!< [16..16] Even/odd frame                                                   */
      __IM  uint32_t NAKSTS     : 1;            /*!< [17..17] NAK status                                                       */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
            uint32_t            : 1;
      __IOM uint32_t Stall      : 1;            /*!< [21..21] STALL handshake                                                  */
      __IOM uint32_t TXFNUM     : 4;            /*!< [25..22] TxFIFO number                                                    */
      __OM  uint32_t CNAK       : 1;            /*!< [26..26] Clear NAK                                                        */
      __OM  uint32_t SNAK       : 1;            /*!< [27..27] Set NAK                                                          */
      __OM  uint32_t SD0PID_SEVNFRM : 1;        /*!< [28..28] Set DATA0 PID                                                    */
      __OM  uint32_t SODDFRM    : 1;            /*!< [29..29] Set odd frame                                                    */
      __IOM uint32_t EPDIS      : 1;            /*!< [30..30] Endpoint disable                                                 */
      __IOM uint32_t EPENA      : 1;            /*!< [31..31] Endpoint enable                                                  */
    } OTG_HS_DIEPCTL2_b;
  } ;
  __IM  uint32_t  RESERVED9;
  
  union {
    __IOM uint32_t OTG_HS_DIEPINT2;             /*!< (@ 0x00000148) OTG device endpoint-2 interrupt register                   */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed interrupt                                       */
      __IOM uint32_t EPDISD     : 1;            /*!< [1..1] Endpoint disabled interrupt                                        */
            uint32_t            : 1;
      __IOM uint32_t TOC        : 1;            /*!< [3..3] Timeout condition                                                  */
      __IOM uint32_t ITTXFE     : 1;            /*!< [4..4] IN token received when TxFIFO is empty                             */
            uint32_t            : 1;
      __IOM uint32_t INEPNE     : 1;            /*!< [6..6] IN endpoint NAK effective                                          */
      __IM  uint32_t TXFE       : 1;            /*!< [7..7] Transmit FIFO empty                                                */
      __IOM uint32_t TXFIFOUDRN : 1;            /*!< [8..8] Transmit Fifo Underrun                                             */
      __IOM uint32_t BNA        : 1;            /*!< [9..9] Buffer not available interrupt                                     */
            uint32_t            : 1;
      __IOM uint32_t PKTDRPSTS  : 1;            /*!< [11..11] Packet dropped status                                            */
      __IOM uint32_t BERR       : 1;            /*!< [12..12] Babble error interrupt                                           */
      __IOM uint32_t NAK        : 1;            /*!< [13..13] NAK interrupt                                                    */
            uint32_t            : 18;
    } OTG_HS_DIEPINT2_b;
  } ;
  __IM  uint32_t  RESERVED10;
  
  union {
    __IOM uint32_t OTG_HS_DIEPTSIZ2;            /*!< (@ 0x00000150) OTG_HS device endpoint transfer size register              */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t MCNT       : 2;            /*!< [30..29] Multi count                                                      */
            uint32_t            : 1;
    } OTG_HS_DIEPTSIZ2_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_DIEPDMA3;             /*!< (@ 0x00000154) OTG_HS device endpoint-3 DMA address register              */
    
    struct {
      __IOM uint32_t DMAADDR    : 32;           /*!< [31..0] DMA address                                                       */
    } OTG_HS_DIEPDMA3_b;
  } ;
  
  union {
    __IM  uint32_t OTG_HS_DTXFSTS2;             /*!< (@ 0x00000158) OTG_HS device IN endpoint transmit FIFO status
                                                                    register                                                   */
    
    struct {
      __IM  uint32_t INEPTFSAV  : 16;           /*!< [15..0] IN endpoint TxFIFO space avail                                    */
            uint32_t            : 16;
    } OTG_HS_DTXFSTS2_b;
  } ;
  __IM  uint32_t  RESERVED11;
  
  union {
    __IOM uint32_t OTG_HS_DIEPCTL3;             /*!< (@ 0x00000160) OTG device endpoint-3 control register                     */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
            uint32_t            : 4;
      __IOM uint32_t USBAEP     : 1;            /*!< [15..15] USB active endpoint                                              */
      __IM  uint32_t EONUM_DPID : 1;            /*!< [16..16] Even/odd frame                                                   */
      __IM  uint32_t NAKSTS     : 1;            /*!< [17..17] NAK status                                                       */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
            uint32_t            : 1;
      __IOM uint32_t Stall      : 1;            /*!< [21..21] STALL handshake                                                  */
      __IOM uint32_t TXFNUM     : 4;            /*!< [25..22] TxFIFO number                                                    */
      __OM  uint32_t CNAK       : 1;            /*!< [26..26] Clear NAK                                                        */
      __OM  uint32_t SNAK       : 1;            /*!< [27..27] Set NAK                                                          */
      __OM  uint32_t SD0PID_SEVNFRM : 1;        /*!< [28..28] Set DATA0 PID                                                    */
      __OM  uint32_t SODDFRM    : 1;            /*!< [29..29] Set odd frame                                                    */
      __IOM uint32_t EPDIS      : 1;            /*!< [30..30] Endpoint disable                                                 */
      __IOM uint32_t EPENA      : 1;            /*!< [31..31] Endpoint enable                                                  */
    } OTG_HS_DIEPCTL3_b;
  } ;
  __IM  uint32_t  RESERVED12;
  
  union {
    __IOM uint32_t OTG_HS_DIEPINT3;             /*!< (@ 0x00000168) OTG device endpoint-3 interrupt register                   */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed interrupt                                       */
      __IOM uint32_t EPDISD     : 1;            /*!< [1..1] Endpoint disabled interrupt                                        */
            uint32_t            : 1;
      __IOM uint32_t TOC        : 1;            /*!< [3..3] Timeout condition                                                  */
      __IOM uint32_t ITTXFE     : 1;            /*!< [4..4] IN token received when TxFIFO is empty                             */
            uint32_t            : 1;
      __IOM uint32_t INEPNE     : 1;            /*!< [6..6] IN endpoint NAK effective                                          */
      __IM  uint32_t TXFE       : 1;            /*!< [7..7] Transmit FIFO empty                                                */
      __IOM uint32_t TXFIFOUDRN : 1;            /*!< [8..8] Transmit Fifo Underrun                                             */
      __IOM uint32_t BNA        : 1;            /*!< [9..9] Buffer not available interrupt                                     */
            uint32_t            : 1;
      __IOM uint32_t PKTDRPSTS  : 1;            /*!< [11..11] Packet dropped status                                            */
      __IOM uint32_t BERR       : 1;            /*!< [12..12] Babble error interrupt                                           */
      __IOM uint32_t NAK        : 1;            /*!< [13..13] NAK interrupt                                                    */
            uint32_t            : 18;
    } OTG_HS_DIEPINT3_b;
  } ;
  __IM  uint32_t  RESERVED13;
  
  union {
    __IOM uint32_t OTG_HS_DIEPTSIZ3;            /*!< (@ 0x00000170) OTG_HS device endpoint transfer size register              */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t MCNT       : 2;            /*!< [30..29] Multi count                                                      */
            uint32_t            : 1;
    } OTG_HS_DIEPTSIZ3_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_DIEPDMA4;             /*!< (@ 0x00000174) OTG_HS device endpoint-4 DMA address register              */
    
    struct {
      __IOM uint32_t DMAADDR    : 32;           /*!< [31..0] DMA address                                                       */
    } OTG_HS_DIEPDMA4_b;
  } ;
  
  union {
    __IM  uint32_t OTG_HS_DTXFSTS3;             /*!< (@ 0x00000178) OTG_HS device IN endpoint transmit FIFO status
                                                                    register                                                   */
    
    struct {
      __IM  uint32_t INEPTFSAV  : 16;           /*!< [15..0] IN endpoint TxFIFO space avail                                    */
            uint32_t            : 16;
    } OTG_HS_DTXFSTS3_b;
  } ;
  __IM  uint32_t  RESERVED14;
  
  union {
    __IOM uint32_t OTG_HS_DIEPCTL4;             /*!< (@ 0x00000180) OTG device endpoint-4 control register                     */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
            uint32_t            : 4;
      __IOM uint32_t USBAEP     : 1;            /*!< [15..15] USB active endpoint                                              */
      __IM  uint32_t EONUM_DPID : 1;            /*!< [16..16] Even/odd frame                                                   */
      __IM  uint32_t NAKSTS     : 1;            /*!< [17..17] NAK status                                                       */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
            uint32_t            : 1;
      __IOM uint32_t Stall      : 1;            /*!< [21..21] STALL handshake                                                  */
      __IOM uint32_t TXFNUM     : 4;            /*!< [25..22] TxFIFO number                                                    */
      __OM  uint32_t CNAK       : 1;            /*!< [26..26] Clear NAK                                                        */
      __OM  uint32_t SNAK       : 1;            /*!< [27..27] Set NAK                                                          */
      __OM  uint32_t SD0PID_SEVNFRM : 1;        /*!< [28..28] Set DATA0 PID                                                    */
      __OM  uint32_t SODDFRM    : 1;            /*!< [29..29] Set odd frame                                                    */
      __IOM uint32_t EPDIS      : 1;            /*!< [30..30] Endpoint disable                                                 */
      __IOM uint32_t EPENA      : 1;            /*!< [31..31] Endpoint enable                                                  */
    } OTG_HS_DIEPCTL4_b;
  } ;
  __IM  uint32_t  RESERVED15;
  
  union {
    __IOM uint32_t OTG_HS_DIEPINT4;             /*!< (@ 0x00000188) OTG device endpoint-4 interrupt register                   */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed interrupt                                       */
      __IOM uint32_t EPDISD     : 1;            /*!< [1..1] Endpoint disabled interrupt                                        */
            uint32_t            : 1;
      __IOM uint32_t TOC        : 1;            /*!< [3..3] Timeout condition                                                  */
      __IOM uint32_t ITTXFE     : 1;            /*!< [4..4] IN token received when TxFIFO is empty                             */
            uint32_t            : 1;
      __IOM uint32_t INEPNE     : 1;            /*!< [6..6] IN endpoint NAK effective                                          */
      __IM  uint32_t TXFE       : 1;            /*!< [7..7] Transmit FIFO empty                                                */
      __IOM uint32_t TXFIFOUDRN : 1;            /*!< [8..8] Transmit Fifo Underrun                                             */
      __IOM uint32_t BNA        : 1;            /*!< [9..9] Buffer not available interrupt                                     */
            uint32_t            : 1;
      __IOM uint32_t PKTDRPSTS  : 1;            /*!< [11..11] Packet dropped status                                            */
      __IOM uint32_t BERR       : 1;            /*!< [12..12] Babble error interrupt                                           */
      __IOM uint32_t NAK        : 1;            /*!< [13..13] NAK interrupt                                                    */
            uint32_t            : 18;
    } OTG_HS_DIEPINT4_b;
  } ;
  __IM  uint32_t  RESERVED16;
  
  union {
    __IOM uint32_t OTG_HS_DIEPTSIZ4;            /*!< (@ 0x00000190) OTG_HS device endpoint transfer size register              */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t MCNT       : 2;            /*!< [30..29] Multi count                                                      */
            uint32_t            : 1;
    } OTG_HS_DIEPTSIZ4_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_DIEPDMA5;             /*!< (@ 0x00000194) OTG_HS device endpoint-5 DMA address register              */
    
    struct {
      __IOM uint32_t DMAADDR    : 32;           /*!< [31..0] DMA address                                                       */
    } OTG_HS_DIEPDMA5_b;
  } ;
  
  union {
    __IM  uint32_t OTG_HS_DTXFSTS4;             /*!< (@ 0x00000198) OTG_HS device IN endpoint transmit FIFO status
                                                                    register                                                   */
    
    struct {
      __IM  uint32_t INEPTFSAV  : 16;           /*!< [15..0] IN endpoint TxFIFO space avail                                    */
            uint32_t            : 16;
    } OTG_HS_DTXFSTS4_b;
  } ;
  __IM  uint32_t  RESERVED17;
  
  union {
    union {
      __IOM uint32_t OTG_HS_DIEPCTL5;           /*!< (@ 0x000001A0) OTG device endpoint-5 control register                     */
      
      struct {
        __IOM uint32_t MPSIZ    : 11;           /*!< [10..0] Maximum packet size                                               */
              uint32_t          : 4;
        __IOM uint32_t USBAEP   : 1;            /*!< [15..15] USB active endpoint                                              */
        __IM  uint32_t EONUM_DPID : 1;          /*!< [16..16] Even/odd frame                                                   */
        __IM  uint32_t NAKSTS   : 1;            /*!< [17..17] NAK status                                                       */
        __IOM uint32_t EPTYP    : 2;            /*!< [19..18] Endpoint type                                                    */
              uint32_t          : 1;
        __IOM uint32_t Stall    : 1;            /*!< [21..21] STALL handshake                                                  */
        __IOM uint32_t TXFNUM   : 4;            /*!< [25..22] TxFIFO number                                                    */
        __OM  uint32_t CNAK     : 1;            /*!< [26..26] Clear NAK                                                        */
        __OM  uint32_t SNAK     : 1;            /*!< [27..27] Set NAK                                                          */
        __OM  uint32_t SD0PID_SEVNFRM : 1;      /*!< [28..28] Set DATA0 PID                                                    */
        __OM  uint32_t SODDFRM  : 1;            /*!< [29..29] Set odd frame                                                    */
        __IOM uint32_t EPDIS    : 1;            /*!< [30..30] Endpoint disable                                                 */
        __IOM uint32_t EPENA    : 1;            /*!< [31..31] Endpoint enable                                                  */
      } OTG_HS_DIEPCTL5_b;
    } ;
    
    union {
      __IOM uint32_t OTG_HS_DIEPTSIZ6;          /*!< (@ 0x000001A0) OTG_HS device endpoint transfer size register              */
      
      struct {
        __IOM uint32_t XFRSIZ   : 19;           /*!< [18..0] Transfer size                                                     */
        __IOM uint32_t PKTCNT   : 10;           /*!< [28..19] Packet count                                                     */
        __IOM uint32_t MCNT     : 2;            /*!< [30..29] Multi count                                                      */
              uint32_t          : 1;
      } OTG_HS_DIEPTSIZ6_b;
    } ;
  };
  
  union {
    __IOM uint32_t OTG_HS_DTXFSTS6;             /*!< (@ 0x000001A4) OTG_HS device IN endpoint transmit FIFO status
                                                                    register                                                   */
    
    struct {
      __IOM uint32_t INEPTFSAV  : 16;           /*!< [15..0] IN endpoint TxFIFO space avail                                    */
            uint32_t            : 16;
    } OTG_HS_DTXFSTS6_b;
  } ;
  
  union {
    union {
      __IOM uint32_t OTG_HS_DIEPINT5;           /*!< (@ 0x000001A8) OTG device endpoint-5 interrupt register                   */
      
      struct {
        __IOM uint32_t XFRC     : 1;            /*!< [0..0] Transfer completed interrupt                                       */
        __IOM uint32_t EPDISD   : 1;            /*!< [1..1] Endpoint disabled interrupt                                        */
              uint32_t          : 1;
        __IOM uint32_t TOC      : 1;            /*!< [3..3] Timeout condition                                                  */
        __IOM uint32_t ITTXFE   : 1;            /*!< [4..4] IN token received when TxFIFO is empty                             */
              uint32_t          : 1;
        __IOM uint32_t INEPNE   : 1;            /*!< [6..6] IN endpoint NAK effective                                          */
        __IM  uint32_t TXFE     : 1;            /*!< [7..7] Transmit FIFO empty                                                */
        __IOM uint32_t TXFIFOUDRN : 1;          /*!< [8..8] Transmit Fifo Underrun                                             */
        __IOM uint32_t BNA      : 1;            /*!< [9..9] Buffer not available interrupt                                     */
              uint32_t          : 1;
        __IOM uint32_t PKTDRPSTS : 1;           /*!< [11..11] Packet dropped status                                            */
        __IOM uint32_t BERR     : 1;            /*!< [12..12] Babble error interrupt                                           */
        __IOM uint32_t NAK      : 1;            /*!< [13..13] NAK interrupt                                                    */
              uint32_t          : 18;
      } OTG_HS_DIEPINT5_b;
    } ;
    
    union {
      __IOM uint32_t OTG_HS_DIEPTSIZ7;          /*!< (@ 0x000001A8) OTG_HS device endpoint transfer size register              */
      
      struct {
        __IOM uint32_t XFRSIZ   : 19;           /*!< [18..0] Transfer size                                                     */
        __IOM uint32_t PKTCNT   : 10;           /*!< [28..19] Packet count                                                     */
        __IOM uint32_t MCNT     : 2;            /*!< [30..29] Multi count                                                      */
              uint32_t          : 1;
      } OTG_HS_DIEPTSIZ7_b;
    } ;
  };
  
  union {
    __IOM uint32_t OTG_HS_DTXFSTS7;             /*!< (@ 0x000001AC) OTG_HS device IN endpoint transmit FIFO status
                                                                    register                                                   */
    
    struct {
      __IOM uint32_t INEPTFSAV  : 16;           /*!< [15..0] IN endpoint TxFIFO space avail                                    */
            uint32_t            : 16;
    } OTG_HS_DTXFSTS7_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_DIEPTSIZ5;            /*!< (@ 0x000001B0) OTG_HS device endpoint transfer size register              */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t MCNT       : 2;            /*!< [30..29] Multi count                                                      */
            uint32_t            : 1;
    } OTG_HS_DIEPTSIZ5_b;
  } ;
  __IM  uint32_t  RESERVED18;
  
  union {
    __IM  uint32_t OTG_HS_DTXFSTS5;             /*!< (@ 0x000001B8) OTG_HS device IN endpoint transmit FIFO status
                                                                    register                                                   */
    
    struct {
      __IM  uint32_t INEPTFSAV  : 16;           /*!< [15..0] IN endpoint TxFIFO space avail                                    */
            uint32_t            : 16;
    } OTG_HS_DTXFSTS5_b;
  } ;
  __IM  uint32_t  RESERVED19;
  
  union {
    __IOM uint32_t OTG_HS_DIEPCTL6;             /*!< (@ 0x000001C0) OTG device endpoint-6 control register                     */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
            uint32_t            : 4;
      __IOM uint32_t USBAEP     : 1;            /*!< [15..15] USB active endpoint                                              */
      __IM  uint32_t EONUM_DPID : 1;            /*!< [16..16] Even/odd frame                                                   */
      __IM  uint32_t NAKSTS     : 1;            /*!< [17..17] NAK status                                                       */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
            uint32_t            : 1;
      __IOM uint32_t Stall      : 1;            /*!< [21..21] STALL handshake                                                  */
      __IOM uint32_t TXFNUM     : 4;            /*!< [25..22] TxFIFO number                                                    */
      __OM  uint32_t CNAK       : 1;            /*!< [26..26] Clear NAK                                                        */
      __OM  uint32_t SNAK       : 1;            /*!< [27..27] Set NAK                                                          */
      __OM  uint32_t SD0PID_SEVNFRM : 1;        /*!< [28..28] Set DATA0 PID                                                    */
      __OM  uint32_t SODDFRM    : 1;            /*!< [29..29] Set odd frame                                                    */
      __IOM uint32_t EPDIS      : 1;            /*!< [30..30] Endpoint disable                                                 */
      __IOM uint32_t EPENA      : 1;            /*!< [31..31] Endpoint enable                                                  */
    } OTG_HS_DIEPCTL6_b;
  } ;
  __IM  uint32_t  RESERVED20;
  
  union {
    __IOM uint32_t OTG_HS_DIEPINT6;             /*!< (@ 0x000001C8) OTG device endpoint-6 interrupt register                   */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed interrupt                                       */
      __IOM uint32_t EPDISD     : 1;            /*!< [1..1] Endpoint disabled interrupt                                        */
            uint32_t            : 1;
      __IOM uint32_t TOC        : 1;            /*!< [3..3] Timeout condition                                                  */
      __IOM uint32_t ITTXFE     : 1;            /*!< [4..4] IN token received when TxFIFO is empty                             */
            uint32_t            : 1;
      __IOM uint32_t INEPNE     : 1;            /*!< [6..6] IN endpoint NAK effective                                          */
      __IM  uint32_t TXFE       : 1;            /*!< [7..7] Transmit FIFO empty                                                */
      __IOM uint32_t TXFIFOUDRN : 1;            /*!< [8..8] Transmit Fifo Underrun                                             */
      __IOM uint32_t BNA        : 1;            /*!< [9..9] Buffer not available interrupt                                     */
            uint32_t            : 1;
      __IOM uint32_t PKTDRPSTS  : 1;            /*!< [11..11] Packet dropped status                                            */
      __IOM uint32_t BERR       : 1;            /*!< [12..12] Babble error interrupt                                           */
      __IOM uint32_t NAK        : 1;            /*!< [13..13] NAK interrupt                                                    */
            uint32_t            : 18;
    } OTG_HS_DIEPINT6_b;
  } ;
  __IM  uint32_t  RESERVED21[5];
  
  union {
    __IOM uint32_t OTG_HS_DIEPCTL7;             /*!< (@ 0x000001E0) OTG device endpoint-7 control register                     */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
            uint32_t            : 4;
      __IOM uint32_t USBAEP     : 1;            /*!< [15..15] USB active endpoint                                              */
      __IM  uint32_t EONUM_DPID : 1;            /*!< [16..16] Even/odd frame                                                   */
      __IM  uint32_t NAKSTS     : 1;            /*!< [17..17] NAK status                                                       */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
            uint32_t            : 1;
      __IOM uint32_t Stall      : 1;            /*!< [21..21] STALL handshake                                                  */
      __IOM uint32_t TXFNUM     : 4;            /*!< [25..22] TxFIFO number                                                    */
      __OM  uint32_t CNAK       : 1;            /*!< [26..26] Clear NAK                                                        */
      __OM  uint32_t SNAK       : 1;            /*!< [27..27] Set NAK                                                          */
      __OM  uint32_t SD0PID_SEVNFRM : 1;        /*!< [28..28] Set DATA0 PID                                                    */
      __OM  uint32_t SODDFRM    : 1;            /*!< [29..29] Set odd frame                                                    */
      __IOM uint32_t EPDIS      : 1;            /*!< [30..30] Endpoint disable                                                 */
      __IOM uint32_t EPENA      : 1;            /*!< [31..31] Endpoint enable                                                  */
    } OTG_HS_DIEPCTL7_b;
  } ;
  __IM  uint32_t  RESERVED22;
  
  union {
    __IOM uint32_t OTG_HS_DIEPINT7;             /*!< (@ 0x000001E8) OTG device endpoint-7 interrupt register                   */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed interrupt                                       */
      __IOM uint32_t EPDISD     : 1;            /*!< [1..1] Endpoint disabled interrupt                                        */
            uint32_t            : 1;
      __IOM uint32_t TOC        : 1;            /*!< [3..3] Timeout condition                                                  */
      __IOM uint32_t ITTXFE     : 1;            /*!< [4..4] IN token received when TxFIFO is empty                             */
            uint32_t            : 1;
      __IOM uint32_t INEPNE     : 1;            /*!< [6..6] IN endpoint NAK effective                                          */
      __IM  uint32_t TXFE       : 1;            /*!< [7..7] Transmit FIFO empty                                                */
      __IOM uint32_t TXFIFOUDRN : 1;            /*!< [8..8] Transmit Fifo Underrun                                             */
      __IOM uint32_t BNA        : 1;            /*!< [9..9] Buffer not available interrupt                                     */
            uint32_t            : 1;
      __IOM uint32_t PKTDRPSTS  : 1;            /*!< [11..11] Packet dropped status                                            */
      __IOM uint32_t BERR       : 1;            /*!< [12..12] Babble error interrupt                                           */
      __IOM uint32_t NAK        : 1;            /*!< [13..13] NAK interrupt                                                    */
            uint32_t            : 18;
    } OTG_HS_DIEPINT7_b;
  } ;
  __IM  uint32_t  RESERVED23[69];
  
  union {
    __IOM uint32_t OTG_HS_DOEPCTL0;             /*!< (@ 0x00000300) OTG_HS device control OUT endpoint 0 control
                                                                    register                                                   */
    
    struct {
      __IM  uint32_t MPSIZ      : 2;            /*!< [1..0] Maximum packet size                                                */
            uint32_t            : 13;
      __IM  uint32_t USBAEP     : 1;            /*!< [15..15] USB active endpoint                                              */
            uint32_t            : 1;
      __IM  uint32_t NAKSTS     : 1;            /*!< [17..17] NAK status                                                       */
      __IM  uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
      __IOM uint32_t SNPM       : 1;            /*!< [20..20] Snoop mode                                                       */
      __IOM uint32_t Stall      : 1;            /*!< [21..21] STALL handshake                                                  */
            uint32_t            : 4;
      __OM  uint32_t CNAK       : 1;            /*!< [26..26] Clear NAK                                                        */
      __OM  uint32_t SNAK       : 1;            /*!< [27..27] Set NAK                                                          */
            uint32_t            : 2;
      __IM  uint32_t EPDIS      : 1;            /*!< [30..30] Endpoint disable                                                 */
      __OM  uint32_t EPENA      : 1;            /*!< [31..31] Endpoint enable                                                  */
    } OTG_HS_DOEPCTL0_b;
  } ;
  __IM  uint32_t  RESERVED24;
  
  union {
    __IOM uint32_t OTG_HS_DOEPINT0;             /*!< (@ 0x00000308) OTG_HS device endpoint-0 interrupt register                */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed interrupt                                       */
      __IOM uint32_t EPDISD     : 1;            /*!< [1..1] Endpoint disabled interrupt                                        */
            uint32_t            : 1;
      __IOM uint32_t STUP       : 1;            /*!< [3..3] SETUP phase done                                                   */
      __IOM uint32_t OTEPDIS    : 1;            /*!< [4..4] OUT token received when endpoint disabled                          */
            uint32_t            : 1;
      __IOM uint32_t B2BSTUP    : 1;            /*!< [6..6] Back-to-back SETUP packets received                                */
            uint32_t            : 7;
      __IOM uint32_t NYET       : 1;            /*!< [14..14] NYET interrupt                                                   */
            uint32_t            : 17;
    } OTG_HS_DOEPINT0_b;
  } ;
  __IM  uint32_t  RESERVED25;
  
  union {
    __IOM uint32_t OTG_HS_DOEPTSIZ0;            /*!< (@ 0x00000310) OTG_HS device endpoint-0 transfer size register            */
    
    struct {
      __IOM uint32_t XFRSIZ     : 7;            /*!< [6..0] Transfer size                                                      */
            uint32_t            : 12;
      __IOM uint32_t PKTCNT     : 1;            /*!< [19..19] Packet count                                                     */
            uint32_t            : 9;
      __IOM uint32_t STUPCNT    : 2;            /*!< [30..29] SETUP packet count                                               */
            uint32_t            : 1;
    } OTG_HS_DOEPTSIZ0_b;
  } ;
  __IM  uint32_t  RESERVED26[3];
  
  union {
    __IOM uint32_t OTG_HS_DOEPCTL1;             /*!< (@ 0x00000320) OTG device endpoint-1 control register                     */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
            uint32_t            : 4;
      __IOM uint32_t USBAEP     : 1;            /*!< [15..15] USB active endpoint                                              */
      __IM  uint32_t EONUM_DPID : 1;            /*!< [16..16] Even odd frame/Endpoint data PID                                 */
      __IM  uint32_t NAKSTS     : 1;            /*!< [17..17] NAK status                                                       */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
      __IOM uint32_t SNPM       : 1;            /*!< [20..20] Snoop mode                                                       */
      __IOM uint32_t Stall      : 1;            /*!< [21..21] STALL handshake                                                  */
            uint32_t            : 4;
      __OM  uint32_t CNAK       : 1;            /*!< [26..26] Clear NAK                                                        */
      __OM  uint32_t SNAK       : 1;            /*!< [27..27] Set NAK                                                          */
      __OM  uint32_t SD0PID_SEVNFRM : 1;        /*!< [28..28] Set DATA0 PID/Set even frame                                     */
      __OM  uint32_t SODDFRM    : 1;            /*!< [29..29] Set odd frame                                                    */
      __IOM uint32_t EPDIS      : 1;            /*!< [30..30] Endpoint disable                                                 */
      __IOM uint32_t EPENA      : 1;            /*!< [31..31] Endpoint enable                                                  */
    } OTG_HS_DOEPCTL1_b;
  } ;
  __IM  uint32_t  RESERVED27;
  
  union {
    __IOM uint32_t OTG_HS_DOEPINT1;             /*!< (@ 0x00000328) OTG_HS device endpoint-1 interrupt register                */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed interrupt                                       */
      __IOM uint32_t EPDISD     : 1;            /*!< [1..1] Endpoint disabled interrupt                                        */
            uint32_t            : 1;
      __IOM uint32_t STUP       : 1;            /*!< [3..3] SETUP phase done                                                   */
      __IOM uint32_t OTEPDIS    : 1;            /*!< [4..4] OUT token received when endpoint disabled                          */
            uint32_t            : 1;
      __IOM uint32_t B2BSTUP    : 1;            /*!< [6..6] Back-to-back SETUP packets received                                */
            uint32_t            : 7;
      __IOM uint32_t NYET       : 1;            /*!< [14..14] NYET interrupt                                                   */
            uint32_t            : 17;
    } OTG_HS_DOEPINT1_b;
  } ;
  __IM  uint32_t  RESERVED28;
  
  union {
    __IOM uint32_t OTG_HS_DOEPTSIZ1;            /*!< (@ 0x00000330) OTG_HS device endpoint-1 transfer size register            */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t RXDPID_STUPCNT : 2;        /*!< [30..29] Received data PID/SETUP packet count                             */
            uint32_t            : 1;
    } OTG_HS_DOEPTSIZ1_b;
  } ;
  __IM  uint32_t  RESERVED29[3];
  
  union {
    __IOM uint32_t OTG_HS_DOEPCTL2;             /*!< (@ 0x00000340) OTG device endpoint-2 control register                     */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
            uint32_t            : 4;
      __IOM uint32_t USBAEP     : 1;            /*!< [15..15] USB active endpoint                                              */
      __IM  uint32_t EONUM_DPID : 1;            /*!< [16..16] Even odd frame/Endpoint data PID                                 */
      __IM  uint32_t NAKSTS     : 1;            /*!< [17..17] NAK status                                                       */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
      __IOM uint32_t SNPM       : 1;            /*!< [20..20] Snoop mode                                                       */
      __IOM uint32_t Stall      : 1;            /*!< [21..21] STALL handshake                                                  */
            uint32_t            : 4;
      __OM  uint32_t CNAK       : 1;            /*!< [26..26] Clear NAK                                                        */
      __OM  uint32_t SNAK       : 1;            /*!< [27..27] Set NAK                                                          */
      __OM  uint32_t SD0PID_SEVNFRM : 1;        /*!< [28..28] Set DATA0 PID/Set even frame                                     */
      __OM  uint32_t SODDFRM    : 1;            /*!< [29..29] Set odd frame                                                    */
      __IOM uint32_t EPDIS      : 1;            /*!< [30..30] Endpoint disable                                                 */
      __IOM uint32_t EPENA      : 1;            /*!< [31..31] Endpoint enable                                                  */
    } OTG_HS_DOEPCTL2_b;
  } ;
  __IM  uint32_t  RESERVED30;
  
  union {
    __IOM uint32_t OTG_HS_DOEPINT2;             /*!< (@ 0x00000348) OTG_HS device endpoint-2 interrupt register                */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed interrupt                                       */
      __IOM uint32_t EPDISD     : 1;            /*!< [1..1] Endpoint disabled interrupt                                        */
            uint32_t            : 1;
      __IOM uint32_t STUP       : 1;            /*!< [3..3] SETUP phase done                                                   */
      __IOM uint32_t OTEPDIS    : 1;            /*!< [4..4] OUT token received when endpoint disabled                          */
            uint32_t            : 1;
      __IOM uint32_t B2BSTUP    : 1;            /*!< [6..6] Back-to-back SETUP packets received                                */
            uint32_t            : 7;
      __IOM uint32_t NYET       : 1;            /*!< [14..14] NYET interrupt                                                   */
            uint32_t            : 17;
    } OTG_HS_DOEPINT2_b;
  } ;
  __IM  uint32_t  RESERVED31;
  
  union {
    __IOM uint32_t OTG_HS_DOEPTSIZ2;            /*!< (@ 0x00000350) OTG_HS device endpoint-2 transfer size register            */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t RXDPID_STUPCNT : 2;        /*!< [30..29] Received data PID/SETUP packet count                             */
            uint32_t            : 1;
    } OTG_HS_DOEPTSIZ2_b;
  } ;
  __IM  uint32_t  RESERVED32[3];
  
  union {
    __IOM uint32_t OTG_HS_DOEPCTL3;             /*!< (@ 0x00000360) OTG device endpoint-3 control register                     */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
            uint32_t            : 4;
      __IOM uint32_t USBAEP     : 1;            /*!< [15..15] USB active endpoint                                              */
      __IM  uint32_t EONUM_DPID : 1;            /*!< [16..16] Even odd frame/Endpoint data PID                                 */
      __IM  uint32_t NAKSTS     : 1;            /*!< [17..17] NAK status                                                       */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
      __IOM uint32_t SNPM       : 1;            /*!< [20..20] Snoop mode                                                       */
      __IOM uint32_t Stall      : 1;            /*!< [21..21] STALL handshake                                                  */
            uint32_t            : 4;
      __OM  uint32_t CNAK       : 1;            /*!< [26..26] Clear NAK                                                        */
      __OM  uint32_t SNAK       : 1;            /*!< [27..27] Set NAK                                                          */
      __OM  uint32_t SD0PID_SEVNFRM : 1;        /*!< [28..28] Set DATA0 PID/Set even frame                                     */
      __OM  uint32_t SODDFRM    : 1;            /*!< [29..29] Set odd frame                                                    */
      __IOM uint32_t EPDIS      : 1;            /*!< [30..30] Endpoint disable                                                 */
      __IOM uint32_t EPENA      : 1;            /*!< [31..31] Endpoint enable                                                  */
    } OTG_HS_DOEPCTL3_b;
  } ;
  __IM  uint32_t  RESERVED33;
  
  union {
    __IOM uint32_t OTG_HS_DOEPINT3;             /*!< (@ 0x00000368) OTG_HS device endpoint-3 interrupt register                */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed interrupt                                       */
      __IOM uint32_t EPDISD     : 1;            /*!< [1..1] Endpoint disabled interrupt                                        */
            uint32_t            : 1;
      __IOM uint32_t STUP       : 1;            /*!< [3..3] SETUP phase done                                                   */
      __IOM uint32_t OTEPDIS    : 1;            /*!< [4..4] OUT token received when endpoint disabled                          */
            uint32_t            : 1;
      __IOM uint32_t B2BSTUP    : 1;            /*!< [6..6] Back-to-back SETUP packets received                                */
            uint32_t            : 7;
      __IOM uint32_t NYET       : 1;            /*!< [14..14] NYET interrupt                                                   */
            uint32_t            : 17;
    } OTG_HS_DOEPINT3_b;
  } ;
  __IM  uint32_t  RESERVED34;
  
  union {
    __IOM uint32_t OTG_HS_DOEPTSIZ3;            /*!< (@ 0x00000370) OTG_HS device endpoint-3 transfer size register            */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t RXDPID_STUPCNT : 2;        /*!< [30..29] Received data PID/SETUP packet count                             */
            uint32_t            : 1;
    } OTG_HS_DOEPTSIZ3_b;
  } ;
  __IM  uint32_t  RESERVED35[3];
  
  union {
    __IOM uint32_t OTG_HS_DOEPCTL4;             /*!< (@ 0x00000380) OTG device endpoint-4 control register                     */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
            uint32_t            : 4;
      __IOM uint32_t USBAEP     : 1;            /*!< [15..15] USB active endpoint                                              */
      __IM  uint32_t EONUM_DPID : 1;            /*!< [16..16] Even odd frame/Endpoint data PID                                 */
      __IM  uint32_t NAKSTS     : 1;            /*!< [17..17] NAK status                                                       */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
      __IOM uint32_t SNPM       : 1;            /*!< [20..20] Snoop mode                                                       */
      __IOM uint32_t Stall      : 1;            /*!< [21..21] STALL handshake                                                  */
            uint32_t            : 4;
      __OM  uint32_t CNAK       : 1;            /*!< [26..26] Clear NAK                                                        */
      __OM  uint32_t SNAK       : 1;            /*!< [27..27] Set NAK                                                          */
      __OM  uint32_t SD0PID_SEVNFRM : 1;        /*!< [28..28] Set DATA0 PID/Set even frame                                     */
      __OM  uint32_t SODDFRM    : 1;            /*!< [29..29] Set odd frame                                                    */
      __IOM uint32_t EPDIS      : 1;            /*!< [30..30] Endpoint disable                                                 */
      __IOM uint32_t EPENA      : 1;            /*!< [31..31] Endpoint enable                                                  */
    } OTG_HS_DOEPCTL4_b;
  } ;
  __IM  uint32_t  RESERVED36;
  
  union {
    __IOM uint32_t OTG_HS_DOEPINT4;             /*!< (@ 0x00000388) OTG_HS device endpoint-4 interrupt register                */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed interrupt                                       */
      __IOM uint32_t EPDISD     : 1;            /*!< [1..1] Endpoint disabled interrupt                                        */
            uint32_t            : 1;
      __IOM uint32_t STUP       : 1;            /*!< [3..3] SETUP phase done                                                   */
      __IOM uint32_t OTEPDIS    : 1;            /*!< [4..4] OUT token received when endpoint disabled                          */
            uint32_t            : 1;
      __IOM uint32_t B2BSTUP    : 1;            /*!< [6..6] Back-to-back SETUP packets received                                */
            uint32_t            : 7;
      __IOM uint32_t NYET       : 1;            /*!< [14..14] NYET interrupt                                                   */
            uint32_t            : 17;
    } OTG_HS_DOEPINT4_b;
  } ;
  __IM  uint32_t  RESERVED37;
  
  union {
    __IOM uint32_t OTG_HS_DOEPTSIZ4;            /*!< (@ 0x00000390) OTG_HS device endpoint-4 transfer size register            */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t RXDPID_STUPCNT : 2;        /*!< [30..29] Received data PID/SETUP packet count                             */
            uint32_t            : 1;
    } OTG_HS_DOEPTSIZ4_b;
  } ;
  __IM  uint32_t  RESERVED38[3];
  
  union {
    __IOM uint32_t OTG_HS_DOEPCTL5;             /*!< (@ 0x000003A0) OTG device endpoint-5 control register                     */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
            uint32_t            : 4;
      __IOM uint32_t USBAEP     : 1;            /*!< [15..15] USB active endpoint                                              */
      __IM  uint32_t EONUM_DPID : 1;            /*!< [16..16] Even odd frame/Endpoint data PID                                 */
      __IM  uint32_t NAKSTS     : 1;            /*!< [17..17] NAK status                                                       */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
      __IOM uint32_t SNPM       : 1;            /*!< [20..20] Snoop mode                                                       */
      __IOM uint32_t Stall      : 1;            /*!< [21..21] STALL handshake                                                  */
            uint32_t            : 4;
      __OM  uint32_t CNAK       : 1;            /*!< [26..26] Clear NAK                                                        */
      __OM  uint32_t SNAK       : 1;            /*!< [27..27] Set NAK                                                          */
      __OM  uint32_t SD0PID_SEVNFRM : 1;        /*!< [28..28] Set DATA0 PID/Set even frame                                     */
      __OM  uint32_t SODDFRM    : 1;            /*!< [29..29] Set odd frame                                                    */
      __IOM uint32_t EPDIS      : 1;            /*!< [30..30] Endpoint disable                                                 */
      __IOM uint32_t EPENA      : 1;            /*!< [31..31] Endpoint enable                                                  */
    } OTG_HS_DOEPCTL5_b;
  } ;
  __IM  uint32_t  RESERVED39;
  
  union {
    __IOM uint32_t OTG_HS_DOEPINT5;             /*!< (@ 0x000003A8) OTG_HS device endpoint-5 interrupt register                */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed interrupt                                       */
      __IOM uint32_t EPDISD     : 1;            /*!< [1..1] Endpoint disabled interrupt                                        */
            uint32_t            : 1;
      __IOM uint32_t STUP       : 1;            /*!< [3..3] SETUP phase done                                                   */
      __IOM uint32_t OTEPDIS    : 1;            /*!< [4..4] OUT token received when endpoint disabled                          */
            uint32_t            : 1;
      __IOM uint32_t B2BSTUP    : 1;            /*!< [6..6] Back-to-back SETUP packets received                                */
            uint32_t            : 7;
      __IOM uint32_t NYET       : 1;            /*!< [14..14] NYET interrupt                                                   */
            uint32_t            : 17;
    } OTG_HS_DOEPINT5_b;
  } ;
  __IM  uint32_t  RESERVED40;
  
  union {
    __IOM uint32_t OTG_HS_DOEPTSIZ5;            /*!< (@ 0x000003B0) OTG_HS device endpoint-5 transfer size register            */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t RXDPID_STUPCNT : 2;        /*!< [30..29] Received data PID/SETUP packet count                             */
            uint32_t            : 1;
    } OTG_HS_DOEPTSIZ5_b;
  } ;
  __IM  uint32_t  RESERVED41[3];
  
  union {
    __IOM uint32_t OTG_HS_DOEPCTL6;             /*!< (@ 0x000003C0) OTG device endpoint-6 control register                     */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
            uint32_t            : 4;
      __IOM uint32_t USBAEP     : 1;            /*!< [15..15] USB active endpoint                                              */
      __IM  uint32_t EONUM_DPID : 1;            /*!< [16..16] Even odd frame/Endpoint data PID                                 */
      __IM  uint32_t NAKSTS     : 1;            /*!< [17..17] NAK status                                                       */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
      __IOM uint32_t SNPM       : 1;            /*!< [20..20] Snoop mode                                                       */
      __IOM uint32_t Stall      : 1;            /*!< [21..21] STALL handshake                                                  */
            uint32_t            : 4;
      __OM  uint32_t CNAK       : 1;            /*!< [26..26] Clear NAK                                                        */
      __OM  uint32_t SNAK       : 1;            /*!< [27..27] Set NAK                                                          */
      __OM  uint32_t SD0PID_SEVNFRM : 1;        /*!< [28..28] Set DATA0 PID/Set even frame                                     */
      __OM  uint32_t SODDFRM    : 1;            /*!< [29..29] Set odd frame                                                    */
      __IOM uint32_t EPDIS      : 1;            /*!< [30..30] Endpoint disable                                                 */
      __IOM uint32_t EPENA      : 1;            /*!< [31..31] Endpoint enable                                                  */
    } OTG_HS_DOEPCTL6_b;
  } ;
  __IM  uint32_t  RESERVED42;
  
  union {
    __IOM uint32_t OTG_HS_DOEPINT6;             /*!< (@ 0x000003C8) OTG_HS device endpoint-6 interrupt register                */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed interrupt                                       */
      __IOM uint32_t EPDISD     : 1;            /*!< [1..1] Endpoint disabled interrupt                                        */
            uint32_t            : 1;
      __IOM uint32_t STUP       : 1;            /*!< [3..3] SETUP phase done                                                   */
      __IOM uint32_t OTEPDIS    : 1;            /*!< [4..4] OUT token received when endpoint disabled                          */
            uint32_t            : 1;
      __IOM uint32_t B2BSTUP    : 1;            /*!< [6..6] Back-to-back SETUP packets received                                */
            uint32_t            : 7;
      __IOM uint32_t NYET       : 1;            /*!< [14..14] NYET interrupt                                                   */
            uint32_t            : 17;
    } OTG_HS_DOEPINT6_b;
  } ;
  __IM  uint32_t  RESERVED43;
  
  union {
    __IOM uint32_t OTG_HS_DOEPTSIZ6;            /*!< (@ 0x000003D0) OTG_HS device endpoint-6 transfer size register            */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t RXDPID_STUPCNT : 2;        /*!< [30..29] Received data PID/SETUP packet count                             */
            uint32_t            : 1;
    } OTG_HS_DOEPTSIZ6_b;
  } ;
  __IM  uint32_t  RESERVED44[3];
  
  union {
    __IOM uint32_t OTG_HS_DOEPCTL7;             /*!< (@ 0x000003E0) OTG device endpoint-7 control register                     */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
            uint32_t            : 4;
      __IOM uint32_t USBAEP     : 1;            /*!< [15..15] USB active endpoint                                              */
      __IM  uint32_t EONUM_DPID : 1;            /*!< [16..16] Even odd frame/Endpoint data PID                                 */
      __IM  uint32_t NAKSTS     : 1;            /*!< [17..17] NAK status                                                       */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
      __IOM uint32_t SNPM       : 1;            /*!< [20..20] Snoop mode                                                       */
      __IOM uint32_t Stall      : 1;            /*!< [21..21] STALL handshake                                                  */
            uint32_t            : 4;
      __OM  uint32_t CNAK       : 1;            /*!< [26..26] Clear NAK                                                        */
      __OM  uint32_t SNAK       : 1;            /*!< [27..27] Set NAK                                                          */
      __OM  uint32_t SD0PID_SEVNFRM : 1;        /*!< [28..28] Set DATA0 PID/Set even frame                                     */
      __OM  uint32_t SODDFRM    : 1;            /*!< [29..29] Set odd frame                                                    */
      __IOM uint32_t EPDIS      : 1;            /*!< [30..30] Endpoint disable                                                 */
      __IOM uint32_t EPENA      : 1;            /*!< [31..31] Endpoint enable                                                  */
    } OTG_HS_DOEPCTL7_b;
  } ;
  __IM  uint32_t  RESERVED45;
  
  union {
    __IOM uint32_t OTG_HS_DOEPINT7;             /*!< (@ 0x000003E8) OTG_HS device endpoint-7 interrupt register                */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed interrupt                                       */
      __IOM uint32_t EPDISD     : 1;            /*!< [1..1] Endpoint disabled interrupt                                        */
            uint32_t            : 1;
      __IOM uint32_t STUP       : 1;            /*!< [3..3] SETUP phase done                                                   */
      __IOM uint32_t OTEPDIS    : 1;            /*!< [4..4] OUT token received when endpoint disabled                          */
            uint32_t            : 1;
      __IOM uint32_t B2BSTUP    : 1;            /*!< [6..6] Back-to-back SETUP packets received                                */
            uint32_t            : 7;
      __IOM uint32_t NYET       : 1;            /*!< [14..14] NYET interrupt                                                   */
            uint32_t            : 17;
    } OTG_HS_DOEPINT7_b;
  } ;
  __IM  uint32_t  RESERVED46;
  
  union {
    __IOM uint32_t OTG_HS_DOEPTSIZ7;            /*!< (@ 0x000003F0) OTG_HS device endpoint-7 transfer size register            */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t RXDPID_STUPCNT : 2;        /*!< [30..29] Received data PID/SETUP packet count                             */
            uint32_t            : 1;
    } OTG_HS_DOEPTSIZ7_b;
  } ;
} OTG_HS_DEVICE_Type;                           /*!< Size = 1012 (0x3f4)                                                       */



/* =========================================================================================================================== */
/* ================                                        OTG_HS_HOST                                        ================ */
/* =========================================================================================================================== */


/**
  * @brief USB on the go high speed (OTG_HS_HOST)
  */

typedef struct {                                /*!< (@ 0x40040400) OTG_HS_HOST Structure                                      */
  
  union {
    __IOM uint32_t OTG_HS_HCFG;                 /*!< (@ 0x00000000) OTG_HS host configuration register                         */
    
    struct {
      __IOM uint32_t FSLSPCS    : 2;            /*!< [1..0] FS/LS PHY clock select                                             */
      __IM  uint32_t FSLSS      : 1;            /*!< [2..2] FS- and LS-only support                                            */
            uint32_t            : 29;
    } OTG_HS_HCFG_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HFIR;                 /*!< (@ 0x00000004) OTG_HS Host frame interval register                        */
    
    struct {
      __IOM uint32_t FRIVL      : 16;           /*!< [15..0] Frame interval                                                    */
            uint32_t            : 16;
    } OTG_HS_HFIR_b;
  } ;
  
  union {
    __IM  uint32_t OTG_HS_HFNUM;                /*!< (@ 0x00000008) OTG_HS host frame number/frame time remaining
                                                                    register                                                   */
    
    struct {
      __IM  uint32_t FRNUM      : 16;           /*!< [15..0] Frame number                                                      */
      __IM  uint32_t FTREM      : 16;           /*!< [31..16] Frame time remaining                                             */
    } OTG_HS_HFNUM_b;
  } ;
  __IM  uint32_t  RESERVED;
  
  union {
    __IOM uint32_t OTG_HS_HPTXSTS;              /*!< (@ 0x00000010) OTG_HS_Host periodic transmit FIFO/queue status
                                                                    register                                                   */
    
    struct {
      __IOM uint32_t PTXFSAVL   : 16;           /*!< [15..0] Periodic transmit data FIFO space available                       */
      __IM  uint32_t PTXQSAV    : 8;            /*!< [23..16] Periodic transmit request queue space available                  */
      __IM  uint32_t PTXQTOP    : 8;            /*!< [31..24] Top of the periodic transmit request queue                       */
    } OTG_HS_HPTXSTS_b;
  } ;
  
  union {
    __IM  uint32_t OTG_HS_HAINT;                /*!< (@ 0x00000014) OTG_HS Host all channels interrupt register                */
    
    struct {
      __IM  uint32_t HAINT      : 16;           /*!< [15..0] Channel interrupts                                                */
            uint32_t            : 16;
    } OTG_HS_HAINT_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HAINTMSK;             /*!< (@ 0x00000018) OTG_HS host all channels interrupt mask register           */
    
    struct {
      __IOM uint32_t HAINTM     : 16;           /*!< [15..0] Channel interrupt mask                                            */
            uint32_t            : 16;
    } OTG_HS_HAINTMSK_b;
  } ;
  __IM  uint32_t  RESERVED1[9];
  
  union {
    __IOM uint32_t OTG_HS_HPRT;                 /*!< (@ 0x00000040) OTG_HS host port control and status register               */
    
    struct {
      __IM  uint32_t PCSTS      : 1;            /*!< [0..0] Port connect status                                                */
      __IOM uint32_t PCDET      : 1;            /*!< [1..1] Port connect detected                                              */
      __IOM uint32_t PENA       : 1;            /*!< [2..2] Port enable                                                        */
      __IOM uint32_t PENCHNG    : 1;            /*!< [3..3] Port enable/disable change                                         */
      __IM  uint32_t POCA       : 1;            /*!< [4..4] Port overcurrent active                                            */
      __IOM uint32_t POCCHNG    : 1;            /*!< [5..5] Port overcurrent change                                            */
      __IOM uint32_t PRES       : 1;            /*!< [6..6] Port resume                                                        */
      __IOM uint32_t PSUSP      : 1;            /*!< [7..7] Port suspend                                                       */
      __IOM uint32_t PRST       : 1;            /*!< [8..8] Port reset                                                         */
            uint32_t            : 1;
      __IM  uint32_t PLSTS      : 2;            /*!< [11..10] Port line status                                                 */
      __IOM uint32_t PPWR       : 1;            /*!< [12..12] Port power                                                       */
      __IOM uint32_t PTCTL      : 4;            /*!< [16..13] Port test control                                                */
      __IM  uint32_t PSPD       : 2;            /*!< [18..17] Port speed                                                       */
            uint32_t            : 13;
    } OTG_HS_HPRT_b;
  } ;
  __IM  uint32_t  RESERVED2[47];
  
  union {
    __IOM uint32_t OTG_HS_HCCHAR0;              /*!< (@ 0x00000100) OTG_HS host channel-0 characteristics register             */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
      __IOM uint32_t EPNUM      : 4;            /*!< [14..11] Endpoint number                                                  */
      __IOM uint32_t EPDIR      : 1;            /*!< [15..15] Endpoint direction                                               */
            uint32_t            : 1;
      __IOM uint32_t LSDEV      : 1;            /*!< [17..17] Low-speed device                                                 */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
      __IOM uint32_t MC         : 2;            /*!< [21..20] Multi Count (MC) / Error Count (EC)                              */
      __IOM uint32_t DAD        : 7;            /*!< [28..22] Device address                                                   */
      __IOM uint32_t ODDFRM     : 1;            /*!< [29..29] Odd frame                                                        */
      __IOM uint32_t CHDIS      : 1;            /*!< [30..30] Channel disable                                                  */
      __IOM uint32_t CHENA      : 1;            /*!< [31..31] Channel enable                                                   */
    } OTG_HS_HCCHAR0_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCSPLT0;              /*!< (@ 0x00000104) OTG_HS host channel-0 split control register               */
    
    struct {
      __IOM uint32_t PRTADDR    : 7;            /*!< [6..0] Port address                                                       */
      __IOM uint32_t HUBADDR    : 7;            /*!< [13..7] Hub address                                                       */
      __IOM uint32_t XACTPOS    : 2;            /*!< [15..14] XACTPOS                                                          */
      __IOM uint32_t COMPLSPLT  : 1;            /*!< [16..16] Do complete split                                                */
            uint32_t            : 14;
      __IOM uint32_t SPLITEN    : 1;            /*!< [31..31] Split enable                                                     */
    } OTG_HS_HCSPLT0_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCINT0;               /*!< (@ 0x00000108) OTG_HS host channel-11 interrupt register                  */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed                                                 */
      __IOM uint32_t CHH        : 1;            /*!< [1..1] Channel halted                                                     */
      __IOM uint32_t AHBERR     : 1;            /*!< [2..2] AHB error                                                          */
      __IOM uint32_t STALL      : 1;            /*!< [3..3] STALL response received interrupt                                  */
      __IOM uint32_t NAK        : 1;            /*!< [4..4] NAK response received interrupt                                    */
      __IOM uint32_t ACK        : 1;            /*!< [5..5] ACK response received/transmitted interrupt                        */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] Response received interrupt                                        */
      __IOM uint32_t TXERR      : 1;            /*!< [7..7] Transaction error                                                  */
      __IOM uint32_t BBERR      : 1;            /*!< [8..8] Babble error                                                       */
      __IOM uint32_t FRMOR      : 1;            /*!< [9..9] Frame overrun                                                      */
      __IOM uint32_t DTERR      : 1;            /*!< [10..10] Data toggle error                                                */
            uint32_t            : 21;
    } OTG_HS_HCINT0_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCINTMSK0;            /*!< (@ 0x0000010C) OTG_HS host channel-11 interrupt mask register             */
    
    struct {
      __IOM uint32_t XFRCM      : 1;            /*!< [0..0] Transfer completed mask                                            */
      __IOM uint32_t CHHM       : 1;            /*!< [1..1] Channel halted mask                                                */
      __IOM uint32_t AHBERR     : 1;            /*!< [2..2] AHB error                                                          */
      __IOM uint32_t STALLM     : 1;            /*!< [3..3] STALL response received interrupt mask                             */
      __IOM uint32_t NAKM       : 1;            /*!< [4..4] NAK response received interrupt mask                               */
      __IOM uint32_t ACKM       : 1;            /*!< [5..5] ACK response received/transmitted interrupt mask                   */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] response received interrupt mask                                   */
      __IOM uint32_t TXERRM     : 1;            /*!< [7..7] Transaction error mask                                             */
      __IOM uint32_t BBERRM     : 1;            /*!< [8..8] Babble error mask                                                  */
      __IOM uint32_t FRMORM     : 1;            /*!< [9..9] Frame overrun mask                                                 */
      __IOM uint32_t DTERRM     : 1;            /*!< [10..10] Data toggle error mask                                           */
            uint32_t            : 21;
    } OTG_HS_HCINTMSK0_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCTSIZ0;              /*!< (@ 0x00000110) OTG_HS host channel-11 transfer size register              */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t DPID       : 2;            /*!< [30..29] Data PID                                                         */
            uint32_t            : 1;
    } OTG_HS_HCTSIZ0_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCDMA0;               /*!< (@ 0x00000114) OTG_HS host channel-0 DMA address register                 */
    
    struct {
      __IOM uint32_t DMAADDR    : 32;           /*!< [31..0] DMA address                                                       */
    } OTG_HS_HCDMA0_b;
  } ;
  __IM  uint32_t  RESERVED3[2];
  
  union {
    __IOM uint32_t OTG_HS_HCCHAR1;              /*!< (@ 0x00000120) OTG_HS host channel-1 characteristics register             */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
      __IOM uint32_t EPNUM      : 4;            /*!< [14..11] Endpoint number                                                  */
      __IOM uint32_t EPDIR      : 1;            /*!< [15..15] Endpoint direction                                               */
            uint32_t            : 1;
      __IOM uint32_t LSDEV      : 1;            /*!< [17..17] Low-speed device                                                 */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
      __IOM uint32_t MC         : 2;            /*!< [21..20] Multi Count (MC) / Error Count (EC)                              */
      __IOM uint32_t DAD        : 7;            /*!< [28..22] Device address                                                   */
      __IOM uint32_t ODDFRM     : 1;            /*!< [29..29] Odd frame                                                        */
      __IOM uint32_t CHDIS      : 1;            /*!< [30..30] Channel disable                                                  */
      __IOM uint32_t CHENA      : 1;            /*!< [31..31] Channel enable                                                   */
    } OTG_HS_HCCHAR1_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCSPLT1;              /*!< (@ 0x00000124) OTG_HS host channel-1 split control register               */
    
    struct {
      __IOM uint32_t PRTADDR    : 7;            /*!< [6..0] Port address                                                       */
      __IOM uint32_t HUBADDR    : 7;            /*!< [13..7] Hub address                                                       */
      __IOM uint32_t XACTPOS    : 2;            /*!< [15..14] XACTPOS                                                          */
      __IOM uint32_t COMPLSPLT  : 1;            /*!< [16..16] Do complete split                                                */
            uint32_t            : 14;
      __IOM uint32_t SPLITEN    : 1;            /*!< [31..31] Split enable                                                     */
    } OTG_HS_HCSPLT1_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCINT1;               /*!< (@ 0x00000128) OTG_HS host channel-1 interrupt register                   */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed                                                 */
      __IOM uint32_t CHH        : 1;            /*!< [1..1] Channel halted                                                     */
      __IOM uint32_t AHBERR     : 1;            /*!< [2..2] AHB error                                                          */
      __IOM uint32_t STALL      : 1;            /*!< [3..3] STALL response received interrupt                                  */
      __IOM uint32_t NAK        : 1;            /*!< [4..4] NAK response received interrupt                                    */
      __IOM uint32_t ACK        : 1;            /*!< [5..5] ACK response received/transmitted interrupt                        */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] Response received interrupt                                        */
      __IOM uint32_t TXERR      : 1;            /*!< [7..7] Transaction error                                                  */
      __IOM uint32_t BBERR      : 1;            /*!< [8..8] Babble error                                                       */
      __IOM uint32_t FRMOR      : 1;            /*!< [9..9] Frame overrun                                                      */
      __IOM uint32_t DTERR      : 1;            /*!< [10..10] Data toggle error                                                */
            uint32_t            : 21;
    } OTG_HS_HCINT1_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCINTMSK1;            /*!< (@ 0x0000012C) OTG_HS host channel-1 interrupt mask register              */
    
    struct {
      __IOM uint32_t XFRCM      : 1;            /*!< [0..0] Transfer completed mask                                            */
      __IOM uint32_t CHHM       : 1;            /*!< [1..1] Channel halted mask                                                */
      __IOM uint32_t AHBERR     : 1;            /*!< [2..2] AHB error                                                          */
      __IOM uint32_t STALLM     : 1;            /*!< [3..3] STALL response received interrupt mask                             */
      __IOM uint32_t NAKM       : 1;            /*!< [4..4] NAK response received interrupt mask                               */
      __IOM uint32_t ACKM       : 1;            /*!< [5..5] ACK response received/transmitted interrupt mask                   */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] response received interrupt mask                                   */
      __IOM uint32_t TXERRM     : 1;            /*!< [7..7] Transaction error mask                                             */
      __IOM uint32_t BBERRM     : 1;            /*!< [8..8] Babble error mask                                                  */
      __IOM uint32_t FRMORM     : 1;            /*!< [9..9] Frame overrun mask                                                 */
      __IOM uint32_t DTERRM     : 1;            /*!< [10..10] Data toggle error mask                                           */
            uint32_t            : 21;
    } OTG_HS_HCINTMSK1_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCTSIZ1;              /*!< (@ 0x00000130) OTG_HS host channel-1 transfer size register               */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t DPID       : 2;            /*!< [30..29] Data PID                                                         */
            uint32_t            : 1;
    } OTG_HS_HCTSIZ1_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCDMA1;               /*!< (@ 0x00000134) OTG_HS host channel-1 DMA address register                 */
    
    struct {
      __IOM uint32_t DMAADDR    : 32;           /*!< [31..0] DMA address                                                       */
    } OTG_HS_HCDMA1_b;
  } ;
  __IM  uint32_t  RESERVED4[2];
  
  union {
    __IOM uint32_t OTG_HS_HCCHAR2;              /*!< (@ 0x00000140) OTG_HS host channel-2 characteristics register             */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
      __IOM uint32_t EPNUM      : 4;            /*!< [14..11] Endpoint number                                                  */
      __IOM uint32_t EPDIR      : 1;            /*!< [15..15] Endpoint direction                                               */
            uint32_t            : 1;
      __IOM uint32_t LSDEV      : 1;            /*!< [17..17] Low-speed device                                                 */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
      __IOM uint32_t MC         : 2;            /*!< [21..20] Multi Count (MC) / Error Count (EC)                              */
      __IOM uint32_t DAD        : 7;            /*!< [28..22] Device address                                                   */
      __IOM uint32_t ODDFRM     : 1;            /*!< [29..29] Odd frame                                                        */
      __IOM uint32_t CHDIS      : 1;            /*!< [30..30] Channel disable                                                  */
      __IOM uint32_t CHENA      : 1;            /*!< [31..31] Channel enable                                                   */
    } OTG_HS_HCCHAR2_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCSPLT2;              /*!< (@ 0x00000144) OTG_HS host channel-2 split control register               */
    
    struct {
      __IOM uint32_t PRTADDR    : 7;            /*!< [6..0] Port address                                                       */
      __IOM uint32_t HUBADDR    : 7;            /*!< [13..7] Hub address                                                       */
      __IOM uint32_t XACTPOS    : 2;            /*!< [15..14] XACTPOS                                                          */
      __IOM uint32_t COMPLSPLT  : 1;            /*!< [16..16] Do complete split                                                */
            uint32_t            : 14;
      __IOM uint32_t SPLITEN    : 1;            /*!< [31..31] Split enable                                                     */
    } OTG_HS_HCSPLT2_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCINT2;               /*!< (@ 0x00000148) OTG_HS host channel-2 interrupt register                   */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed                                                 */
      __IOM uint32_t CHH        : 1;            /*!< [1..1] Channel halted                                                     */
      __IOM uint32_t AHBERR     : 1;            /*!< [2..2] AHB error                                                          */
      __IOM uint32_t STALL      : 1;            /*!< [3..3] STALL response received interrupt                                  */
      __IOM uint32_t NAK        : 1;            /*!< [4..4] NAK response received interrupt                                    */
      __IOM uint32_t ACK        : 1;            /*!< [5..5] ACK response received/transmitted interrupt                        */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] Response received interrupt                                        */
      __IOM uint32_t TXERR      : 1;            /*!< [7..7] Transaction error                                                  */
      __IOM uint32_t BBERR      : 1;            /*!< [8..8] Babble error                                                       */
      __IOM uint32_t FRMOR      : 1;            /*!< [9..9] Frame overrun                                                      */
      __IOM uint32_t DTERR      : 1;            /*!< [10..10] Data toggle error                                                */
            uint32_t            : 21;
    } OTG_HS_HCINT2_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCINTMSK2;            /*!< (@ 0x0000014C) OTG_HS host channel-2 interrupt mask register              */
    
    struct {
      __IOM uint32_t XFRCM      : 1;            /*!< [0..0] Transfer completed mask                                            */
      __IOM uint32_t CHHM       : 1;            /*!< [1..1] Channel halted mask                                                */
      __IOM uint32_t AHBERR     : 1;            /*!< [2..2] AHB error                                                          */
      __IOM uint32_t STALLM     : 1;            /*!< [3..3] STALL response received interrupt mask                             */
      __IOM uint32_t NAKM       : 1;            /*!< [4..4] NAK response received interrupt mask                               */
      __IOM uint32_t ACKM       : 1;            /*!< [5..5] ACK response received/transmitted interrupt mask                   */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] response received interrupt mask                                   */
      __IOM uint32_t TXERRM     : 1;            /*!< [7..7] Transaction error mask                                             */
      __IOM uint32_t BBERRM     : 1;            /*!< [8..8] Babble error mask                                                  */
      __IOM uint32_t FRMORM     : 1;            /*!< [9..9] Frame overrun mask                                                 */
      __IOM uint32_t DTERRM     : 1;            /*!< [10..10] Data toggle error mask                                           */
            uint32_t            : 21;
    } OTG_HS_HCINTMSK2_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCTSIZ2;              /*!< (@ 0x00000150) OTG_HS host channel-2 transfer size register               */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t DPID       : 2;            /*!< [30..29] Data PID                                                         */
            uint32_t            : 1;
    } OTG_HS_HCTSIZ2_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCDMA2;               /*!< (@ 0x00000154) OTG_HS host channel-2 DMA address register                 */
    
    struct {
      __IOM uint32_t DMAADDR    : 32;           /*!< [31..0] DMA address                                                       */
    } OTG_HS_HCDMA2_b;
  } ;
  __IM  uint32_t  RESERVED5[2];
  
  union {
    __IOM uint32_t OTG_HS_HCCHAR3;              /*!< (@ 0x00000160) OTG_HS host channel-3 characteristics register             */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
      __IOM uint32_t EPNUM      : 4;            /*!< [14..11] Endpoint number                                                  */
      __IOM uint32_t EPDIR      : 1;            /*!< [15..15] Endpoint direction                                               */
            uint32_t            : 1;
      __IOM uint32_t LSDEV      : 1;            /*!< [17..17] Low-speed device                                                 */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
      __IOM uint32_t MC         : 2;            /*!< [21..20] Multi Count (MC) / Error Count (EC)                              */
      __IOM uint32_t DAD        : 7;            /*!< [28..22] Device address                                                   */
      __IOM uint32_t ODDFRM     : 1;            /*!< [29..29] Odd frame                                                        */
      __IOM uint32_t CHDIS      : 1;            /*!< [30..30] Channel disable                                                  */
      __IOM uint32_t CHENA      : 1;            /*!< [31..31] Channel enable                                                   */
    } OTG_HS_HCCHAR3_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCSPLT3;              /*!< (@ 0x00000164) OTG_HS host channel-3 split control register               */
    
    struct {
      __IOM uint32_t PRTADDR    : 7;            /*!< [6..0] Port address                                                       */
      __IOM uint32_t HUBADDR    : 7;            /*!< [13..7] Hub address                                                       */
      __IOM uint32_t XACTPOS    : 2;            /*!< [15..14] XACTPOS                                                          */
      __IOM uint32_t COMPLSPLT  : 1;            /*!< [16..16] Do complete split                                                */
            uint32_t            : 14;
      __IOM uint32_t SPLITEN    : 1;            /*!< [31..31] Split enable                                                     */
    } OTG_HS_HCSPLT3_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCINT3;               /*!< (@ 0x00000168) OTG_HS host channel-3 interrupt register                   */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed                                                 */
      __IOM uint32_t CHH        : 1;            /*!< [1..1] Channel halted                                                     */
      __IOM uint32_t AHBERR     : 1;            /*!< [2..2] AHB error                                                          */
      __IOM uint32_t STALL      : 1;            /*!< [3..3] STALL response received interrupt                                  */
      __IOM uint32_t NAK        : 1;            /*!< [4..4] NAK response received interrupt                                    */
      __IOM uint32_t ACK        : 1;            /*!< [5..5] ACK response received/transmitted interrupt                        */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] Response received interrupt                                        */
      __IOM uint32_t TXERR      : 1;            /*!< [7..7] Transaction error                                                  */
      __IOM uint32_t BBERR      : 1;            /*!< [8..8] Babble error                                                       */
      __IOM uint32_t FRMOR      : 1;            /*!< [9..9] Frame overrun                                                      */
      __IOM uint32_t DTERR      : 1;            /*!< [10..10] Data toggle error                                                */
            uint32_t            : 21;
    } OTG_HS_HCINT3_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCINTMSK3;            /*!< (@ 0x0000016C) OTG_HS host channel-3 interrupt mask register              */
    
    struct {
      __IOM uint32_t XFRCM      : 1;            /*!< [0..0] Transfer completed mask                                            */
      __IOM uint32_t CHHM       : 1;            /*!< [1..1] Channel halted mask                                                */
      __IOM uint32_t AHBERR     : 1;            /*!< [2..2] AHB error                                                          */
      __IOM uint32_t STALLM     : 1;            /*!< [3..3] STALL response received interrupt mask                             */
      __IOM uint32_t NAKM       : 1;            /*!< [4..4] NAK response received interrupt mask                               */
      __IOM uint32_t ACKM       : 1;            /*!< [5..5] ACK response received/transmitted interrupt mask                   */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] response received interrupt mask                                   */
      __IOM uint32_t TXERRM     : 1;            /*!< [7..7] Transaction error mask                                             */
      __IOM uint32_t BBERRM     : 1;            /*!< [8..8] Babble error mask                                                  */
      __IOM uint32_t FRMORM     : 1;            /*!< [9..9] Frame overrun mask                                                 */
      __IOM uint32_t DTERRM     : 1;            /*!< [10..10] Data toggle error mask                                           */
            uint32_t            : 21;
    } OTG_HS_HCINTMSK3_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCTSIZ3;              /*!< (@ 0x00000170) OTG_HS host channel-3 transfer size register               */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t DPID       : 2;            /*!< [30..29] Data PID                                                         */
            uint32_t            : 1;
    } OTG_HS_HCTSIZ3_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCDMA3;               /*!< (@ 0x00000174) OTG_HS host channel-3 DMA address register                 */
    
    struct {
      __IOM uint32_t DMAADDR    : 32;           /*!< [31..0] DMA address                                                       */
    } OTG_HS_HCDMA3_b;
  } ;
  __IM  uint32_t  RESERVED6[2];
  
  union {
    __IOM uint32_t OTG_HS_HCCHAR4;              /*!< (@ 0x00000180) OTG_HS host channel-4 characteristics register             */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
      __IOM uint32_t EPNUM      : 4;            /*!< [14..11] Endpoint number                                                  */
      __IOM uint32_t EPDIR      : 1;            /*!< [15..15] Endpoint direction                                               */
            uint32_t            : 1;
      __IOM uint32_t LSDEV      : 1;            /*!< [17..17] Low-speed device                                                 */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
      __IOM uint32_t MC         : 2;            /*!< [21..20] Multi Count (MC) / Error Count (EC)                              */
      __IOM uint32_t DAD        : 7;            /*!< [28..22] Device address                                                   */
      __IOM uint32_t ODDFRM     : 1;            /*!< [29..29] Odd frame                                                        */
      __IOM uint32_t CHDIS      : 1;            /*!< [30..30] Channel disable                                                  */
      __IOM uint32_t CHENA      : 1;            /*!< [31..31] Channel enable                                                   */
    } OTG_HS_HCCHAR4_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCSPLT4;              /*!< (@ 0x00000184) OTG_HS host channel-4 split control register               */
    
    struct {
      __IOM uint32_t PRTADDR    : 7;            /*!< [6..0] Port address                                                       */
      __IOM uint32_t HUBADDR    : 7;            /*!< [13..7] Hub address                                                       */
      __IOM uint32_t XACTPOS    : 2;            /*!< [15..14] XACTPOS                                                          */
      __IOM uint32_t COMPLSPLT  : 1;            /*!< [16..16] Do complete split                                                */
            uint32_t            : 14;
      __IOM uint32_t SPLITEN    : 1;            /*!< [31..31] Split enable                                                     */
    } OTG_HS_HCSPLT4_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCINT4;               /*!< (@ 0x00000188) OTG_HS host channel-4 interrupt register                   */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed                                                 */
      __IOM uint32_t CHH        : 1;            /*!< [1..1] Channel halted                                                     */
      __IOM uint32_t AHBERR     : 1;            /*!< [2..2] AHB error                                                          */
      __IOM uint32_t STALL      : 1;            /*!< [3..3] STALL response received interrupt                                  */
      __IOM uint32_t NAK        : 1;            /*!< [4..4] NAK response received interrupt                                    */
      __IOM uint32_t ACK        : 1;            /*!< [5..5] ACK response received/transmitted interrupt                        */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] Response received interrupt                                        */
      __IOM uint32_t TXERR      : 1;            /*!< [7..7] Transaction error                                                  */
      __IOM uint32_t BBERR      : 1;            /*!< [8..8] Babble error                                                       */
      __IOM uint32_t FRMOR      : 1;            /*!< [9..9] Frame overrun                                                      */
      __IOM uint32_t DTERR      : 1;            /*!< [10..10] Data toggle error                                                */
            uint32_t            : 21;
    } OTG_HS_HCINT4_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCINTMSK4;            /*!< (@ 0x0000018C) OTG_HS host channel-4 interrupt mask register              */
    
    struct {
      __IOM uint32_t XFRCM      : 1;            /*!< [0..0] Transfer completed mask                                            */
      __IOM uint32_t CHHM       : 1;            /*!< [1..1] Channel halted mask                                                */
      __IOM uint32_t AHBERR     : 1;            /*!< [2..2] AHB error                                                          */
      __IOM uint32_t STALLM     : 1;            /*!< [3..3] STALL response received interrupt mask                             */
      __IOM uint32_t NAKM       : 1;            /*!< [4..4] NAK response received interrupt mask                               */
      __IOM uint32_t ACKM       : 1;            /*!< [5..5] ACK response received/transmitted interrupt mask                   */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] response received interrupt mask                                   */
      __IOM uint32_t TXERRM     : 1;            /*!< [7..7] Transaction error mask                                             */
      __IOM uint32_t BBERRM     : 1;            /*!< [8..8] Babble error mask                                                  */
      __IOM uint32_t FRMORM     : 1;            /*!< [9..9] Frame overrun mask                                                 */
      __IOM uint32_t DTERRM     : 1;            /*!< [10..10] Data toggle error mask                                           */
            uint32_t            : 21;
    } OTG_HS_HCINTMSK4_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCTSIZ4;              /*!< (@ 0x00000190) OTG_HS host channel-4 transfer size register               */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t DPID       : 2;            /*!< [30..29] Data PID                                                         */
            uint32_t            : 1;
    } OTG_HS_HCTSIZ4_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCDMA4;               /*!< (@ 0x00000194) OTG_HS host channel-4 DMA address register                 */
    
    struct {
      __IOM uint32_t DMAADDR    : 32;           /*!< [31..0] DMA address                                                       */
    } OTG_HS_HCDMA4_b;
  } ;
  __IM  uint32_t  RESERVED7[2];
  
  union {
    __IOM uint32_t OTG_HS_HCCHAR5;              /*!< (@ 0x000001A0) OTG_HS host channel-5 characteristics register             */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
      __IOM uint32_t EPNUM      : 4;            /*!< [14..11] Endpoint number                                                  */
      __IOM uint32_t EPDIR      : 1;            /*!< [15..15] Endpoint direction                                               */
            uint32_t            : 1;
      __IOM uint32_t LSDEV      : 1;            /*!< [17..17] Low-speed device                                                 */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
      __IOM uint32_t MC         : 2;            /*!< [21..20] Multi Count (MC) / Error Count (EC)                              */
      __IOM uint32_t DAD        : 7;            /*!< [28..22] Device address                                                   */
      __IOM uint32_t ODDFRM     : 1;            /*!< [29..29] Odd frame                                                        */
      __IOM uint32_t CHDIS      : 1;            /*!< [30..30] Channel disable                                                  */
      __IOM uint32_t CHENA      : 1;            /*!< [31..31] Channel enable                                                   */
    } OTG_HS_HCCHAR5_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCSPLT5;              /*!< (@ 0x000001A4) OTG_HS host channel-5 split control register               */
    
    struct {
      __IOM uint32_t PRTADDR    : 7;            /*!< [6..0] Port address                                                       */
      __IOM uint32_t HUBADDR    : 7;            /*!< [13..7] Hub address                                                       */
      __IOM uint32_t XACTPOS    : 2;            /*!< [15..14] XACTPOS                                                          */
      __IOM uint32_t COMPLSPLT  : 1;            /*!< [16..16] Do complete split                                                */
            uint32_t            : 14;
      __IOM uint32_t SPLITEN    : 1;            /*!< [31..31] Split enable                                                     */
    } OTG_HS_HCSPLT5_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCINT5;               /*!< (@ 0x000001A8) OTG_HS host channel-5 interrupt register                   */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed                                                 */
      __IOM uint32_t CHH        : 1;            /*!< [1..1] Channel halted                                                     */
      __IOM uint32_t AHBERR     : 1;            /*!< [2..2] AHB error                                                          */
      __IOM uint32_t STALL      : 1;            /*!< [3..3] STALL response received interrupt                                  */
      __IOM uint32_t NAK        : 1;            /*!< [4..4] NAK response received interrupt                                    */
      __IOM uint32_t ACK        : 1;            /*!< [5..5] ACK response received/transmitted interrupt                        */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] Response received interrupt                                        */
      __IOM uint32_t TXERR      : 1;            /*!< [7..7] Transaction error                                                  */
      __IOM uint32_t BBERR      : 1;            /*!< [8..8] Babble error                                                       */
      __IOM uint32_t FRMOR      : 1;            /*!< [9..9] Frame overrun                                                      */
      __IOM uint32_t DTERR      : 1;            /*!< [10..10] Data toggle error                                                */
            uint32_t            : 21;
    } OTG_HS_HCINT5_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCINTMSK5;            /*!< (@ 0x000001AC) OTG_HS host channel-5 interrupt mask register              */
    
    struct {
      __IOM uint32_t XFRCM      : 1;            /*!< [0..0] Transfer completed mask                                            */
      __IOM uint32_t CHHM       : 1;            /*!< [1..1] Channel halted mask                                                */
      __IOM uint32_t AHBERR     : 1;            /*!< [2..2] AHB error                                                          */
      __IOM uint32_t STALLM     : 1;            /*!< [3..3] STALL response received interrupt mask                             */
      __IOM uint32_t NAKM       : 1;            /*!< [4..4] NAK response received interrupt mask                               */
      __IOM uint32_t ACKM       : 1;            /*!< [5..5] ACK response received/transmitted interrupt mask                   */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] response received interrupt mask                                   */
      __IOM uint32_t TXERRM     : 1;            /*!< [7..7] Transaction error mask                                             */
      __IOM uint32_t BBERRM     : 1;            /*!< [8..8] Babble error mask                                                  */
      __IOM uint32_t FRMORM     : 1;            /*!< [9..9] Frame overrun mask                                                 */
      __IOM uint32_t DTERRM     : 1;            /*!< [10..10] Data toggle error mask                                           */
            uint32_t            : 21;
    } OTG_HS_HCINTMSK5_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCTSIZ5;              /*!< (@ 0x000001B0) OTG_HS host channel-5 transfer size register               */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t DPID       : 2;            /*!< [30..29] Data PID                                                         */
            uint32_t            : 1;
    } OTG_HS_HCTSIZ5_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCDMA5;               /*!< (@ 0x000001B4) OTG_HS host channel-5 DMA address register                 */
    
    struct {
      __IOM uint32_t DMAADDR    : 32;           /*!< [31..0] DMA address                                                       */
    } OTG_HS_HCDMA5_b;
  } ;
  __IM  uint32_t  RESERVED8[2];
  
  union {
    __IOM uint32_t OTG_HS_HCCHAR6;              /*!< (@ 0x000001C0) OTG_HS host channel-6 characteristics register             */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
      __IOM uint32_t EPNUM      : 4;            /*!< [14..11] Endpoint number                                                  */
      __IOM uint32_t EPDIR      : 1;            /*!< [15..15] Endpoint direction                                               */
            uint32_t            : 1;
      __IOM uint32_t LSDEV      : 1;            /*!< [17..17] Low-speed device                                                 */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
      __IOM uint32_t MC         : 2;            /*!< [21..20] Multi Count (MC) / Error Count (EC)                              */
      __IOM uint32_t DAD        : 7;            /*!< [28..22] Device address                                                   */
      __IOM uint32_t ODDFRM     : 1;            /*!< [29..29] Odd frame                                                        */
      __IOM uint32_t CHDIS      : 1;            /*!< [30..30] Channel disable                                                  */
      __IOM uint32_t CHENA      : 1;            /*!< [31..31] Channel enable                                                   */
    } OTG_HS_HCCHAR6_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCSPLT6;              /*!< (@ 0x000001C4) OTG_HS host channel-6 split control register               */
    
    struct {
      __IOM uint32_t PRTADDR    : 7;            /*!< [6..0] Port address                                                       */
      __IOM uint32_t HUBADDR    : 7;            /*!< [13..7] Hub address                                                       */
      __IOM uint32_t XACTPOS    : 2;            /*!< [15..14] XACTPOS                                                          */
      __IOM uint32_t COMPLSPLT  : 1;            /*!< [16..16] Do complete split                                                */
            uint32_t            : 14;
      __IOM uint32_t SPLITEN    : 1;            /*!< [31..31] Split enable                                                     */
    } OTG_HS_HCSPLT6_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCINT6;               /*!< (@ 0x000001C8) OTG_HS host channel-6 interrupt register                   */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed                                                 */
      __IOM uint32_t CHH        : 1;            /*!< [1..1] Channel halted                                                     */
      __IOM uint32_t AHBERR     : 1;            /*!< [2..2] AHB error                                                          */
      __IOM uint32_t STALL      : 1;            /*!< [3..3] STALL response received interrupt                                  */
      __IOM uint32_t NAK        : 1;            /*!< [4..4] NAK response received interrupt                                    */
      __IOM uint32_t ACK        : 1;            /*!< [5..5] ACK response received/transmitted interrupt                        */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] Response received interrupt                                        */
      __IOM uint32_t TXERR      : 1;            /*!< [7..7] Transaction error                                                  */
      __IOM uint32_t BBERR      : 1;            /*!< [8..8] Babble error                                                       */
      __IOM uint32_t FRMOR      : 1;            /*!< [9..9] Frame overrun                                                      */
      __IOM uint32_t DTERR      : 1;            /*!< [10..10] Data toggle error                                                */
            uint32_t            : 21;
    } OTG_HS_HCINT6_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCINTMSK6;            /*!< (@ 0x000001CC) OTG_HS host channel-6 interrupt mask register              */
    
    struct {
      __IOM uint32_t XFRCM      : 1;            /*!< [0..0] Transfer completed mask                                            */
      __IOM uint32_t CHHM       : 1;            /*!< [1..1] Channel halted mask                                                */
      __IOM uint32_t AHBERR     : 1;            /*!< [2..2] AHB error                                                          */
      __IOM uint32_t STALLM     : 1;            /*!< [3..3] STALL response received interrupt mask                             */
      __IOM uint32_t NAKM       : 1;            /*!< [4..4] NAK response received interrupt mask                               */
      __IOM uint32_t ACKM       : 1;            /*!< [5..5] ACK response received/transmitted interrupt mask                   */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] response received interrupt mask                                   */
      __IOM uint32_t TXERRM     : 1;            /*!< [7..7] Transaction error mask                                             */
      __IOM uint32_t BBERRM     : 1;            /*!< [8..8] Babble error mask                                                  */
      __IOM uint32_t FRMORM     : 1;            /*!< [9..9] Frame overrun mask                                                 */
      __IOM uint32_t DTERRM     : 1;            /*!< [10..10] Data toggle error mask                                           */
            uint32_t            : 21;
    } OTG_HS_HCINTMSK6_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCTSIZ6;              /*!< (@ 0x000001D0) OTG_HS host channel-6 transfer size register               */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t DPID       : 2;            /*!< [30..29] Data PID                                                         */
            uint32_t            : 1;
    } OTG_HS_HCTSIZ6_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCDMA6;               /*!< (@ 0x000001D4) OTG_HS host channel-6 DMA address register                 */
    
    struct {
      __IOM uint32_t DMAADDR    : 32;           /*!< [31..0] DMA address                                                       */
    } OTG_HS_HCDMA6_b;
  } ;
  __IM  uint32_t  RESERVED9[2];
  
  union {
    __IOM uint32_t OTG_HS_HCCHAR7;              /*!< (@ 0x000001E0) OTG_HS host channel-7 characteristics register             */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
      __IOM uint32_t EPNUM      : 4;            /*!< [14..11] Endpoint number                                                  */
      __IOM uint32_t EPDIR      : 1;            /*!< [15..15] Endpoint direction                                               */
            uint32_t            : 1;
      __IOM uint32_t LSDEV      : 1;            /*!< [17..17] Low-speed device                                                 */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
      __IOM uint32_t MC         : 2;            /*!< [21..20] Multi Count (MC) / Error Count (EC)                              */
      __IOM uint32_t DAD        : 7;            /*!< [28..22] Device address                                                   */
      __IOM uint32_t ODDFRM     : 1;            /*!< [29..29] Odd frame                                                        */
      __IOM uint32_t CHDIS      : 1;            /*!< [30..30] Channel disable                                                  */
      __IOM uint32_t CHENA      : 1;            /*!< [31..31] Channel enable                                                   */
    } OTG_HS_HCCHAR7_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCSPLT7;              /*!< (@ 0x000001E4) OTG_HS host channel-7 split control register               */
    
    struct {
      __IOM uint32_t PRTADDR    : 7;            /*!< [6..0] Port address                                                       */
      __IOM uint32_t HUBADDR    : 7;            /*!< [13..7] Hub address                                                       */
      __IOM uint32_t XACTPOS    : 2;            /*!< [15..14] XACTPOS                                                          */
      __IOM uint32_t COMPLSPLT  : 1;            /*!< [16..16] Do complete split                                                */
            uint32_t            : 14;
      __IOM uint32_t SPLITEN    : 1;            /*!< [31..31] Split enable                                                     */
    } OTG_HS_HCSPLT7_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCINT7;               /*!< (@ 0x000001E8) OTG_HS host channel-7 interrupt register                   */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed                                                 */
      __IOM uint32_t CHH        : 1;            /*!< [1..1] Channel halted                                                     */
      __IOM uint32_t AHBERR     : 1;            /*!< [2..2] AHB error                                                          */
      __IOM uint32_t STALL      : 1;            /*!< [3..3] STALL response received interrupt                                  */
      __IOM uint32_t NAK        : 1;            /*!< [4..4] NAK response received interrupt                                    */
      __IOM uint32_t ACK        : 1;            /*!< [5..5] ACK response received/transmitted interrupt                        */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] Response received interrupt                                        */
      __IOM uint32_t TXERR      : 1;            /*!< [7..7] Transaction error                                                  */
      __IOM uint32_t BBERR      : 1;            /*!< [8..8] Babble error                                                       */
      __IOM uint32_t FRMOR      : 1;            /*!< [9..9] Frame overrun                                                      */
      __IOM uint32_t DTERR      : 1;            /*!< [10..10] Data toggle error                                                */
            uint32_t            : 21;
    } OTG_HS_HCINT7_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCINTMSK7;            /*!< (@ 0x000001EC) OTG_HS host channel-7 interrupt mask register              */
    
    struct {
      __IOM uint32_t XFRCM      : 1;            /*!< [0..0] Transfer completed mask                                            */
      __IOM uint32_t CHHM       : 1;            /*!< [1..1] Channel halted mask                                                */
      __IOM uint32_t AHBERR     : 1;            /*!< [2..2] AHB error                                                          */
      __IOM uint32_t STALLM     : 1;            /*!< [3..3] STALL response received interrupt mask                             */
      __IOM uint32_t NAKM       : 1;            /*!< [4..4] NAK response received interrupt mask                               */
      __IOM uint32_t ACKM       : 1;            /*!< [5..5] ACK response received/transmitted interrupt mask                   */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] response received interrupt mask                                   */
      __IOM uint32_t TXERRM     : 1;            /*!< [7..7] Transaction error mask                                             */
      __IOM uint32_t BBERRM     : 1;            /*!< [8..8] Babble error mask                                                  */
      __IOM uint32_t FRMORM     : 1;            /*!< [9..9] Frame overrun mask                                                 */
      __IOM uint32_t DTERRM     : 1;            /*!< [10..10] Data toggle error mask                                           */
            uint32_t            : 21;
    } OTG_HS_HCINTMSK7_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCTSIZ7;              /*!< (@ 0x000001F0) OTG_HS host channel-7 transfer size register               */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t DPID       : 2;            /*!< [30..29] Data PID                                                         */
            uint32_t            : 1;
    } OTG_HS_HCTSIZ7_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCDMA7;               /*!< (@ 0x000001F4) OTG_HS host channel-7 DMA address register                 */
    
    struct {
      __IOM uint32_t DMAADDR    : 32;           /*!< [31..0] DMA address                                                       */
    } OTG_HS_HCDMA7_b;
  } ;
  __IM  uint32_t  RESERVED10[2];
  
  union {
    __IOM uint32_t OTG_HS_HCCHAR8;              /*!< (@ 0x00000200) OTG_HS host channel-8 characteristics register             */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
      __IOM uint32_t EPNUM      : 4;            /*!< [14..11] Endpoint number                                                  */
      __IOM uint32_t EPDIR      : 1;            /*!< [15..15] Endpoint direction                                               */
            uint32_t            : 1;
      __IOM uint32_t LSDEV      : 1;            /*!< [17..17] Low-speed device                                                 */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
      __IOM uint32_t MC         : 2;            /*!< [21..20] Multi Count (MC) / Error Count (EC)                              */
      __IOM uint32_t DAD        : 7;            /*!< [28..22] Device address                                                   */
      __IOM uint32_t ODDFRM     : 1;            /*!< [29..29] Odd frame                                                        */
      __IOM uint32_t CHDIS      : 1;            /*!< [30..30] Channel disable                                                  */
      __IOM uint32_t CHENA      : 1;            /*!< [31..31] Channel enable                                                   */
    } OTG_HS_HCCHAR8_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCSPLT8;              /*!< (@ 0x00000204) OTG_HS host channel-8 split control register               */
    
    struct {
      __IOM uint32_t PRTADDR    : 7;            /*!< [6..0] Port address                                                       */
      __IOM uint32_t HUBADDR    : 7;            /*!< [13..7] Hub address                                                       */
      __IOM uint32_t XACTPOS    : 2;            /*!< [15..14] XACTPOS                                                          */
      __IOM uint32_t COMPLSPLT  : 1;            /*!< [16..16] Do complete split                                                */
            uint32_t            : 14;
      __IOM uint32_t SPLITEN    : 1;            /*!< [31..31] Split enable                                                     */
    } OTG_HS_HCSPLT8_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCINT8;               /*!< (@ 0x00000208) OTG_HS host channel-8 interrupt register                   */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed                                                 */
      __IOM uint32_t CHH        : 1;            /*!< [1..1] Channel halted                                                     */
      __IOM uint32_t AHBERR     : 1;            /*!< [2..2] AHB error                                                          */
      __IOM uint32_t STALL      : 1;            /*!< [3..3] STALL response received interrupt                                  */
      __IOM uint32_t NAK        : 1;            /*!< [4..4] NAK response received interrupt                                    */
      __IOM uint32_t ACK        : 1;            /*!< [5..5] ACK response received/transmitted interrupt                        */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] Response received interrupt                                        */
      __IOM uint32_t TXERR      : 1;            /*!< [7..7] Transaction error                                                  */
      __IOM uint32_t BBERR      : 1;            /*!< [8..8] Babble error                                                       */
      __IOM uint32_t FRMOR      : 1;            /*!< [9..9] Frame overrun                                                      */
      __IOM uint32_t DTERR      : 1;            /*!< [10..10] Data toggle error                                                */
            uint32_t            : 21;
    } OTG_HS_HCINT8_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCINTMSK8;            /*!< (@ 0x0000020C) OTG_HS host channel-8 interrupt mask register              */
    
    struct {
      __IOM uint32_t XFRCM      : 1;            /*!< [0..0] Transfer completed mask                                            */
      __IOM uint32_t CHHM       : 1;            /*!< [1..1] Channel halted mask                                                */
      __IOM uint32_t AHBERR     : 1;            /*!< [2..2] AHB error                                                          */
      __IOM uint32_t STALLM     : 1;            /*!< [3..3] STALL response received interrupt mask                             */
      __IOM uint32_t NAKM       : 1;            /*!< [4..4] NAK response received interrupt mask                               */
      __IOM uint32_t ACKM       : 1;            /*!< [5..5] ACK response received/transmitted interrupt mask                   */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] response received interrupt mask                                   */
      __IOM uint32_t TXERRM     : 1;            /*!< [7..7] Transaction error mask                                             */
      __IOM uint32_t BBERRM     : 1;            /*!< [8..8] Babble error mask                                                  */
      __IOM uint32_t FRMORM     : 1;            /*!< [9..9] Frame overrun mask                                                 */
      __IOM uint32_t DTERRM     : 1;            /*!< [10..10] Data toggle error mask                                           */
            uint32_t            : 21;
    } OTG_HS_HCINTMSK8_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCTSIZ8;              /*!< (@ 0x00000210) OTG_HS host channel-8 transfer size register               */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t DPID       : 2;            /*!< [30..29] Data PID                                                         */
            uint32_t            : 1;
    } OTG_HS_HCTSIZ8_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCDMA8;               /*!< (@ 0x00000214) OTG_HS host channel-8 DMA address register                 */
    
    struct {
      __IOM uint32_t DMAADDR    : 32;           /*!< [31..0] DMA address                                                       */
    } OTG_HS_HCDMA8_b;
  } ;
  __IM  uint32_t  RESERVED11[2];
  
  union {
    __IOM uint32_t OTG_HS_HCCHAR9;              /*!< (@ 0x00000220) OTG_HS host channel-9 characteristics register             */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
      __IOM uint32_t EPNUM      : 4;            /*!< [14..11] Endpoint number                                                  */
      __IOM uint32_t EPDIR      : 1;            /*!< [15..15] Endpoint direction                                               */
            uint32_t            : 1;
      __IOM uint32_t LSDEV      : 1;            /*!< [17..17] Low-speed device                                                 */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
      __IOM uint32_t MC         : 2;            /*!< [21..20] Multi Count (MC) / Error Count (EC)                              */
      __IOM uint32_t DAD        : 7;            /*!< [28..22] Device address                                                   */
      __IOM uint32_t ODDFRM     : 1;            /*!< [29..29] Odd frame                                                        */
      __IOM uint32_t CHDIS      : 1;            /*!< [30..30] Channel disable                                                  */
      __IOM uint32_t CHENA      : 1;            /*!< [31..31] Channel enable                                                   */
    } OTG_HS_HCCHAR9_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCSPLT9;              /*!< (@ 0x00000224) OTG_HS host channel-9 split control register               */
    
    struct {
      __IOM uint32_t PRTADDR    : 7;            /*!< [6..0] Port address                                                       */
      __IOM uint32_t HUBADDR    : 7;            /*!< [13..7] Hub address                                                       */
      __IOM uint32_t XACTPOS    : 2;            /*!< [15..14] XACTPOS                                                          */
      __IOM uint32_t COMPLSPLT  : 1;            /*!< [16..16] Do complete split                                                */
            uint32_t            : 14;
      __IOM uint32_t SPLITEN    : 1;            /*!< [31..31] Split enable                                                     */
    } OTG_HS_HCSPLT9_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCINT9;               /*!< (@ 0x00000228) OTG_HS host channel-9 interrupt register                   */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed                                                 */
      __IOM uint32_t CHH        : 1;            /*!< [1..1] Channel halted                                                     */
      __IOM uint32_t AHBERR     : 1;            /*!< [2..2] AHB error                                                          */
      __IOM uint32_t STALL      : 1;            /*!< [3..3] STALL response received interrupt                                  */
      __IOM uint32_t NAK        : 1;            /*!< [4..4] NAK response received interrupt                                    */
      __IOM uint32_t ACK        : 1;            /*!< [5..5] ACK response received/transmitted interrupt                        */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] Response received interrupt                                        */
      __IOM uint32_t TXERR      : 1;            /*!< [7..7] Transaction error                                                  */
      __IOM uint32_t BBERR      : 1;            /*!< [8..8] Babble error                                                       */
      __IOM uint32_t FRMOR      : 1;            /*!< [9..9] Frame overrun                                                      */
      __IOM uint32_t DTERR      : 1;            /*!< [10..10] Data toggle error                                                */
            uint32_t            : 21;
    } OTG_HS_HCINT9_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCINTMSK9;            /*!< (@ 0x0000022C) OTG_HS host channel-9 interrupt mask register              */
    
    struct {
      __IOM uint32_t XFRCM      : 1;            /*!< [0..0] Transfer completed mask                                            */
      __IOM uint32_t CHHM       : 1;            /*!< [1..1] Channel halted mask                                                */
      __IOM uint32_t AHBERR     : 1;            /*!< [2..2] AHB error                                                          */
      __IOM uint32_t STALLM     : 1;            /*!< [3..3] STALL response received interrupt mask                             */
      __IOM uint32_t NAKM       : 1;            /*!< [4..4] NAK response received interrupt mask                               */
      __IOM uint32_t ACKM       : 1;            /*!< [5..5] ACK response received/transmitted interrupt mask                   */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] response received interrupt mask                                   */
      __IOM uint32_t TXERRM     : 1;            /*!< [7..7] Transaction error mask                                             */
      __IOM uint32_t BBERRM     : 1;            /*!< [8..8] Babble error mask                                                  */
      __IOM uint32_t FRMORM     : 1;            /*!< [9..9] Frame overrun mask                                                 */
      __IOM uint32_t DTERRM     : 1;            /*!< [10..10] Data toggle error mask                                           */
            uint32_t            : 21;
    } OTG_HS_HCINTMSK9_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCTSIZ9;              /*!< (@ 0x00000230) OTG_HS host channel-9 transfer size register               */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t DPID       : 2;            /*!< [30..29] Data PID                                                         */
            uint32_t            : 1;
    } OTG_HS_HCTSIZ9_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCDMA9;               /*!< (@ 0x00000234) OTG_HS host channel-9 DMA address register                 */
    
    struct {
      __IOM uint32_t DMAADDR    : 32;           /*!< [31..0] DMA address                                                       */
    } OTG_HS_HCDMA9_b;
  } ;
  __IM  uint32_t  RESERVED12[2];
  
  union {
    __IOM uint32_t OTG_HS_HCCHAR10;             /*!< (@ 0x00000240) OTG_HS host channel-10 characteristics register            */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
      __IOM uint32_t EPNUM      : 4;            /*!< [14..11] Endpoint number                                                  */
      __IOM uint32_t EPDIR      : 1;            /*!< [15..15] Endpoint direction                                               */
            uint32_t            : 1;
      __IOM uint32_t LSDEV      : 1;            /*!< [17..17] Low-speed device                                                 */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
      __IOM uint32_t MC         : 2;            /*!< [21..20] Multi Count (MC) / Error Count (EC)                              */
      __IOM uint32_t DAD        : 7;            /*!< [28..22] Device address                                                   */
      __IOM uint32_t ODDFRM     : 1;            /*!< [29..29] Odd frame                                                        */
      __IOM uint32_t CHDIS      : 1;            /*!< [30..30] Channel disable                                                  */
      __IOM uint32_t CHENA      : 1;            /*!< [31..31] Channel enable                                                   */
    } OTG_HS_HCCHAR10_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCSPLT10;             /*!< (@ 0x00000244) OTG_HS host channel-10 split control register              */
    
    struct {
      __IOM uint32_t PRTADDR    : 7;            /*!< [6..0] Port address                                                       */
      __IOM uint32_t HUBADDR    : 7;            /*!< [13..7] Hub address                                                       */
      __IOM uint32_t XACTPOS    : 2;            /*!< [15..14] XACTPOS                                                          */
      __IOM uint32_t COMPLSPLT  : 1;            /*!< [16..16] Do complete split                                                */
            uint32_t            : 14;
      __IOM uint32_t SPLITEN    : 1;            /*!< [31..31] Split enable                                                     */
    } OTG_HS_HCSPLT10_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCINT10;              /*!< (@ 0x00000248) OTG_HS host channel-10 interrupt register                  */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed                                                 */
      __IOM uint32_t CHH        : 1;            /*!< [1..1] Channel halted                                                     */
      __IOM uint32_t AHBERR     : 1;            /*!< [2..2] AHB error                                                          */
      __IOM uint32_t STALL      : 1;            /*!< [3..3] STALL response received interrupt                                  */
      __IOM uint32_t NAK        : 1;            /*!< [4..4] NAK response received interrupt                                    */
      __IOM uint32_t ACK        : 1;            /*!< [5..5] ACK response received/transmitted interrupt                        */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] Response received interrupt                                        */
      __IOM uint32_t TXERR      : 1;            /*!< [7..7] Transaction error                                                  */
      __IOM uint32_t BBERR      : 1;            /*!< [8..8] Babble error                                                       */
      __IOM uint32_t FRMOR      : 1;            /*!< [9..9] Frame overrun                                                      */
      __IOM uint32_t DTERR      : 1;            /*!< [10..10] Data toggle error                                                */
            uint32_t            : 21;
    } OTG_HS_HCINT10_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCINTMSK10;           /*!< (@ 0x0000024C) OTG_HS host channel-10 interrupt mask register             */
    
    struct {
      __IOM uint32_t XFRCM      : 1;            /*!< [0..0] Transfer completed mask                                            */
      __IOM uint32_t CHHM       : 1;            /*!< [1..1] Channel halted mask                                                */
      __IOM uint32_t AHBERR     : 1;            /*!< [2..2] AHB error                                                          */
      __IOM uint32_t STALLM     : 1;            /*!< [3..3] STALL response received interrupt mask                             */
      __IOM uint32_t NAKM       : 1;            /*!< [4..4] NAK response received interrupt mask                               */
      __IOM uint32_t ACKM       : 1;            /*!< [5..5] ACK response received/transmitted interrupt mask                   */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] response received interrupt mask                                   */
      __IOM uint32_t TXERRM     : 1;            /*!< [7..7] Transaction error mask                                             */
      __IOM uint32_t BBERRM     : 1;            /*!< [8..8] Babble error mask                                                  */
      __IOM uint32_t FRMORM     : 1;            /*!< [9..9] Frame overrun mask                                                 */
      __IOM uint32_t DTERRM     : 1;            /*!< [10..10] Data toggle error mask                                           */
            uint32_t            : 21;
    } OTG_HS_HCINTMSK10_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCTSIZ10;             /*!< (@ 0x00000250) OTG_HS host channel-10 transfer size register              */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t DPID       : 2;            /*!< [30..29] Data PID                                                         */
            uint32_t            : 1;
    } OTG_HS_HCTSIZ10_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCDMA10;              /*!< (@ 0x00000254) OTG_HS host channel-10 DMA address register                */
    
    struct {
      __IOM uint32_t DMAADDR    : 32;           /*!< [31..0] DMA address                                                       */
    } OTG_HS_HCDMA10_b;
  } ;
  __IM  uint32_t  RESERVED13[2];
  
  union {
    __IOM uint32_t OTG_HS_HCCHAR11;             /*!< (@ 0x00000260) OTG_HS host channel-11 characteristics register            */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
      __IOM uint32_t EPNUM      : 4;            /*!< [14..11] Endpoint number                                                  */
      __IOM uint32_t EPDIR      : 1;            /*!< [15..15] Endpoint direction                                               */
            uint32_t            : 1;
      __IOM uint32_t LSDEV      : 1;            /*!< [17..17] Low-speed device                                                 */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
      __IOM uint32_t MC         : 2;            /*!< [21..20] Multi Count (MC) / Error Count (EC)                              */
      __IOM uint32_t DAD        : 7;            /*!< [28..22] Device address                                                   */
      __IOM uint32_t ODDFRM     : 1;            /*!< [29..29] Odd frame                                                        */
      __IOM uint32_t CHDIS      : 1;            /*!< [30..30] Channel disable                                                  */
      __IOM uint32_t CHENA      : 1;            /*!< [31..31] Channel enable                                                   */
    } OTG_HS_HCCHAR11_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCSPLT11;             /*!< (@ 0x00000264) OTG_HS host channel-11 split control register              */
    
    struct {
      __IOM uint32_t PRTADDR    : 7;            /*!< [6..0] Port address                                                       */
      __IOM uint32_t HUBADDR    : 7;            /*!< [13..7] Hub address                                                       */
      __IOM uint32_t XACTPOS    : 2;            /*!< [15..14] XACTPOS                                                          */
      __IOM uint32_t COMPLSPLT  : 1;            /*!< [16..16] Do complete split                                                */
            uint32_t            : 14;
      __IOM uint32_t SPLITEN    : 1;            /*!< [31..31] Split enable                                                     */
    } OTG_HS_HCSPLT11_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCINT11;              /*!< (@ 0x00000268) OTG_HS host channel-11 interrupt register                  */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed                                                 */
      __IOM uint32_t CHH        : 1;            /*!< [1..1] Channel halted                                                     */
      __IOM uint32_t AHBERR     : 1;            /*!< [2..2] AHB error                                                          */
      __IOM uint32_t STALL      : 1;            /*!< [3..3] STALL response received interrupt                                  */
      __IOM uint32_t NAK        : 1;            /*!< [4..4] NAK response received interrupt                                    */
      __IOM uint32_t ACK        : 1;            /*!< [5..5] ACK response received/transmitted interrupt                        */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] Response received interrupt                                        */
      __IOM uint32_t TXERR      : 1;            /*!< [7..7] Transaction error                                                  */
      __IOM uint32_t BBERR      : 1;            /*!< [8..8] Babble error                                                       */
      __IOM uint32_t FRMOR      : 1;            /*!< [9..9] Frame overrun                                                      */
      __IOM uint32_t DTERR      : 1;            /*!< [10..10] Data toggle error                                                */
            uint32_t            : 21;
    } OTG_HS_HCINT11_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCINTMSK11;           /*!< (@ 0x0000026C) OTG_HS host channel-11 interrupt mask register             */
    
    struct {
      __IOM uint32_t XFRCM      : 1;            /*!< [0..0] Transfer completed mask                                            */
      __IOM uint32_t CHHM       : 1;            /*!< [1..1] Channel halted mask                                                */
      __IOM uint32_t AHBERR     : 1;            /*!< [2..2] AHB error                                                          */
      __IOM uint32_t STALLM     : 1;            /*!< [3..3] STALL response received interrupt mask                             */
      __IOM uint32_t NAKM       : 1;            /*!< [4..4] NAK response received interrupt mask                               */
      __IOM uint32_t ACKM       : 1;            /*!< [5..5] ACK response received/transmitted interrupt mask                   */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] response received interrupt mask                                   */
      __IOM uint32_t TXERRM     : 1;            /*!< [7..7] Transaction error mask                                             */
      __IOM uint32_t BBERRM     : 1;            /*!< [8..8] Babble error mask                                                  */
      __IOM uint32_t FRMORM     : 1;            /*!< [9..9] Frame overrun mask                                                 */
      __IOM uint32_t DTERRM     : 1;            /*!< [10..10] Data toggle error mask                                           */
            uint32_t            : 21;
    } OTG_HS_HCINTMSK11_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCTSIZ11;             /*!< (@ 0x00000270) OTG_HS host channel-11 transfer size register              */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t DPID       : 2;            /*!< [30..29] Data PID                                                         */
            uint32_t            : 1;
    } OTG_HS_HCTSIZ11_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCDMA11;              /*!< (@ 0x00000274) OTG_HS host channel-11 DMA address register                */
    
    struct {
      __IOM uint32_t DMAADDR    : 32;           /*!< [31..0] DMA address                                                       */
    } OTG_HS_HCDMA11_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCCHAR12;             /*!< (@ 0x00000278) OTG_HS host channel-12 characteristics register            */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
      __IOM uint32_t EPNUM      : 4;            /*!< [14..11] Endpoint number                                                  */
      __IOM uint32_t EPDIR      : 1;            /*!< [15..15] Endpoint direction                                               */
            uint32_t            : 1;
      __IOM uint32_t LSDEV      : 1;            /*!< [17..17] Low-speed device                                                 */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
      __IOM uint32_t MC         : 2;            /*!< [21..20] Multi Count (MC) / Error Count (EC)                              */
      __IOM uint32_t DAD        : 7;            /*!< [28..22] Device address                                                   */
      __IOM uint32_t ODDFRM     : 1;            /*!< [29..29] Odd frame                                                        */
      __IOM uint32_t CHDIS      : 1;            /*!< [30..30] Channel disable                                                  */
      __IOM uint32_t CHENA      : 1;            /*!< [31..31] Channel enable                                                   */
    } OTG_HS_HCCHAR12_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCSPLT12;             /*!< (@ 0x0000027C) OTG_HS host channel-12 split control register              */
    
    struct {
      __IOM uint32_t PRTADDR    : 7;            /*!< [6..0] Port address                                                       */
      __IOM uint32_t HUBADDR    : 7;            /*!< [13..7] Hub address                                                       */
      __IOM uint32_t XACTPOS    : 2;            /*!< [15..14] XACTPOS                                                          */
      __IOM uint32_t COMPLSPLT  : 1;            /*!< [16..16] Do complete split                                                */
            uint32_t            : 14;
      __IOM uint32_t SPLITEN    : 1;            /*!< [31..31] Split enable                                                     */
    } OTG_HS_HCSPLT12_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCINT12;              /*!< (@ 0x00000280) OTG_HS host channel-12 interrupt register                  */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed                                                 */
      __IOM uint32_t CHH        : 1;            /*!< [1..1] Channel halted                                                     */
      __IOM uint32_t AHBERR     : 1;            /*!< [2..2] AHB error                                                          */
      __IOM uint32_t STALL      : 1;            /*!< [3..3] STALL response received interrupt                                  */
      __IOM uint32_t NAK        : 1;            /*!< [4..4] NAK response received interrupt                                    */
      __IOM uint32_t ACK        : 1;            /*!< [5..5] ACK response received/transmitted interrupt                        */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] Response received interrupt                                        */
      __IOM uint32_t TXERR      : 1;            /*!< [7..7] Transaction error                                                  */
      __IOM uint32_t BBERR      : 1;            /*!< [8..8] Babble error                                                       */
      __IOM uint32_t FRMOR      : 1;            /*!< [9..9] Frame overrun                                                      */
      __IOM uint32_t DTERR      : 1;            /*!< [10..10] Data toggle error                                                */
            uint32_t            : 21;
    } OTG_HS_HCINT12_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCINTMSK12;           /*!< (@ 0x00000284) OTG_HS host channel-12 interrupt mask register             */
    
    struct {
      __IOM uint32_t XFRCM      : 1;            /*!< [0..0] Transfer completed mask                                            */
      __IOM uint32_t CHHM       : 1;            /*!< [1..1] Channel halted mask                                                */
      __IOM uint32_t AHBERR     : 1;            /*!< [2..2] AHB error                                                          */
      __IOM uint32_t STALLM     : 1;            /*!< [3..3] STALL response received interrupt mask                             */
      __IOM uint32_t NAKM       : 1;            /*!< [4..4] NAK response received interrupt mask                               */
      __IOM uint32_t ACKM       : 1;            /*!< [5..5] ACK response received/transmitted interrupt mask                   */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] Response received interrupt                                        */
      __IOM uint32_t TXERRM     : 1;            /*!< [7..7] Transaction error                                                  */
      __IOM uint32_t BBERRM     : 1;            /*!< [8..8] Babble error                                                       */
      __IOM uint32_t FRMORM     : 1;            /*!< [9..9] Frame overrun mask                                                 */
      __IOM uint32_t DTERRM     : 1;            /*!< [10..10] Data toggle error mask                                           */
            uint32_t            : 21;
    } OTG_HS_HCINTMSK12_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCTSIZ12;             /*!< (@ 0x00000288) OTG_HS host channel-12 transfer size register              */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t DPID       : 2;            /*!< [30..29] Data PID                                                         */
            uint32_t            : 1;
    } OTG_HS_HCTSIZ12_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCDMA12;              /*!< (@ 0x0000028C) OTG_HS host channel-12 DMA address register                */
    
    struct {
      __IOM uint32_t DMAADDR    : 32;           /*!< [31..0] DMA address                                                       */
    } OTG_HS_HCDMA12_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCCHAR13;             /*!< (@ 0x00000290) OTG_HS host channel-13 characteristics register            */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
      __IOM uint32_t EPNUM      : 4;            /*!< [14..11] Endpoint number                                                  */
      __IOM uint32_t EPDIR      : 1;            /*!< [15..15] Endpoint direction                                               */
            uint32_t            : 1;
      __IOM uint32_t LSDEV      : 1;            /*!< [17..17] Low-speed device                                                 */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
      __IOM uint32_t MC         : 2;            /*!< [21..20] Multi Count (MC) / Error Count (EC)                              */
      __IOM uint32_t DAD        : 7;            /*!< [28..22] Device address                                                   */
      __IOM uint32_t ODDFRM     : 1;            /*!< [29..29] Odd frame                                                        */
      __IOM uint32_t CHDIS      : 1;            /*!< [30..30] Channel disable                                                  */
      __IOM uint32_t CHENA      : 1;            /*!< [31..31] Channel enable                                                   */
    } OTG_HS_HCCHAR13_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCSPLT13;             /*!< (@ 0x00000294) OTG_HS host channel-13 split control register              */
    
    struct {
      __IOM uint32_t PRTADDR    : 7;            /*!< [6..0] Port address                                                       */
      __IOM uint32_t HUBADDR    : 7;            /*!< [13..7] Hub address                                                       */
      __IOM uint32_t XACTPOS    : 2;            /*!< [15..14] XACTPOS                                                          */
      __IOM uint32_t COMPLSPLT  : 1;            /*!< [16..16] Do complete split                                                */
            uint32_t            : 14;
      __IOM uint32_t SPLITEN    : 1;            /*!< [31..31] Split enable                                                     */
    } OTG_HS_HCSPLT13_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCINT13;              /*!< (@ 0x00000298) OTG_HS host channel-13 interrupt register                  */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed                                                 */
      __IOM uint32_t CHH        : 1;            /*!< [1..1] Channel halted                                                     */
      __IOM uint32_t AHBERR     : 1;            /*!< [2..2] AHB error                                                          */
      __IOM uint32_t STALL      : 1;            /*!< [3..3] STALL response received interrupt                                  */
      __IOM uint32_t NAK        : 1;            /*!< [4..4] NAK response received interrupt                                    */
      __IOM uint32_t ACK        : 1;            /*!< [5..5] ACK response received/transmitted interrupt                        */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] Response received interrupt                                        */
      __IOM uint32_t TXERR      : 1;            /*!< [7..7] Transaction error                                                  */
      __IOM uint32_t BBERR      : 1;            /*!< [8..8] Babble error                                                       */
      __IOM uint32_t FRMOR      : 1;            /*!< [9..9] Frame overrun                                                      */
      __IOM uint32_t DTERR      : 1;            /*!< [10..10] Data toggle error                                                */
            uint32_t            : 21;
    } OTG_HS_HCINT13_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCINTMSK13;           /*!< (@ 0x0000029C) OTG_HS host channel-13 interrupt mask register             */
    
    struct {
      __IOM uint32_t XFRCM      : 1;            /*!< [0..0] Transfer completed mask                                            */
      __IOM uint32_t CHHM       : 1;            /*!< [1..1] Channel halted mask                                                */
      __IOM uint32_t AHBERR     : 1;            /*!< [2..2] AHB error                                                          */
      __IOM uint32_t STALLM     : 1;            /*!< [3..3] STALLM response received interrupt mask                            */
      __IOM uint32_t NAKM       : 1;            /*!< [4..4] NAK response received interrupt mask                               */
      __IOM uint32_t ACKM       : 1;            /*!< [5..5] ACK response received/transmitted interrupt mask                   */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] Response received interrupt                                        */
      __IOM uint32_t TXERRM     : 1;            /*!< [7..7] Transaction error                                                  */
      __IOM uint32_t BBERRM     : 1;            /*!< [8..8] Babble error                                                       */
      __IOM uint32_t FRMORM     : 1;            /*!< [9..9] Frame overrun mask                                                 */
      __IOM uint32_t DTERRM     : 1;            /*!< [10..10] Data toggle error mask                                           */
            uint32_t            : 21;
    } OTG_HS_HCINTMSK13_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCTSIZ13;             /*!< (@ 0x000002A0) OTG_HS host channel-13 transfer size register              */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t DPID       : 2;            /*!< [30..29] Data PID                                                         */
            uint32_t            : 1;
    } OTG_HS_HCTSIZ13_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCDMA13;              /*!< (@ 0x000002A4) OTG_HS host channel-13 DMA address register                */
    
    struct {
      __IOM uint32_t DMAADDR    : 32;           /*!< [31..0] DMA address                                                       */
    } OTG_HS_HCDMA13_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCCHAR14;             /*!< (@ 0x000002A8) OTG_HS host channel-14 characteristics register            */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
      __IOM uint32_t EPNUM      : 4;            /*!< [14..11] Endpoint number                                                  */
      __IOM uint32_t EPDIR      : 1;            /*!< [15..15] Endpoint direction                                               */
            uint32_t            : 1;
      __IOM uint32_t LSDEV      : 1;            /*!< [17..17] Low-speed device                                                 */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
      __IOM uint32_t MC         : 2;            /*!< [21..20] Multi Count (MC) / Error Count (EC)                              */
      __IOM uint32_t DAD        : 7;            /*!< [28..22] Device address                                                   */
      __IOM uint32_t ODDFRM     : 1;            /*!< [29..29] Odd frame                                                        */
      __IOM uint32_t CHDIS      : 1;            /*!< [30..30] Channel disable                                                  */
      __IOM uint32_t CHENA      : 1;            /*!< [31..31] Channel enable                                                   */
    } OTG_HS_HCCHAR14_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCSPLT14;             /*!< (@ 0x000002AC) OTG_HS host channel-14 split control register              */
    
    struct {
      __IOM uint32_t PRTADDR    : 7;            /*!< [6..0] Port address                                                       */
      __IOM uint32_t HUBADDR    : 7;            /*!< [13..7] Hub address                                                       */
      __IOM uint32_t XACTPOS    : 2;            /*!< [15..14] XACTPOS                                                          */
      __IOM uint32_t COMPLSPLT  : 1;            /*!< [16..16] Do complete split                                                */
            uint32_t            : 14;
      __IOM uint32_t SPLITEN    : 1;            /*!< [31..31] Split enable                                                     */
    } OTG_HS_HCSPLT14_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCINT14;              /*!< (@ 0x000002B0) OTG_HS host channel-14 interrupt register                  */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed                                                 */
      __IOM uint32_t CHH        : 1;            /*!< [1..1] Channel halted                                                     */
      __IOM uint32_t AHBERR     : 1;            /*!< [2..2] AHB error                                                          */
      __IOM uint32_t STALL      : 1;            /*!< [3..3] STALL response received interrupt                                  */
      __IOM uint32_t NAK        : 1;            /*!< [4..4] NAK response received interrupt                                    */
      __IOM uint32_t ACK        : 1;            /*!< [5..5] ACK response received/transmitted interrupt                        */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] Response received interrupt                                        */
      __IOM uint32_t TXERR      : 1;            /*!< [7..7] Transaction error                                                  */
      __IOM uint32_t BBERR      : 1;            /*!< [8..8] Babble error                                                       */
      __IOM uint32_t FRMOR      : 1;            /*!< [9..9] Frame overrun                                                      */
      __IOM uint32_t DTERR      : 1;            /*!< [10..10] Data toggle error                                                */
            uint32_t            : 21;
    } OTG_HS_HCINT14_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCINTMSK14;           /*!< (@ 0x000002B4) OTG_HS host channel-14 interrupt mask register             */
    
    struct {
      __IOM uint32_t XFRCM      : 1;            /*!< [0..0] Transfer completed mask                                            */
      __IOM uint32_t CHHM       : 1;            /*!< [1..1] Channel halted mask                                                */
      __IOM uint32_t AHBERR     : 1;            /*!< [2..2] AHB error                                                          */
      __IOM uint32_t STALLM     : 1;            /*!< [3..3] STALL response received interrupt mask                             */
      __IOM uint32_t NAKM       : 1;            /*!< [4..4] NAKM response received interrupt mask                              */
      __IOM uint32_t ACKM       : 1;            /*!< [5..5] ACKM response received/transmitted interrupt mask                  */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] Response received interrupt                                        */
      __IOM uint32_t TXERRM     : 1;            /*!< [7..7] Transaction error                                                  */
      __IOM uint32_t BBERRM     : 1;            /*!< [8..8] Babble error                                                       */
      __IOM uint32_t FRMORM     : 1;            /*!< [9..9] Frame overrun mask                                                 */
      __IOM uint32_t DTERRM     : 1;            /*!< [10..10] Data toggle error mask                                           */
            uint32_t            : 21;
    } OTG_HS_HCINTMSK14_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCTSIZ14;             /*!< (@ 0x000002B8) OTG_HS host channel-14 transfer size register              */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t DPID       : 2;            /*!< [30..29] Data PID                                                         */
            uint32_t            : 1;
    } OTG_HS_HCTSIZ14_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCDMA14;              /*!< (@ 0x000002BC) OTG_HS host channel-14 DMA address register                */
    
    struct {
      __IOM uint32_t DMAADDR    : 32;           /*!< [31..0] DMA address                                                       */
    } OTG_HS_HCDMA14_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCCHAR15;             /*!< (@ 0x000002C0) OTG_HS host channel-15 characteristics register            */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
      __IOM uint32_t EPNUM      : 4;            /*!< [14..11] Endpoint number                                                  */
      __IOM uint32_t EPDIR      : 1;            /*!< [15..15] Endpoint direction                                               */
            uint32_t            : 1;
      __IOM uint32_t LSDEV      : 1;            /*!< [17..17] Low-speed device                                                 */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
      __IOM uint32_t MC         : 2;            /*!< [21..20] Multi Count (MC) / Error Count (EC)                              */
      __IOM uint32_t DAD        : 7;            /*!< [28..22] Device address                                                   */
      __IOM uint32_t ODDFRM     : 1;            /*!< [29..29] Odd frame                                                        */
      __IOM uint32_t CHDIS      : 1;            /*!< [30..30] Channel disable                                                  */
      __IOM uint32_t CHENA      : 1;            /*!< [31..31] Channel enable                                                   */
    } OTG_HS_HCCHAR15_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCSPLT15;             /*!< (@ 0x000002C4) OTG_HS host channel-15 split control register              */
    
    struct {
      __IOM uint32_t PRTADDR    : 7;            /*!< [6..0] Port address                                                       */
      __IOM uint32_t HUBADDR    : 7;            /*!< [13..7] Hub address                                                       */
      __IOM uint32_t XACTPOS    : 2;            /*!< [15..14] XACTPOS                                                          */
      __IOM uint32_t COMPLSPLT  : 1;            /*!< [16..16] Do complete split                                                */
            uint32_t            : 14;
      __IOM uint32_t SPLITEN    : 1;            /*!< [31..31] Split enable                                                     */
    } OTG_HS_HCSPLT15_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCINT15;              /*!< (@ 0x000002C8) OTG_HS host channel-15 interrupt register                  */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed                                                 */
      __IOM uint32_t CHH        : 1;            /*!< [1..1] Channel halted                                                     */
      __IOM uint32_t AHBERR     : 1;            /*!< [2..2] AHB error                                                          */
      __IOM uint32_t STALL      : 1;            /*!< [3..3] STALL response received interrupt                                  */
      __IOM uint32_t NAK        : 1;            /*!< [4..4] NAK response received interrupt                                    */
      __IOM uint32_t ACK        : 1;            /*!< [5..5] ACK response received/transmitted interrupt                        */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] Response received interrupt                                        */
      __IOM uint32_t TXERR      : 1;            /*!< [7..7] Transaction error                                                  */
      __IOM uint32_t BBERR      : 1;            /*!< [8..8] Babble error                                                       */
      __IOM uint32_t FRMOR      : 1;            /*!< [9..9] Frame overrun                                                      */
      __IOM uint32_t DTERR      : 1;            /*!< [10..10] Data toggle error                                                */
            uint32_t            : 21;
    } OTG_HS_HCINT15_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCINTMSK15;           /*!< (@ 0x000002CC) OTG_HS host channel-15 interrupt mask register             */
    
    struct {
      __IOM uint32_t XFRCM      : 1;            /*!< [0..0] Transfer completed mask                                            */
      __IOM uint32_t CHHM       : 1;            /*!< [1..1] Channel halted mask                                                */
      __IOM uint32_t AHBERR     : 1;            /*!< [2..2] AHB error                                                          */
      __IOM uint32_t STALL      : 1;            /*!< [3..3] STALL response received interrupt mask                             */
      __IOM uint32_t NAKM       : 1;            /*!< [4..4] NAK response received interrupt mask                               */
      __IOM uint32_t ACKM       : 1;            /*!< [5..5] ACK response received/transmitted interrupt mask                   */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] Response received interrupt                                        */
      __IOM uint32_t TXERRM     : 1;            /*!< [7..7] Transaction error                                                  */
      __IOM uint32_t BBERRM     : 1;            /*!< [8..8] Babble error                                                       */
      __IOM uint32_t FRMORM     : 1;            /*!< [9..9] Frame overrun mask                                                 */
      __IOM uint32_t DTERRM     : 1;            /*!< [10..10] Data toggle error mask                                           */
            uint32_t            : 21;
    } OTG_HS_HCINTMSK15_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCTSIZ15;             /*!< (@ 0x000002D0) OTG_HS host channel-15 transfer size register              */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t DPID       : 2;            /*!< [30..29] Data PID                                                         */
            uint32_t            : 1;
    } OTG_HS_HCTSIZ15_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_HCDMA15;              /*!< (@ 0x000002D4) OTG_HS host channel-15 DMA address register                */
    
    struct {
      __IOM uint32_t DMAADDR    : 32;           /*!< [31..0] DMA address                                                       */
    } OTG_HS_HCDMA15_b;
  } ;
} OTG_HS_HOST_Type;                             /*!< Size = 728 (0x2d8)                                                        */



/* =========================================================================================================================== */
/* ================                                       OTG_FS_PWRCLK                                       ================ */
/* =========================================================================================================================== */


/**
  * @brief USB on the go full speed (OTG_FS_PWRCLK)
  */

typedef struct {                                /*!< (@ 0x50000E00) OTG_FS_PWRCLK Structure                                    */
  
  union {
    __IOM uint32_t OTG_FS_PCGCCTL;              /*!< (@ 0x00000000) OTG_FS power and clock gating control register
                                                                    (OTG_FS_PCGCCTL)                                           */
    
    struct {
      __IOM uint32_t STPPCLK    : 1;            /*!< [0..0] Stop PHY clock                                                     */
      __IOM uint32_t GATEHCLK   : 1;            /*!< [1..1] Gate HCLK                                                          */
            uint32_t            : 2;
      __IOM uint32_t PHYSUSP    : 1;            /*!< [4..4] PHY Suspended                                                      */
            uint32_t            : 27;
    } OTG_FS_PCGCCTL_b;
  } ;
} OTG_FS_PWRCLK_Type;                           /*!< Size = 4 (0x4)                                                            */



/* =========================================================================================================================== */
/* ================                                       OTG_FS_DEVICE                                       ================ */
/* =========================================================================================================================== */


/**
  * @brief USB on the go full speed (OTG_FS_DEVICE)
  */

typedef struct {                                /*!< (@ 0x50000800) OTG_FS_DEVICE Structure                                    */
  
  union {
    __IOM uint32_t OTG_FS_DCFG;                 /*!< (@ 0x00000000) OTG_FS device configuration register (OTG_FS_DCFG)         */
    
    struct {
      __IOM uint32_t DSPD       : 2;            /*!< [1..0] Device speed                                                       */
      __IOM uint32_t NZLSOHSK   : 1;            /*!< [2..2] Non-zero-length status OUT handshake                               */
            uint32_t            : 1;
      __IOM uint32_t DAD        : 7;            /*!< [10..4] Device address                                                    */
      __IOM uint32_t PFIVL      : 2;            /*!< [12..11] Periodic frame interval                                          */
            uint32_t            : 19;
    } OTG_FS_DCFG_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_DCTL;                 /*!< (@ 0x00000004) OTG_FS device control register (OTG_FS_DCTL)               */
    
    struct {
      __IOM uint32_t RWUSIG     : 1;            /*!< [0..0] Remote wakeup signaling                                            */
      __IOM uint32_t SDIS       : 1;            /*!< [1..1] Soft disconnect                                                    */
      __IM  uint32_t GINSTS     : 1;            /*!< [2..2] Global IN NAK status                                               */
      __IM  uint32_t GONSTS     : 1;            /*!< [3..3] Global OUT NAK status                                              */
      __IOM uint32_t TCTL       : 3;            /*!< [6..4] Test control                                                       */
      __IOM uint32_t SGINAK     : 1;            /*!< [7..7] Set global IN NAK                                                  */
      __IOM uint32_t CGINAK     : 1;            /*!< [8..8] Clear global IN NAK                                                */
      __IOM uint32_t SGONAK     : 1;            /*!< [9..9] Set global OUT NAK                                                 */
      __IOM uint32_t CGONAK     : 1;            /*!< [10..10] Clear global OUT NAK                                             */
      __IOM uint32_t POPRGDNE   : 1;            /*!< [11..11] Power-on programming done                                        */
            uint32_t            : 20;
    } OTG_FS_DCTL_b;
  } ;
  
  union {
    __IM  uint32_t OTG_FS_DSTS;                 /*!< (@ 0x00000008) OTG_FS device status register (OTG_FS_DSTS)                */
    
    struct {
      __IM  uint32_t SUSPSTS    : 1;            /*!< [0..0] Suspend status                                                     */
      __IM  uint32_t ENUMSPD    : 2;            /*!< [2..1] Enumerated speed                                                   */
      __IM  uint32_t EERR       : 1;            /*!< [3..3] Erratic error                                                      */
            uint32_t            : 4;
      __IM  uint32_t FNSOF      : 14;           /*!< [21..8] Frame number of the received SOF                                  */
            uint32_t            : 10;
    } OTG_FS_DSTS_b;
  } ;
  __IM  uint32_t  RESERVED;
  
  union {
    __IOM uint32_t OTG_FS_DIEPMSK;              /*!< (@ 0x00000010) OTG_FS device IN endpoint common interrupt mask
                                                                    register (OTG_FS_DIEPMSK)                                  */
    
    struct {
      __IOM uint32_t XFRCM      : 1;            /*!< [0..0] Transfer completed interrupt mask                                  */
      __IOM uint32_t EPDM       : 1;            /*!< [1..1] Endpoint disabled interrupt mask                                   */
            uint32_t            : 1;
      __IOM uint32_t TOM        : 1;            /*!< [3..3] Timeout condition mask (Non-isochronous endpoints)                 */
      __IOM uint32_t ITTXFEMSK  : 1;            /*!< [4..4] IN token received when TxFIFO empty mask                           */
      __IOM uint32_t INEPNMM    : 1;            /*!< [5..5] IN token received with EP mismatch mask                            */
      __IOM uint32_t INEPNEM    : 1;            /*!< [6..6] IN endpoint NAK effective mask                                     */
            uint32_t            : 25;
    } OTG_FS_DIEPMSK_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_DOEPMSK;              /*!< (@ 0x00000014) OTG_FS device OUT endpoint common interrupt mask
                                                                    register (OTG_FS_DOEPMSK)                                  */
    
    struct {
      __IOM uint32_t XFRCM      : 1;            /*!< [0..0] Transfer completed interrupt mask                                  */
      __IOM uint32_t EPDM       : 1;            /*!< [1..1] Endpoint disabled interrupt mask                                   */
            uint32_t            : 1;
      __IOM uint32_t STUPM      : 1;            /*!< [3..3] SETUP phase done mask                                              */
      __IOM uint32_t OTEPDM     : 1;            /*!< [4..4] OUT token received when endpoint disabled mask                     */
            uint32_t            : 27;
    } OTG_FS_DOEPMSK_b;
  } ;
  
  union {
    __IM  uint32_t OTG_FS_DAINT;                /*!< (@ 0x00000018) OTG_FS device all endpoints interrupt register
                                                                    (OTG_FS_DAINT)                                             */
    
    struct {
      __IM  uint32_t IEPINT     : 16;           /*!< [15..0] IN endpoint interrupt bits                                        */
      __IM  uint32_t OEPINT     : 16;           /*!< [31..16] OUT endpoint interrupt bits                                      */
    } OTG_FS_DAINT_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_DAINTMSK;             /*!< (@ 0x0000001C) OTG_FS all endpoints interrupt mask register
                                                                    (OTG_FS_DAINTMSK)                                          */
    
    struct {
      __IOM uint32_t IEPM       : 16;           /*!< [15..0] IN EP interrupt mask bits                                         */
      __IOM uint32_t OEPINT     : 16;           /*!< [31..16] OUT endpoint interrupt bits                                      */
    } OTG_FS_DAINTMSK_b;
  } ;
  __IM  uint32_t  RESERVED1[2];
  
  union {
    __IOM uint32_t OTG_FS_DVBUSDIS;             /*!< (@ 0x00000028) OTG_FS device VBUS discharge time register                 */
    
    struct {
      __IOM uint32_t VBUSDT     : 16;           /*!< [15..0] Device VBUS discharge time                                        */
            uint32_t            : 16;
    } OTG_FS_DVBUSDIS_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_DVBUSPULSE;           /*!< (@ 0x0000002C) OTG_FS device VBUS pulsing time register                   */
    
    struct {
      __IOM uint32_t DVBUSP     : 12;           /*!< [11..0] Device VBUS pulsing time                                          */
            uint32_t            : 20;
    } OTG_FS_DVBUSPULSE_b;
  } ;
  __IM  uint32_t  RESERVED2;
  
  union {
    __IOM uint32_t OTG_FS_DIEPEMPMSK;           /*!< (@ 0x00000034) OTG_FS device IN endpoint FIFO empty interrupt
                                                                    mask register                                              */
    
    struct {
      __IOM uint32_t INEPTXFEM  : 16;           /*!< [15..0] IN EP Tx FIFO empty interrupt mask bits                           */
            uint32_t            : 16;
    } OTG_FS_DIEPEMPMSK_b;
  } ;
  __IM  uint32_t  RESERVED3[50];
  
  union {
    __IOM uint32_t OTG_FS_DIEPCTL0;             /*!< (@ 0x00000100) OTG_FS device control IN endpoint 0 control register
                                                                    (OTG_FS_DIEPCTL0)                                          */
    
    struct {
      __IOM uint32_t MPSIZ      : 2;            /*!< [1..0] Maximum packet size                                                */
            uint32_t            : 13;
      __IM  uint32_t USBAEP     : 1;            /*!< [15..15] USB active endpoint                                              */
            uint32_t            : 1;
      __IM  uint32_t NAKSTS     : 1;            /*!< [17..17] NAK status                                                       */
      __IM  uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
            uint32_t            : 1;
      __IOM uint32_t STALL      : 1;            /*!< [21..21] STALL handshake                                                  */
      __IOM uint32_t TXFNUM     : 4;            /*!< [25..22] TxFIFO number                                                    */
      __OM  uint32_t CNAK       : 1;            /*!< [26..26] Clear NAK                                                        */
      __OM  uint32_t SNAK       : 1;            /*!< [27..27] Set NAK                                                          */
            uint32_t            : 2;
      __IM  uint32_t EPDIS      : 1;            /*!< [30..30] Endpoint disable                                                 */
      __IM  uint32_t EPENA      : 1;            /*!< [31..31] Endpoint enable                                                  */
    } OTG_FS_DIEPCTL0_b;
  } ;
  __IM  uint32_t  RESERVED4;
  
  union {
    __IOM uint32_t OTG_FS_DIEPINT0;             /*!< (@ 0x00000108) device endpoint-x interrupt register                       */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] XFRC                                                               */
      __IOM uint32_t EPDISD     : 1;            /*!< [1..1] EPDISD                                                             */
            uint32_t            : 1;
      __IOM uint32_t TOC        : 1;            /*!< [3..3] TOC                                                                */
      __IOM uint32_t ITTXFE     : 1;            /*!< [4..4] ITTXFE                                                             */
            uint32_t            : 1;
      __IOM uint32_t INEPNE     : 1;            /*!< [6..6] INEPNE                                                             */
      __IM  uint32_t TXFE       : 1;            /*!< [7..7] TXFE                                                               */
            uint32_t            : 24;
    } OTG_FS_DIEPINT0_b;
  } ;
  __IM  uint32_t  RESERVED5;
  
  union {
    __IOM uint32_t OTG_FS_DIEPTSIZ0;            /*!< (@ 0x00000110) device endpoint-0 transfer size register                   */
    
    struct {
      __IOM uint32_t XFRSIZ     : 7;            /*!< [6..0] Transfer size                                                      */
            uint32_t            : 12;
      __IOM uint32_t PKTCNT     : 2;            /*!< [20..19] Packet count                                                     */
            uint32_t            : 11;
    } OTG_FS_DIEPTSIZ0_b;
  } ;
  __IM  uint32_t  RESERVED6;
  
  union {
    __IM  uint32_t OTG_FS_DTXFSTS0;             /*!< (@ 0x00000118) OTG_FS device IN endpoint transmit FIFO status
                                                                    register                                                   */
    
    struct {
      __IM  uint32_t INEPTFSAV  : 16;           /*!< [15..0] IN endpoint TxFIFO space available                                */
            uint32_t            : 16;
    } OTG_FS_DTXFSTS0_b;
  } ;
  __IM  uint32_t  RESERVED7;
  
  union {
    __IOM uint32_t OTG_FS_DIEPCTL1;             /*!< (@ 0x00000120) OTG device endpoint-1 control register                     */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] MPSIZ                                                             */
            uint32_t            : 4;
      __IOM uint32_t USBAEP     : 1;            /*!< [15..15] USBAEP                                                           */
      __IM  uint32_t EONUM_DPID : 1;            /*!< [16..16] EONUM/DPID                                                       */
      __IM  uint32_t NAKSTS     : 1;            /*!< [17..17] NAKSTS                                                           */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] EPTYP                                                            */
            uint32_t            : 1;
      __IOM uint32_t Stall      : 1;            /*!< [21..21] Stall                                                            */
      __IOM uint32_t TXFNUM     : 4;            /*!< [25..22] TXFNUM                                                           */
      __OM  uint32_t CNAK       : 1;            /*!< [26..26] CNAK                                                             */
      __OM  uint32_t SNAK       : 1;            /*!< [27..27] SNAK                                                             */
      __OM  uint32_t SD0PID_SEVNFRM : 1;        /*!< [28..28] SD0PID/SEVNFRM                                                   */
      __OM  uint32_t SODDFRM_SD1PID : 1;        /*!< [29..29] SODDFRM/SD1PID                                                   */
      __IOM uint32_t EPDIS      : 1;            /*!< [30..30] EPDIS                                                            */
      __IOM uint32_t EPENA      : 1;            /*!< [31..31] EPENA                                                            */
    } OTG_FS_DIEPCTL1_b;
  } ;
  __IM  uint32_t  RESERVED8;
  
  union {
    __IOM uint32_t OTG_FS_DIEPINT1;             /*!< (@ 0x00000128) device endpoint-1 interrupt register                       */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] XFRC                                                               */
      __IOM uint32_t EPDISD     : 1;            /*!< [1..1] EPDISD                                                             */
            uint32_t            : 1;
      __IOM uint32_t TOC        : 1;            /*!< [3..3] TOC                                                                */
      __IOM uint32_t ITTXFE     : 1;            /*!< [4..4] ITTXFE                                                             */
            uint32_t            : 1;
      __IOM uint32_t INEPNE     : 1;            /*!< [6..6] INEPNE                                                             */
      __IM  uint32_t TXFE       : 1;            /*!< [7..7] TXFE                                                               */
            uint32_t            : 24;
    } OTG_FS_DIEPINT1_b;
  } ;
  __IM  uint32_t  RESERVED9;
  
  union {
    __IOM uint32_t OTG_FS_DIEPTSIZ1;            /*!< (@ 0x00000130) device endpoint-1 transfer size register                   */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t MCNT       : 2;            /*!< [30..29] Multi count                                                      */
            uint32_t            : 1;
    } OTG_FS_DIEPTSIZ1_b;
  } ;
  __IM  uint32_t  RESERVED10;
  
  union {
    __IM  uint32_t OTG_FS_DTXFSTS1;             /*!< (@ 0x00000138) OTG_FS device IN endpoint transmit FIFO status
                                                                    register                                                   */
    
    struct {
      __IM  uint32_t INEPTFSAV  : 16;           /*!< [15..0] IN endpoint TxFIFO space available                                */
            uint32_t            : 16;
    } OTG_FS_DTXFSTS1_b;
  } ;
  __IM  uint32_t  RESERVED11;
  
  union {
    __IOM uint32_t OTG_FS_DIEPCTL2;             /*!< (@ 0x00000140) OTG device endpoint-2 control register                     */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] MPSIZ                                                             */
            uint32_t            : 4;
      __IOM uint32_t USBAEP     : 1;            /*!< [15..15] USBAEP                                                           */
      __IM  uint32_t EONUM_DPID : 1;            /*!< [16..16] EONUM/DPID                                                       */
      __IM  uint32_t NAKSTS     : 1;            /*!< [17..17] NAKSTS                                                           */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] EPTYP                                                            */
            uint32_t            : 1;
      __IOM uint32_t Stall      : 1;            /*!< [21..21] Stall                                                            */
      __IOM uint32_t TXFNUM     : 4;            /*!< [25..22] TXFNUM                                                           */
      __OM  uint32_t CNAK       : 1;            /*!< [26..26] CNAK                                                             */
      __OM  uint32_t SNAK       : 1;            /*!< [27..27] SNAK                                                             */
      __OM  uint32_t SD0PID_SEVNFRM : 1;        /*!< [28..28] SD0PID/SEVNFRM                                                   */
      __OM  uint32_t SODDFRM    : 1;            /*!< [29..29] SODDFRM                                                          */
      __IOM uint32_t EPDIS      : 1;            /*!< [30..30] EPDIS                                                            */
      __IOM uint32_t EPENA      : 1;            /*!< [31..31] EPENA                                                            */
    } OTG_FS_DIEPCTL2_b;
  } ;
  __IM  uint32_t  RESERVED12;
  
  union {
    __IOM uint32_t OTG_FS_DIEPINT2;             /*!< (@ 0x00000148) device endpoint-2 interrupt register                       */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] XFRC                                                               */
      __IOM uint32_t EPDISD     : 1;            /*!< [1..1] EPDISD                                                             */
            uint32_t            : 1;
      __IOM uint32_t TOC        : 1;            /*!< [3..3] TOC                                                                */
      __IOM uint32_t ITTXFE     : 1;            /*!< [4..4] ITTXFE                                                             */
            uint32_t            : 1;
      __IOM uint32_t INEPNE     : 1;            /*!< [6..6] INEPNE                                                             */
      __IM  uint32_t TXFE       : 1;            /*!< [7..7] TXFE                                                               */
            uint32_t            : 24;
    } OTG_FS_DIEPINT2_b;
  } ;
  __IM  uint32_t  RESERVED13;
  
  union {
    __IOM uint32_t OTG_FS_DIEPTSIZ2;            /*!< (@ 0x00000150) device endpoint-2 transfer size register                   */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t MCNT       : 2;            /*!< [30..29] Multi count                                                      */
            uint32_t            : 1;
    } OTG_FS_DIEPTSIZ2_b;
  } ;
  __IM  uint32_t  RESERVED14;
  
  union {
    __IM  uint32_t OTG_FS_DTXFSTS2;             /*!< (@ 0x00000158) OTG_FS device IN endpoint transmit FIFO status
                                                                    register                                                   */
    
    struct {
      __IM  uint32_t INEPTFSAV  : 16;           /*!< [15..0] IN endpoint TxFIFO space available                                */
            uint32_t            : 16;
    } OTG_FS_DTXFSTS2_b;
  } ;
  __IM  uint32_t  RESERVED15;
  
  union {
    __IOM uint32_t OTG_FS_DIEPCTL3;             /*!< (@ 0x00000160) OTG device endpoint-3 control register                     */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] MPSIZ                                                             */
            uint32_t            : 4;
      __IOM uint32_t USBAEP     : 1;            /*!< [15..15] USBAEP                                                           */
      __IM  uint32_t EONUM_DPID : 1;            /*!< [16..16] EONUM/DPID                                                       */
      __IM  uint32_t NAKSTS     : 1;            /*!< [17..17] NAKSTS                                                           */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] EPTYP                                                            */
            uint32_t            : 1;
      __IOM uint32_t Stall      : 1;            /*!< [21..21] Stall                                                            */
      __IOM uint32_t TXFNUM     : 4;            /*!< [25..22] TXFNUM                                                           */
      __OM  uint32_t CNAK       : 1;            /*!< [26..26] CNAK                                                             */
      __OM  uint32_t SNAK       : 1;            /*!< [27..27] SNAK                                                             */
      __OM  uint32_t SD0PID_SEVNFRM : 1;        /*!< [28..28] SD0PID/SEVNFRM                                                   */
      __OM  uint32_t SODDFRM    : 1;            /*!< [29..29] SODDFRM                                                          */
      __IOM uint32_t EPDIS      : 1;            /*!< [30..30] EPDIS                                                            */
      __IOM uint32_t EPENA      : 1;            /*!< [31..31] EPENA                                                            */
    } OTG_FS_DIEPCTL3_b;
  } ;
  __IM  uint32_t  RESERVED16;
  
  union {
    __IOM uint32_t OTG_FS_DIEPINT3;             /*!< (@ 0x00000168) device endpoint-3 interrupt register                       */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] XFRC                                                               */
      __IOM uint32_t EPDISD     : 1;            /*!< [1..1] EPDISD                                                             */
            uint32_t            : 1;
      __IOM uint32_t TOC        : 1;            /*!< [3..3] TOC                                                                */
      __IOM uint32_t ITTXFE     : 1;            /*!< [4..4] ITTXFE                                                             */
            uint32_t            : 1;
      __IOM uint32_t INEPNE     : 1;            /*!< [6..6] INEPNE                                                             */
      __IM  uint32_t TXFE       : 1;            /*!< [7..7] TXFE                                                               */
            uint32_t            : 24;
    } OTG_FS_DIEPINT3_b;
  } ;
  __IM  uint32_t  RESERVED17;
  
  union {
    __IOM uint32_t OTG_FS_DIEPTSIZ3;            /*!< (@ 0x00000170) device endpoint-3 transfer size register                   */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t MCNT       : 2;            /*!< [30..29] Multi count                                                      */
            uint32_t            : 1;
    } OTG_FS_DIEPTSIZ3_b;
  } ;
  __IM  uint32_t  RESERVED18;
  
  union {
    __IM  uint32_t OTG_FS_DTXFSTS3;             /*!< (@ 0x00000178) OTG_FS device IN endpoint transmit FIFO status
                                                                    register                                                   */
    
    struct {
      __IM  uint32_t INEPTFSAV  : 16;           /*!< [15..0] IN endpoint TxFIFO space available                                */
            uint32_t            : 16;
    } OTG_FS_DTXFSTS3_b;
  } ;
  __IM  uint32_t  RESERVED19;
  
  union {
    __IOM uint32_t OTG_FS_DIEPCTL4;             /*!< (@ 0x00000180) OTG device endpoint-4 control register                     */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] MPSIZ                                                             */
            uint32_t            : 4;
      __IOM uint32_t USBAEP     : 1;            /*!< [15..15] USBAEP                                                           */
      __IM  uint32_t EONUM_DPID : 1;            /*!< [16..16] EONUM/DPID                                                       */
      __IM  uint32_t NAKSTS     : 1;            /*!< [17..17] NAKSTS                                                           */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] EPTYP                                                            */
            uint32_t            : 1;
      __IOM uint32_t Stall      : 1;            /*!< [21..21] Stall                                                            */
      __IOM uint32_t TXFNUM     : 4;            /*!< [25..22] TXFNUM                                                           */
      __OM  uint32_t CNAK       : 1;            /*!< [26..26] CNAK                                                             */
      __OM  uint32_t SNAK       : 1;            /*!< [27..27] SNAK                                                             */
      __OM  uint32_t SD0PID_SEVNFRM : 1;        /*!< [28..28] SD0PID/SEVNFRM                                                   */
      __OM  uint32_t SODDFRM    : 1;            /*!< [29..29] SODDFRM                                                          */
      __IOM uint32_t EPDIS      : 1;            /*!< [30..30] EPDIS                                                            */
      __IOM uint32_t EPENA      : 1;            /*!< [31..31] EPENA                                                            */
    } OTG_FS_DIEPCTL4_b;
  } ;
  __IM  uint32_t  RESERVED20;
  
  union {
    __IOM uint32_t OTG_FS_DIEPINT4;             /*!< (@ 0x00000188) device endpoint-4 interrupt register                       */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] XFRC                                                               */
      __IOM uint32_t EPDISD     : 1;            /*!< [1..1] EPDISD                                                             */
            uint32_t            : 1;
      __IOM uint32_t TOC        : 1;            /*!< [3..3] TOC                                                                */
      __IOM uint32_t ITTXFE     : 1;            /*!< [4..4] ITTXFE                                                             */
            uint32_t            : 1;
      __IOM uint32_t INEPNE     : 1;            /*!< [6..6] INEPNE                                                             */
      __IM  uint32_t TXFE       : 1;            /*!< [7..7] TXFE                                                               */
            uint32_t            : 24;
    } OTG_FS_DIEPINT4_b;
  } ;
  __IM  uint32_t  RESERVED21[2];
  
  union {
    __IOM uint32_t OTG_FS_DIEPTSIZ4;            /*!< (@ 0x00000194) device endpoint-4 transfer size register                   */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t MCNT       : 2;            /*!< [30..29] Multi count                                                      */
            uint32_t            : 1;
    } OTG_FS_DIEPTSIZ4_b;
  } ;
  __IM  uint32_t  RESERVED22;
  
  union {
    __IOM uint32_t OTG_FS_DTXFSTS4;             /*!< (@ 0x0000019C) OTG_FS device IN endpoint transmit FIFO status
                                                                    register                                                   */
    
    struct {
      __IOM uint32_t INEPTFSAV  : 16;           /*!< [15..0] IN endpoint TxFIFO space available                                */
            uint32_t            : 16;
    } OTG_FS_DTXFSTS4_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_DIEPCTL5;             /*!< (@ 0x000001A0) OTG device endpoint-5 control register                     */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] MPSIZ                                                             */
            uint32_t            : 4;
      __IOM uint32_t USBAEP     : 1;            /*!< [15..15] USBAEP                                                           */
      __IM  uint32_t EONUM_DPID : 1;            /*!< [16..16] EONUM/DPID                                                       */
      __IM  uint32_t NAKSTS     : 1;            /*!< [17..17] NAKSTS                                                           */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] EPTYP                                                            */
            uint32_t            : 1;
      __IOM uint32_t Stall      : 1;            /*!< [21..21] Stall                                                            */
      __IOM uint32_t TXFNUM     : 4;            /*!< [25..22] TXFNUM                                                           */
      __OM  uint32_t CNAK       : 1;            /*!< [26..26] CNAK                                                             */
      __OM  uint32_t SNAK       : 1;            /*!< [27..27] SNAK                                                             */
      __OM  uint32_t SD0PID_SEVNFRM : 1;        /*!< [28..28] SD0PID/SEVNFRM                                                   */
      __OM  uint32_t SODDFRM    : 1;            /*!< [29..29] SODDFRM                                                          */
      __IOM uint32_t EPDIS      : 1;            /*!< [30..30] EPDIS                                                            */
      __IOM uint32_t EPENA      : 1;            /*!< [31..31] EPENA                                                            */
    } OTG_FS_DIEPCTL5_b;
  } ;
  __IM  uint32_t  RESERVED23;
  
  union {
    __IOM uint32_t OTG_FS_DIEPINT5;             /*!< (@ 0x000001A8) device endpoint-5 interrupt register                       */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] XFRC                                                               */
      __IOM uint32_t EPDISD     : 1;            /*!< [1..1] EPDISD                                                             */
            uint32_t            : 1;
      __IOM uint32_t TOC        : 1;            /*!< [3..3] TOC                                                                */
      __IOM uint32_t ITTXFE     : 1;            /*!< [4..4] ITTXFE                                                             */
            uint32_t            : 1;
      __IOM uint32_t INEPNE     : 1;            /*!< [6..6] INEPNE                                                             */
      __IM  uint32_t TXFE       : 1;            /*!< [7..7] TXFE                                                               */
            uint32_t            : 24;
    } OTG_FS_DIEPINT5_b;
  } ;
  __IM  uint32_t  RESERVED24;
  
  union {
    __IOM uint32_t OTG_FS_DIEPTSIZ55;           /*!< (@ 0x000001B0) device endpoint-5 transfer size register                   */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t MCNT       : 2;            /*!< [30..29] Multi count                                                      */
            uint32_t            : 1;
    } OTG_FS_DIEPTSIZ55_b;
  } ;
  __IM  uint32_t  RESERVED25;
  
  union {
    __IOM uint32_t OTG_FS_DTXFSTS55;            /*!< (@ 0x000001B8) OTG_FS device IN endpoint transmit FIFO status
                                                                    register                                                   */
    
    struct {
      __IOM uint32_t INEPTFSAV  : 16;           /*!< [15..0] IN endpoint TxFIFO space available                                */
            uint32_t            : 16;
    } OTG_FS_DTXFSTS55_b;
  } ;
  __IM  uint32_t  RESERVED26[81];
  
  union {
    __IOM uint32_t OTG_FS_DOEPCTL0;             /*!< (@ 0x00000300) device endpoint-0 control register                         */
    
    struct {
      __IM  uint32_t MPSIZ      : 2;            /*!< [1..0] MPSIZ                                                              */
            uint32_t            : 13;
      __IM  uint32_t USBAEP     : 1;            /*!< [15..15] USBAEP                                                           */
            uint32_t            : 1;
      __IM  uint32_t NAKSTS     : 1;            /*!< [17..17] NAKSTS                                                           */
      __IM  uint32_t EPTYP      : 2;            /*!< [19..18] EPTYP                                                            */
      __IOM uint32_t SNPM       : 1;            /*!< [20..20] SNPM                                                             */
      __IOM uint32_t Stall      : 1;            /*!< [21..21] Stall                                                            */
            uint32_t            : 4;
      __OM  uint32_t CNAK       : 1;            /*!< [26..26] CNAK                                                             */
      __OM  uint32_t SNAK       : 1;            /*!< [27..27] SNAK                                                             */
            uint32_t            : 2;
      __IM  uint32_t EPDIS      : 1;            /*!< [30..30] EPDIS                                                            */
      __OM  uint32_t EPENA      : 1;            /*!< [31..31] EPENA                                                            */
    } OTG_FS_DOEPCTL0_b;
  } ;
  __IM  uint32_t  RESERVED27;
  
  union {
    __IOM uint32_t OTG_FS_DOEPINT0;             /*!< (@ 0x00000308) device endpoint-0 interrupt register                       */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] XFRC                                                               */
      __IOM uint32_t EPDISD     : 1;            /*!< [1..1] EPDISD                                                             */
            uint32_t            : 1;
      __IOM uint32_t STUP       : 1;            /*!< [3..3] STUP                                                               */
      __IOM uint32_t OTEPDIS    : 1;            /*!< [4..4] OTEPDIS                                                            */
            uint32_t            : 1;
      __IOM uint32_t B2BSTUP    : 1;            /*!< [6..6] B2BSTUP                                                            */
            uint32_t            : 25;
    } OTG_FS_DOEPINT0_b;
  } ;
  __IM  uint32_t  RESERVED28;
  
  union {
    __IOM uint32_t OTG_FS_DOEPTSIZ0;            /*!< (@ 0x00000310) device OUT endpoint-0 transfer size register               */
    
    struct {
      __IOM uint32_t XFRSIZ     : 7;            /*!< [6..0] Transfer size                                                      */
            uint32_t            : 12;
      __IOM uint32_t PKTCNT     : 1;            /*!< [19..19] Packet count                                                     */
            uint32_t            : 9;
      __IOM uint32_t STUPCNT    : 2;            /*!< [30..29] SETUP packet count                                               */
            uint32_t            : 1;
    } OTG_FS_DOEPTSIZ0_b;
  } ;
  __IM  uint32_t  RESERVED29[3];
  
  union {
    __IOM uint32_t OTG_FS_DOEPCTL1;             /*!< (@ 0x00000320) device endpoint-1 control register                         */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] MPSIZ                                                             */
            uint32_t            : 4;
      __IOM uint32_t USBAEP     : 1;            /*!< [15..15] USBAEP                                                           */
      __IM  uint32_t EONUM_DPID : 1;            /*!< [16..16] EONUM/DPID                                                       */
      __IM  uint32_t NAKSTS     : 1;            /*!< [17..17] NAKSTS                                                           */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] EPTYP                                                            */
      __IOM uint32_t SNPM       : 1;            /*!< [20..20] SNPM                                                             */
      __IOM uint32_t Stall      : 1;            /*!< [21..21] Stall                                                            */
            uint32_t            : 4;
      __OM  uint32_t CNAK       : 1;            /*!< [26..26] CNAK                                                             */
      __OM  uint32_t SNAK       : 1;            /*!< [27..27] SNAK                                                             */
      __OM  uint32_t SD0PID_SEVNFRM : 1;        /*!< [28..28] SD0PID/SEVNFRM                                                   */
      __OM  uint32_t SODDFRM    : 1;            /*!< [29..29] SODDFRM                                                          */
      __IOM uint32_t EPDIS      : 1;            /*!< [30..30] EPDIS                                                            */
      __IOM uint32_t EPENA      : 1;            /*!< [31..31] EPENA                                                            */
    } OTG_FS_DOEPCTL1_b;
  } ;
  __IM  uint32_t  RESERVED30;
  
  union {
    __IOM uint32_t OTG_FS_DOEPINT1;             /*!< (@ 0x00000328) device endpoint-1 interrupt register                       */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] XFRC                                                               */
      __IOM uint32_t EPDISD     : 1;            /*!< [1..1] EPDISD                                                             */
            uint32_t            : 1;
      __IOM uint32_t STUP       : 1;            /*!< [3..3] STUP                                                               */
      __IOM uint32_t OTEPDIS    : 1;            /*!< [4..4] OTEPDIS                                                            */
            uint32_t            : 1;
      __IOM uint32_t B2BSTUP    : 1;            /*!< [6..6] B2BSTUP                                                            */
            uint32_t            : 25;
    } OTG_FS_DOEPINT1_b;
  } ;
  __IM  uint32_t  RESERVED31;
  
  union {
    __IOM uint32_t OTG_FS_DOEPTSIZ1;            /*!< (@ 0x00000330) device OUT endpoint-1 transfer size register               */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t RXDPID_STUPCNT : 2;        /*!< [30..29] Received data PID/SETUP packet count                             */
            uint32_t            : 1;
    } OTG_FS_DOEPTSIZ1_b;
  } ;
  __IM  uint32_t  RESERVED32[3];
  
  union {
    __IOM uint32_t OTG_FS_DOEPCTL2;             /*!< (@ 0x00000340) device endpoint-2 control register                         */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] MPSIZ                                                             */
            uint32_t            : 4;
      __IOM uint32_t USBAEP     : 1;            /*!< [15..15] USBAEP                                                           */
      __IM  uint32_t EONUM_DPID : 1;            /*!< [16..16] EONUM/DPID                                                       */
      __IM  uint32_t NAKSTS     : 1;            /*!< [17..17] NAKSTS                                                           */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] EPTYP                                                            */
      __IOM uint32_t SNPM       : 1;            /*!< [20..20] SNPM                                                             */
      __IOM uint32_t Stall      : 1;            /*!< [21..21] Stall                                                            */
            uint32_t            : 4;
      __OM  uint32_t CNAK       : 1;            /*!< [26..26] CNAK                                                             */
      __OM  uint32_t SNAK       : 1;            /*!< [27..27] SNAK                                                             */
      __OM  uint32_t SD0PID_SEVNFRM : 1;        /*!< [28..28] SD0PID/SEVNFRM                                                   */
      __OM  uint32_t SODDFRM    : 1;            /*!< [29..29] SODDFRM                                                          */
      __IOM uint32_t EPDIS      : 1;            /*!< [30..30] EPDIS                                                            */
      __IOM uint32_t EPENA      : 1;            /*!< [31..31] EPENA                                                            */
    } OTG_FS_DOEPCTL2_b;
  } ;
  __IM  uint32_t  RESERVED33;
  
  union {
    __IOM uint32_t OTG_FS_DOEPINT2;             /*!< (@ 0x00000348) device endpoint-2 interrupt register                       */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] XFRC                                                               */
      __IOM uint32_t EPDISD     : 1;            /*!< [1..1] EPDISD                                                             */
            uint32_t            : 1;
      __IOM uint32_t STUP       : 1;            /*!< [3..3] STUP                                                               */
      __IOM uint32_t OTEPDIS    : 1;            /*!< [4..4] OTEPDIS                                                            */
            uint32_t            : 1;
      __IOM uint32_t B2BSTUP    : 1;            /*!< [6..6] B2BSTUP                                                            */
            uint32_t            : 25;
    } OTG_FS_DOEPINT2_b;
  } ;
  __IM  uint32_t  RESERVED34;
  
  union {
    __IOM uint32_t OTG_FS_DOEPTSIZ2;            /*!< (@ 0x00000350) device OUT endpoint-2 transfer size register               */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t RXDPID_STUPCNT : 2;        /*!< [30..29] Received data PID/SETUP packet count                             */
            uint32_t            : 1;
    } OTG_FS_DOEPTSIZ2_b;
  } ;
  __IM  uint32_t  RESERVED35[3];
  
  union {
    __IOM uint32_t OTG_FS_DOEPCTL3;             /*!< (@ 0x00000360) device endpoint-3 control register                         */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] MPSIZ                                                             */
            uint32_t            : 4;
      __IOM uint32_t USBAEP     : 1;            /*!< [15..15] USBAEP                                                           */
      __IM  uint32_t EONUM_DPID : 1;            /*!< [16..16] EONUM/DPID                                                       */
      __IM  uint32_t NAKSTS     : 1;            /*!< [17..17] NAKSTS                                                           */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] EPTYP                                                            */
      __IOM uint32_t SNPM       : 1;            /*!< [20..20] SNPM                                                             */
      __IOM uint32_t Stall      : 1;            /*!< [21..21] Stall                                                            */
            uint32_t            : 4;
      __OM  uint32_t CNAK       : 1;            /*!< [26..26] CNAK                                                             */
      __OM  uint32_t SNAK       : 1;            /*!< [27..27] SNAK                                                             */
      __OM  uint32_t SD0PID_SEVNFRM : 1;        /*!< [28..28] SD0PID/SEVNFRM                                                   */
      __OM  uint32_t SODDFRM    : 1;            /*!< [29..29] SODDFRM                                                          */
      __IOM uint32_t EPDIS      : 1;            /*!< [30..30] EPDIS                                                            */
      __IOM uint32_t EPENA      : 1;            /*!< [31..31] EPENA                                                            */
    } OTG_FS_DOEPCTL3_b;
  } ;
  __IM  uint32_t  RESERVED36;
  
  union {
    __IOM uint32_t OTG_FS_DOEPINT3;             /*!< (@ 0x00000368) device endpoint-3 interrupt register                       */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] XFRC                                                               */
      __IOM uint32_t EPDISD     : 1;            /*!< [1..1] EPDISD                                                             */
            uint32_t            : 1;
      __IOM uint32_t STUP       : 1;            /*!< [3..3] STUP                                                               */
      __IOM uint32_t OTEPDIS    : 1;            /*!< [4..4] OTEPDIS                                                            */
            uint32_t            : 1;
      __IOM uint32_t B2BSTUP    : 1;            /*!< [6..6] B2BSTUP                                                            */
            uint32_t            : 25;
    } OTG_FS_DOEPINT3_b;
  } ;
  __IM  uint32_t  RESERVED37;
  
  union {
    __IOM uint32_t OTG_FS_DOEPTSIZ3;            /*!< (@ 0x00000370) device OUT endpoint-3 transfer size register               */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t RXDPID_STUPCNT : 2;        /*!< [30..29] Received data PID/SETUP packet count                             */
            uint32_t            : 1;
    } OTG_FS_DOEPTSIZ3_b;
  } ;
  __IM  uint32_t  RESERVED38;
  
  union {
    __IOM uint32_t OTG_FS_DOEPCTL4;             /*!< (@ 0x00000378) device endpoint-4 control register                         */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] MPSIZ                                                             */
            uint32_t            : 4;
      __IOM uint32_t USBAEP     : 1;            /*!< [15..15] USBAEP                                                           */
      __IM  uint32_t EONUM_DPID : 1;            /*!< [16..16] EONUM/DPID                                                       */
      __IM  uint32_t NAKSTS     : 1;            /*!< [17..17] NAKSTS                                                           */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] EPTYP                                                            */
      __IOM uint32_t SNPM       : 1;            /*!< [20..20] SNPM                                                             */
      __IOM uint32_t Stall      : 1;            /*!< [21..21] Stall                                                            */
            uint32_t            : 4;
      __OM  uint32_t CNAK       : 1;            /*!< [26..26] CNAK                                                             */
      __OM  uint32_t SNAK       : 1;            /*!< [27..27] SNAK                                                             */
      __OM  uint32_t SD0PID_SEVNFRM : 1;        /*!< [28..28] SD0PID/SEVNFRM                                                   */
      __OM  uint32_t SODDFRM    : 1;            /*!< [29..29] SODDFRM                                                          */
      __IOM uint32_t EPDIS      : 1;            /*!< [30..30] EPDIS                                                            */
      __IOM uint32_t EPENA      : 1;            /*!< [31..31] EPENA                                                            */
    } OTG_FS_DOEPCTL4_b;
  } ;
  __IM  uint32_t  RESERVED39;
  
  union {
    __IOM uint32_t OTG_FS_DOEPINT4;             /*!< (@ 0x00000380) device endpoint-4 interrupt register                       */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] XFRC                                                               */
      __IOM uint32_t EPDISD     : 1;            /*!< [1..1] EPDISD                                                             */
            uint32_t            : 1;
      __IOM uint32_t STUP       : 1;            /*!< [3..3] STUP                                                               */
      __IOM uint32_t OTEPDIS    : 1;            /*!< [4..4] OTEPDIS                                                            */
            uint32_t            : 1;
      __IOM uint32_t B2BSTUP    : 1;            /*!< [6..6] B2BSTUP                                                            */
            uint32_t            : 25;
    } OTG_FS_DOEPINT4_b;
  } ;
  __IM  uint32_t  RESERVED40;
  
  union {
    __IOM uint32_t OTG_FS_DOEPTSIZ4;            /*!< (@ 0x00000388) device OUT endpoint-4 transfer size register               */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t RXDPID_STUPCNT : 2;        /*!< [30..29] Received data PID/SETUP packet count                             */
            uint32_t            : 1;
    } OTG_FS_DOEPTSIZ4_b;
  } ;
  __IM  uint32_t  RESERVED41;
  
  union {
    __IOM uint32_t OTG_FS_DOEPCTL5;             /*!< (@ 0x00000390) device endpoint-5 control register                         */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] MPSIZ                                                             */
            uint32_t            : 4;
      __IOM uint32_t USBAEP     : 1;            /*!< [15..15] USBAEP                                                           */
      __IM  uint32_t EONUM_DPID : 1;            /*!< [16..16] EONUM/DPID                                                       */
      __IM  uint32_t NAKSTS     : 1;            /*!< [17..17] NAKSTS                                                           */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] EPTYP                                                            */
      __IOM uint32_t SNPM       : 1;            /*!< [20..20] SNPM                                                             */
      __IOM uint32_t Stall      : 1;            /*!< [21..21] Stall                                                            */
            uint32_t            : 4;
      __OM  uint32_t CNAK       : 1;            /*!< [26..26] CNAK                                                             */
      __OM  uint32_t SNAK       : 1;            /*!< [27..27] SNAK                                                             */
      __OM  uint32_t SD0PID_SEVNFRM : 1;        /*!< [28..28] SD0PID/SEVNFRM                                                   */
      __OM  uint32_t SODDFRM    : 1;            /*!< [29..29] SODDFRM                                                          */
      __IOM uint32_t EPDIS      : 1;            /*!< [30..30] EPDIS                                                            */
      __IOM uint32_t EPENA      : 1;            /*!< [31..31] EPENA                                                            */
    } OTG_FS_DOEPCTL5_b;
  } ;
  __IM  uint32_t  RESERVED42;
  
  union {
    __IOM uint32_t OTG_FS_DOEPINT5;             /*!< (@ 0x00000398) device endpoint-5 interrupt register                       */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] XFRC                                                               */
      __IOM uint32_t EPDISD     : 1;            /*!< [1..1] EPDISD                                                             */
            uint32_t            : 1;
      __IOM uint32_t STUP       : 1;            /*!< [3..3] STUP                                                               */
      __IOM uint32_t OTEPDIS    : 1;            /*!< [4..4] OTEPDIS                                                            */
            uint32_t            : 1;
      __IOM uint32_t B2BSTUP    : 1;            /*!< [6..6] B2BSTUP                                                            */
            uint32_t            : 25;
    } OTG_FS_DOEPINT5_b;
  } ;
  __IM  uint32_t  RESERVED43;
  
  union {
    __IOM uint32_t OTG_FS_DOEPTSIZ5;            /*!< (@ 0x000003A0) device OUT endpoint-5 transfer size register               */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t RXDPID_STUPCNT : 2;        /*!< [30..29] Received data PID/SETUP packet count                             */
            uint32_t            : 1;
    } OTG_FS_DOEPTSIZ5_b;
  } ;
} OTG_FS_DEVICE_Type;                           /*!< Size = 932 (0x3a4)                                                        */



/* =========================================================================================================================== */
/* ================                                        OTG_FS_HOST                                        ================ */
/* =========================================================================================================================== */


/**
  * @brief USB on the go full speed (OTG_FS_HOST)
  */

typedef struct {                                /*!< (@ 0x50000400) OTG_FS_HOST Structure                                      */
  
  union {
    __IOM uint32_t OTG_FS_HCFG;                 /*!< (@ 0x00000000) OTG_FS host configuration register (OTG_FS_HCFG)           */
    
    struct {
      __IOM uint32_t FSLSPCS    : 2;            /*!< [1..0] FS/LS PHY clock select                                             */
      __IM  uint32_t FSLSS      : 1;            /*!< [2..2] FS- and LS-only support                                            */
            uint32_t            : 29;
    } OTG_FS_HCFG_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_HFIR;                 /*!< (@ 0x00000004) OTG_FS Host frame interval register                        */
    
    struct {
      __IOM uint32_t FRIVL      : 16;           /*!< [15..0] Frame interval                                                    */
            uint32_t            : 16;
    } OTG_FS_HFIR_b;
  } ;
  
  union {
    __IM  uint32_t OTG_FS_HFNUM;                /*!< (@ 0x00000008) OTG_FS host frame number/frame time remaining
                                                                    register (OTG_FS_HFNUM)                                    */
    
    struct {
      __IM  uint32_t FRNUM      : 16;           /*!< [15..0] Frame number                                                      */
      __IM  uint32_t FTREM      : 16;           /*!< [31..16] Frame time remaining                                             */
    } OTG_FS_HFNUM_b;
  } ;
  __IM  uint32_t  RESERVED;
  
  union {
    __IOM uint32_t OTG_FS_HPTXSTS;              /*!< (@ 0x00000010) OTG_FS_Host periodic transmit FIFO/queue status
                                                                    register (OTG_FS_HPTXSTS)                                  */
    
    struct {
      __IOM uint32_t PTXFSAVL   : 16;           /*!< [15..0] Periodic transmit data FIFO space available                       */
      __IM  uint32_t PTXQSAV    : 8;            /*!< [23..16] Periodic transmit request queue space available                  */
      __IM  uint32_t PTXQTOP    : 8;            /*!< [31..24] Top of the periodic transmit request queue                       */
    } OTG_FS_HPTXSTS_b;
  } ;
  
  union {
    __IM  uint32_t OTG_FS_HAINT;                /*!< (@ 0x00000014) OTG_FS Host all channels interrupt register                */
    
    struct {
      __IM  uint32_t HAINT      : 16;           /*!< [15..0] Channel interrupts                                                */
            uint32_t            : 16;
    } OTG_FS_HAINT_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_HAINTMSK;             /*!< (@ 0x00000018) OTG_FS host all channels interrupt mask register           */
    
    struct {
      __IOM uint32_t HAINTM     : 16;           /*!< [15..0] Channel interrupt mask                                            */
            uint32_t            : 16;
    } OTG_FS_HAINTMSK_b;
  } ;
  __IM  uint32_t  RESERVED1[9];
  
  union {
    __IOM uint32_t OTG_FS_HPRT;                 /*!< (@ 0x00000040) OTG_FS host port control and status register
                                                                    (OTG_FS_HPRT)                                              */
    
    struct {
      __IM  uint32_t PCSTS      : 1;            /*!< [0..0] Port connect status                                                */
      __IOM uint32_t PCDET      : 1;            /*!< [1..1] Port connect detected                                              */
      __IOM uint32_t PENA       : 1;            /*!< [2..2] Port enable                                                        */
      __IOM uint32_t PENCHNG    : 1;            /*!< [3..3] Port enable/disable change                                         */
      __IM  uint32_t POCA       : 1;            /*!< [4..4] Port overcurrent active                                            */
      __IOM uint32_t POCCHNG    : 1;            /*!< [5..5] Port overcurrent change                                            */
      __IOM uint32_t PRES       : 1;            /*!< [6..6] Port resume                                                        */
      __IOM uint32_t PSUSP      : 1;            /*!< [7..7] Port suspend                                                       */
      __IOM uint32_t PRST       : 1;            /*!< [8..8] Port reset                                                         */
            uint32_t            : 1;
      __IM  uint32_t PLSTS      : 2;            /*!< [11..10] Port line status                                                 */
      __IOM uint32_t PPWR       : 1;            /*!< [12..12] Port power                                                       */
      __IOM uint32_t PTCTL      : 4;            /*!< [16..13] Port test control                                                */
      __IM  uint32_t PSPD       : 2;            /*!< [18..17] Port speed                                                       */
            uint32_t            : 13;
    } OTG_FS_HPRT_b;
  } ;
  __IM  uint32_t  RESERVED2[47];
  
  union {
    __IOM uint32_t OTG_FS_HCCHAR0;              /*!< (@ 0x00000100) OTG_FS host channel-0 characteristics register
                                                                    (OTG_FS_HCCHAR0)                                           */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
      __IOM uint32_t EPNUM      : 4;            /*!< [14..11] Endpoint number                                                  */
      __IOM uint32_t EPDIR      : 1;            /*!< [15..15] Endpoint direction                                               */
            uint32_t            : 1;
      __IOM uint32_t LSDEV      : 1;            /*!< [17..17] Low-speed device                                                 */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
      __IOM uint32_t MCNT       : 2;            /*!< [21..20] Multicount                                                       */
      __IOM uint32_t DAD        : 7;            /*!< [28..22] Device address                                                   */
      __IOM uint32_t ODDFRM     : 1;            /*!< [29..29] Odd frame                                                        */
      __IOM uint32_t CHDIS      : 1;            /*!< [30..30] Channel disable                                                  */
      __IOM uint32_t CHENA      : 1;            /*!< [31..31] Channel enable                                                   */
    } OTG_FS_HCCHAR0_b;
  } ;
  __IM  uint32_t  RESERVED3;
  
  union {
    __IOM uint32_t OTG_FS_HCINT0;               /*!< (@ 0x00000108) OTG_FS host channel-0 interrupt register (OTG_FS_HCINT0)   */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed                                                 */
      __IOM uint32_t CHH        : 1;            /*!< [1..1] Channel halted                                                     */
            uint32_t            : 1;
      __IOM uint32_t STALL      : 1;            /*!< [3..3] STALL response received interrupt                                  */
      __IOM uint32_t NAK        : 1;            /*!< [4..4] NAK response received interrupt                                    */
      __IOM uint32_t ACK        : 1;            /*!< [5..5] ACK response received/transmitted interrupt                        */
            uint32_t            : 1;
      __IOM uint32_t TXERR      : 1;            /*!< [7..7] Transaction error                                                  */
      __IOM uint32_t BBERR      : 1;            /*!< [8..8] Babble error                                                       */
      __IOM uint32_t FRMOR      : 1;            /*!< [9..9] Frame overrun                                                      */
      __IOM uint32_t DTERR      : 1;            /*!< [10..10] Data toggle error                                                */
            uint32_t            : 21;
    } OTG_FS_HCINT0_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_HCINTMSK0;            /*!< (@ 0x0000010C) OTG_FS host channel-0 mask register (OTG_FS_HCINTMSK0)     */
    
    struct {
      __IOM uint32_t XFRCM      : 1;            /*!< [0..0] Transfer completed mask                                            */
      __IOM uint32_t CHHM       : 1;            /*!< [1..1] Channel halted mask                                                */
            uint32_t            : 1;
      __IOM uint32_t STALLM     : 1;            /*!< [3..3] STALL response received interrupt mask                             */
      __IOM uint32_t NAKM       : 1;            /*!< [4..4] NAK response received interrupt mask                               */
      __IOM uint32_t ACKM       : 1;            /*!< [5..5] ACK response received/transmitted interrupt mask                   */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] response received interrupt mask                                   */
      __IOM uint32_t TXERRM     : 1;            /*!< [7..7] Transaction error mask                                             */
      __IOM uint32_t BBERRM     : 1;            /*!< [8..8] Babble error mask                                                  */
      __IOM uint32_t FRMORM     : 1;            /*!< [9..9] Frame overrun mask                                                 */
      __IOM uint32_t DTERRM     : 1;            /*!< [10..10] Data toggle error mask                                           */
            uint32_t            : 21;
    } OTG_FS_HCINTMSK0_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_HCTSIZ0;              /*!< (@ 0x00000110) OTG_FS host channel-0 transfer size register               */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t DPID       : 2;            /*!< [30..29] Data PID                                                         */
            uint32_t            : 1;
    } OTG_FS_HCTSIZ0_b;
  } ;
  __IM  uint32_t  RESERVED4[3];
  
  union {
    __IOM uint32_t OTG_FS_HCCHAR1;              /*!< (@ 0x00000120) OTG_FS host channel-1 characteristics register
                                                                    (OTG_FS_HCCHAR1)                                           */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
      __IOM uint32_t EPNUM      : 4;            /*!< [14..11] Endpoint number                                                  */
      __IOM uint32_t EPDIR      : 1;            /*!< [15..15] Endpoint direction                                               */
            uint32_t            : 1;
      __IOM uint32_t LSDEV      : 1;            /*!< [17..17] Low-speed device                                                 */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
      __IOM uint32_t MCNT       : 2;            /*!< [21..20] Multicount                                                       */
      __IOM uint32_t DAD        : 7;            /*!< [28..22] Device address                                                   */
      __IOM uint32_t ODDFRM     : 1;            /*!< [29..29] Odd frame                                                        */
      __IOM uint32_t CHDIS      : 1;            /*!< [30..30] Channel disable                                                  */
      __IOM uint32_t CHENA      : 1;            /*!< [31..31] Channel enable                                                   */
    } OTG_FS_HCCHAR1_b;
  } ;
  __IM  uint32_t  RESERVED5;
  
  union {
    __IOM uint32_t OTG_FS_HCINT1;               /*!< (@ 0x00000128) OTG_FS host channel-1 interrupt register (OTG_FS_HCINT1)   */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed                                                 */
      __IOM uint32_t CHH        : 1;            /*!< [1..1] Channel halted                                                     */
            uint32_t            : 1;
      __IOM uint32_t STALL      : 1;            /*!< [3..3] STALL response received interrupt                                  */
      __IOM uint32_t NAK        : 1;            /*!< [4..4] NAK response received interrupt                                    */
      __IOM uint32_t ACK        : 1;            /*!< [5..5] ACK response received/transmitted interrupt                        */
            uint32_t            : 1;
      __IOM uint32_t TXERR      : 1;            /*!< [7..7] Transaction error                                                  */
      __IOM uint32_t BBERR      : 1;            /*!< [8..8] Babble error                                                       */
      __IOM uint32_t FRMOR      : 1;            /*!< [9..9] Frame overrun                                                      */
      __IOM uint32_t DTERR      : 1;            /*!< [10..10] Data toggle error                                                */
            uint32_t            : 21;
    } OTG_FS_HCINT1_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_HCINTMSK1;            /*!< (@ 0x0000012C) OTG_FS host channel-1 mask register (OTG_FS_HCINTMSK1)     */
    
    struct {
      __IOM uint32_t XFRCM      : 1;            /*!< [0..0] Transfer completed mask                                            */
      __IOM uint32_t CHHM       : 1;            /*!< [1..1] Channel halted mask                                                */
            uint32_t            : 1;
      __IOM uint32_t STALLM     : 1;            /*!< [3..3] STALL response received interrupt mask                             */
      __IOM uint32_t NAKM       : 1;            /*!< [4..4] NAK response received interrupt mask                               */
      __IOM uint32_t ACKM       : 1;            /*!< [5..5] ACK response received/transmitted interrupt mask                   */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] response received interrupt mask                                   */
      __IOM uint32_t TXERRM     : 1;            /*!< [7..7] Transaction error mask                                             */
      __IOM uint32_t BBERRM     : 1;            /*!< [8..8] Babble error mask                                                  */
      __IOM uint32_t FRMORM     : 1;            /*!< [9..9] Frame overrun mask                                                 */
      __IOM uint32_t DTERRM     : 1;            /*!< [10..10] Data toggle error mask                                           */
            uint32_t            : 21;
    } OTG_FS_HCINTMSK1_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_HCTSIZ1;              /*!< (@ 0x00000130) OTG_FS host channel-1 transfer size register               */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t DPID       : 2;            /*!< [30..29] Data PID                                                         */
            uint32_t            : 1;
    } OTG_FS_HCTSIZ1_b;
  } ;
  __IM  uint32_t  RESERVED6[3];
  
  union {
    __IOM uint32_t OTG_FS_HCCHAR2;              /*!< (@ 0x00000140) OTG_FS host channel-2 characteristics register
                                                                    (OTG_FS_HCCHAR2)                                           */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
      __IOM uint32_t EPNUM      : 4;            /*!< [14..11] Endpoint number                                                  */
      __IOM uint32_t EPDIR      : 1;            /*!< [15..15] Endpoint direction                                               */
            uint32_t            : 1;
      __IOM uint32_t LSDEV      : 1;            /*!< [17..17] Low-speed device                                                 */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
      __IOM uint32_t MCNT       : 2;            /*!< [21..20] Multicount                                                       */
      __IOM uint32_t DAD        : 7;            /*!< [28..22] Device address                                                   */
      __IOM uint32_t ODDFRM     : 1;            /*!< [29..29] Odd frame                                                        */
      __IOM uint32_t CHDIS      : 1;            /*!< [30..30] Channel disable                                                  */
      __IOM uint32_t CHENA      : 1;            /*!< [31..31] Channel enable                                                   */
    } OTG_FS_HCCHAR2_b;
  } ;
  __IM  uint32_t  RESERVED7;
  
  union {
    __IOM uint32_t OTG_FS_HCINT2;               /*!< (@ 0x00000148) OTG_FS host channel-2 interrupt register (OTG_FS_HCINT2)   */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed                                                 */
      __IOM uint32_t CHH        : 1;            /*!< [1..1] Channel halted                                                     */
            uint32_t            : 1;
      __IOM uint32_t STALL      : 1;            /*!< [3..3] STALL response received interrupt                                  */
      __IOM uint32_t NAK        : 1;            /*!< [4..4] NAK response received interrupt                                    */
      __IOM uint32_t ACK        : 1;            /*!< [5..5] ACK response received/transmitted interrupt                        */
            uint32_t            : 1;
      __IOM uint32_t TXERR      : 1;            /*!< [7..7] Transaction error                                                  */
      __IOM uint32_t BBERR      : 1;            /*!< [8..8] Babble error                                                       */
      __IOM uint32_t FRMOR      : 1;            /*!< [9..9] Frame overrun                                                      */
      __IOM uint32_t DTERR      : 1;            /*!< [10..10] Data toggle error                                                */
            uint32_t            : 21;
    } OTG_FS_HCINT2_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_HCINTMSK2;            /*!< (@ 0x0000014C) OTG_FS host channel-2 mask register (OTG_FS_HCINTMSK2)     */
    
    struct {
      __IOM uint32_t XFRCM      : 1;            /*!< [0..0] Transfer completed mask                                            */
      __IOM uint32_t CHHM       : 1;            /*!< [1..1] Channel halted mask                                                */
            uint32_t            : 1;
      __IOM uint32_t STALLM     : 1;            /*!< [3..3] STALL response received interrupt mask                             */
      __IOM uint32_t NAKM       : 1;            /*!< [4..4] NAK response received interrupt mask                               */
      __IOM uint32_t ACKM       : 1;            /*!< [5..5] ACK response received/transmitted interrupt mask                   */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] response received interrupt mask                                   */
      __IOM uint32_t TXERRM     : 1;            /*!< [7..7] Transaction error mask                                             */
      __IOM uint32_t BBERRM     : 1;            /*!< [8..8] Babble error mask                                                  */
      __IOM uint32_t FRMORM     : 1;            /*!< [9..9] Frame overrun mask                                                 */
      __IOM uint32_t DTERRM     : 1;            /*!< [10..10] Data toggle error mask                                           */
            uint32_t            : 21;
    } OTG_FS_HCINTMSK2_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_HCTSIZ2;              /*!< (@ 0x00000150) OTG_FS host channel-2 transfer size register               */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t DPID       : 2;            /*!< [30..29] Data PID                                                         */
            uint32_t            : 1;
    } OTG_FS_HCTSIZ2_b;
  } ;
  __IM  uint32_t  RESERVED8[3];
  
  union {
    __IOM uint32_t OTG_FS_HCCHAR3;              /*!< (@ 0x00000160) OTG_FS host channel-3 characteristics register
                                                                    (OTG_FS_HCCHAR3)                                           */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
      __IOM uint32_t EPNUM      : 4;            /*!< [14..11] Endpoint number                                                  */
      __IOM uint32_t EPDIR      : 1;            /*!< [15..15] Endpoint direction                                               */
            uint32_t            : 1;
      __IOM uint32_t LSDEV      : 1;            /*!< [17..17] Low-speed device                                                 */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
      __IOM uint32_t MCNT       : 2;            /*!< [21..20] Multicount                                                       */
      __IOM uint32_t DAD        : 7;            /*!< [28..22] Device address                                                   */
      __IOM uint32_t ODDFRM     : 1;            /*!< [29..29] Odd frame                                                        */
      __IOM uint32_t CHDIS      : 1;            /*!< [30..30] Channel disable                                                  */
      __IOM uint32_t CHENA      : 1;            /*!< [31..31] Channel enable                                                   */
    } OTG_FS_HCCHAR3_b;
  } ;
  __IM  uint32_t  RESERVED9;
  
  union {
    __IOM uint32_t OTG_FS_HCINT3;               /*!< (@ 0x00000168) OTG_FS host channel-3 interrupt register (OTG_FS_HCINT3)   */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed                                                 */
      __IOM uint32_t CHH        : 1;            /*!< [1..1] Channel halted                                                     */
            uint32_t            : 1;
      __IOM uint32_t STALL      : 1;            /*!< [3..3] STALL response received interrupt                                  */
      __IOM uint32_t NAK        : 1;            /*!< [4..4] NAK response received interrupt                                    */
      __IOM uint32_t ACK        : 1;            /*!< [5..5] ACK response received/transmitted interrupt                        */
            uint32_t            : 1;
      __IOM uint32_t TXERR      : 1;            /*!< [7..7] Transaction error                                                  */
      __IOM uint32_t BBERR      : 1;            /*!< [8..8] Babble error                                                       */
      __IOM uint32_t FRMOR      : 1;            /*!< [9..9] Frame overrun                                                      */
      __IOM uint32_t DTERR      : 1;            /*!< [10..10] Data toggle error                                                */
            uint32_t            : 21;
    } OTG_FS_HCINT3_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_HCINTMSK3;            /*!< (@ 0x0000016C) OTG_FS host channel-3 mask register (OTG_FS_HCINTMSK3)     */
    
    struct {
      __IOM uint32_t XFRCM      : 1;            /*!< [0..0] Transfer completed mask                                            */
      __IOM uint32_t CHHM       : 1;            /*!< [1..1] Channel halted mask                                                */
            uint32_t            : 1;
      __IOM uint32_t STALLM     : 1;            /*!< [3..3] STALL response received interrupt mask                             */
      __IOM uint32_t NAKM       : 1;            /*!< [4..4] NAK response received interrupt mask                               */
      __IOM uint32_t ACKM       : 1;            /*!< [5..5] ACK response received/transmitted interrupt mask                   */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] response received interrupt mask                                   */
      __IOM uint32_t TXERRM     : 1;            /*!< [7..7] Transaction error mask                                             */
      __IOM uint32_t BBERRM     : 1;            /*!< [8..8] Babble error mask                                                  */
      __IOM uint32_t FRMORM     : 1;            /*!< [9..9] Frame overrun mask                                                 */
      __IOM uint32_t DTERRM     : 1;            /*!< [10..10] Data toggle error mask                                           */
            uint32_t            : 21;
    } OTG_FS_HCINTMSK3_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_HCTSIZ3;              /*!< (@ 0x00000170) OTG_FS host channel-3 transfer size register               */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t DPID       : 2;            /*!< [30..29] Data PID                                                         */
            uint32_t            : 1;
    } OTG_FS_HCTSIZ3_b;
  } ;
  __IM  uint32_t  RESERVED10[3];
  
  union {
    __IOM uint32_t OTG_FS_HCCHAR4;              /*!< (@ 0x00000180) OTG_FS host channel-4 characteristics register
                                                                    (OTG_FS_HCCHAR4)                                           */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
      __IOM uint32_t EPNUM      : 4;            /*!< [14..11] Endpoint number                                                  */
      __IOM uint32_t EPDIR      : 1;            /*!< [15..15] Endpoint direction                                               */
            uint32_t            : 1;
      __IOM uint32_t LSDEV      : 1;            /*!< [17..17] Low-speed device                                                 */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
      __IOM uint32_t MCNT       : 2;            /*!< [21..20] Multicount                                                       */
      __IOM uint32_t DAD        : 7;            /*!< [28..22] Device address                                                   */
      __IOM uint32_t ODDFRM     : 1;            /*!< [29..29] Odd frame                                                        */
      __IOM uint32_t CHDIS      : 1;            /*!< [30..30] Channel disable                                                  */
      __IOM uint32_t CHENA      : 1;            /*!< [31..31] Channel enable                                                   */
    } OTG_FS_HCCHAR4_b;
  } ;
  __IM  uint32_t  RESERVED11;
  
  union {
    __IOM uint32_t OTG_FS_HCINT4;               /*!< (@ 0x00000188) OTG_FS host channel-4 interrupt register (OTG_FS_HCINT4)   */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed                                                 */
      __IOM uint32_t CHH        : 1;            /*!< [1..1] Channel halted                                                     */
            uint32_t            : 1;
      __IOM uint32_t STALL      : 1;            /*!< [3..3] STALL response received interrupt                                  */
      __IOM uint32_t NAK        : 1;            /*!< [4..4] NAK response received interrupt                                    */
      __IOM uint32_t ACK        : 1;            /*!< [5..5] ACK response received/transmitted interrupt                        */
            uint32_t            : 1;
      __IOM uint32_t TXERR      : 1;            /*!< [7..7] Transaction error                                                  */
      __IOM uint32_t BBERR      : 1;            /*!< [8..8] Babble error                                                       */
      __IOM uint32_t FRMOR      : 1;            /*!< [9..9] Frame overrun                                                      */
      __IOM uint32_t DTERR      : 1;            /*!< [10..10] Data toggle error                                                */
            uint32_t            : 21;
    } OTG_FS_HCINT4_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_HCINTMSK4;            /*!< (@ 0x0000018C) OTG_FS host channel-4 mask register (OTG_FS_HCINTMSK4)     */
    
    struct {
      __IOM uint32_t XFRCM      : 1;            /*!< [0..0] Transfer completed mask                                            */
      __IOM uint32_t CHHM       : 1;            /*!< [1..1] Channel halted mask                                                */
            uint32_t            : 1;
      __IOM uint32_t STALLM     : 1;            /*!< [3..3] STALL response received interrupt mask                             */
      __IOM uint32_t NAKM       : 1;            /*!< [4..4] NAK response received interrupt mask                               */
      __IOM uint32_t ACKM       : 1;            /*!< [5..5] ACK response received/transmitted interrupt mask                   */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] response received interrupt mask                                   */
      __IOM uint32_t TXERRM     : 1;            /*!< [7..7] Transaction error mask                                             */
      __IOM uint32_t BBERRM     : 1;            /*!< [8..8] Babble error mask                                                  */
      __IOM uint32_t FRMORM     : 1;            /*!< [9..9] Frame overrun mask                                                 */
      __IOM uint32_t DTERRM     : 1;            /*!< [10..10] Data toggle error mask                                           */
            uint32_t            : 21;
    } OTG_FS_HCINTMSK4_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_HCTSIZ4;              /*!< (@ 0x00000190) OTG_FS host channel-x transfer size register               */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t DPID       : 2;            /*!< [30..29] Data PID                                                         */
            uint32_t            : 1;
    } OTG_FS_HCTSIZ4_b;
  } ;
  __IM  uint32_t  RESERVED12[3];
  
  union {
    __IOM uint32_t OTG_FS_HCCHAR5;              /*!< (@ 0x000001A0) OTG_FS host channel-5 characteristics register
                                                                    (OTG_FS_HCCHAR5)                                           */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
      __IOM uint32_t EPNUM      : 4;            /*!< [14..11] Endpoint number                                                  */
      __IOM uint32_t EPDIR      : 1;            /*!< [15..15] Endpoint direction                                               */
            uint32_t            : 1;
      __IOM uint32_t LSDEV      : 1;            /*!< [17..17] Low-speed device                                                 */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
      __IOM uint32_t MCNT       : 2;            /*!< [21..20] Multicount                                                       */
      __IOM uint32_t DAD        : 7;            /*!< [28..22] Device address                                                   */
      __IOM uint32_t ODDFRM     : 1;            /*!< [29..29] Odd frame                                                        */
      __IOM uint32_t CHDIS      : 1;            /*!< [30..30] Channel disable                                                  */
      __IOM uint32_t CHENA      : 1;            /*!< [31..31] Channel enable                                                   */
    } OTG_FS_HCCHAR5_b;
  } ;
  __IM  uint32_t  RESERVED13;
  
  union {
    __IOM uint32_t OTG_FS_HCINT5;               /*!< (@ 0x000001A8) OTG_FS host channel-5 interrupt register (OTG_FS_HCINT5)   */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed                                                 */
      __IOM uint32_t CHH        : 1;            /*!< [1..1] Channel halted                                                     */
            uint32_t            : 1;
      __IOM uint32_t STALL      : 1;            /*!< [3..3] STALL response received interrupt                                  */
      __IOM uint32_t NAK        : 1;            /*!< [4..4] NAK response received interrupt                                    */
      __IOM uint32_t ACK        : 1;            /*!< [5..5] ACK response received/transmitted interrupt                        */
            uint32_t            : 1;
      __IOM uint32_t TXERR      : 1;            /*!< [7..7] Transaction error                                                  */
      __IOM uint32_t BBERR      : 1;            /*!< [8..8] Babble error                                                       */
      __IOM uint32_t FRMOR      : 1;            /*!< [9..9] Frame overrun                                                      */
      __IOM uint32_t DTERR      : 1;            /*!< [10..10] Data toggle error                                                */
            uint32_t            : 21;
    } OTG_FS_HCINT5_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_HCINTMSK5;            /*!< (@ 0x000001AC) OTG_FS host channel-5 mask register (OTG_FS_HCINTMSK5)     */
    
    struct {
      __IOM uint32_t XFRCM      : 1;            /*!< [0..0] Transfer completed mask                                            */
      __IOM uint32_t CHHM       : 1;            /*!< [1..1] Channel halted mask                                                */
            uint32_t            : 1;
      __IOM uint32_t STALLM     : 1;            /*!< [3..3] STALL response received interrupt mask                             */
      __IOM uint32_t NAKM       : 1;            /*!< [4..4] NAK response received interrupt mask                               */
      __IOM uint32_t ACKM       : 1;            /*!< [5..5] ACK response received/transmitted interrupt mask                   */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] response received interrupt mask                                   */
      __IOM uint32_t TXERRM     : 1;            /*!< [7..7] Transaction error mask                                             */
      __IOM uint32_t BBERRM     : 1;            /*!< [8..8] Babble error mask                                                  */
      __IOM uint32_t FRMORM     : 1;            /*!< [9..9] Frame overrun mask                                                 */
      __IOM uint32_t DTERRM     : 1;            /*!< [10..10] Data toggle error mask                                           */
            uint32_t            : 21;
    } OTG_FS_HCINTMSK5_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_HCTSIZ5;              /*!< (@ 0x000001B0) OTG_FS host channel-5 transfer size register               */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t DPID       : 2;            /*!< [30..29] Data PID                                                         */
            uint32_t            : 1;
    } OTG_FS_HCTSIZ5_b;
  } ;
  __IM  uint32_t  RESERVED14[3];
  
  union {
    __IOM uint32_t OTG_FS_HCCHAR6;              /*!< (@ 0x000001C0) OTG_FS host channel-6 characteristics register
                                                                    (OTG_FS_HCCHAR6)                                           */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
      __IOM uint32_t EPNUM      : 4;            /*!< [14..11] Endpoint number                                                  */
      __IOM uint32_t EPDIR      : 1;            /*!< [15..15] Endpoint direction                                               */
            uint32_t            : 1;
      __IOM uint32_t LSDEV      : 1;            /*!< [17..17] Low-speed device                                                 */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
      __IOM uint32_t MCNT       : 2;            /*!< [21..20] Multicount                                                       */
      __IOM uint32_t DAD        : 7;            /*!< [28..22] Device address                                                   */
      __IOM uint32_t ODDFRM     : 1;            /*!< [29..29] Odd frame                                                        */
      __IOM uint32_t CHDIS      : 1;            /*!< [30..30] Channel disable                                                  */
      __IOM uint32_t CHENA      : 1;            /*!< [31..31] Channel enable                                                   */
    } OTG_FS_HCCHAR6_b;
  } ;
  __IM  uint32_t  RESERVED15;
  
  union {
    __IOM uint32_t OTG_FS_HCINT6;               /*!< (@ 0x000001C8) OTG_FS host channel-6 interrupt register (OTG_FS_HCINT6)   */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed                                                 */
      __IOM uint32_t CHH        : 1;            /*!< [1..1] Channel halted                                                     */
            uint32_t            : 1;
      __IOM uint32_t STALL      : 1;            /*!< [3..3] STALL response received interrupt                                  */
      __IOM uint32_t NAK        : 1;            /*!< [4..4] NAK response received interrupt                                    */
      __IOM uint32_t ACK        : 1;            /*!< [5..5] ACK response received/transmitted interrupt                        */
            uint32_t            : 1;
      __IOM uint32_t TXERR      : 1;            /*!< [7..7] Transaction error                                                  */
      __IOM uint32_t BBERR      : 1;            /*!< [8..8] Babble error                                                       */
      __IOM uint32_t FRMOR      : 1;            /*!< [9..9] Frame overrun                                                      */
      __IOM uint32_t DTERR      : 1;            /*!< [10..10] Data toggle error                                                */
            uint32_t            : 21;
    } OTG_FS_HCINT6_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_HCINTMSK6;            /*!< (@ 0x000001CC) OTG_FS host channel-6 mask register (OTG_FS_HCINTMSK6)     */
    
    struct {
      __IOM uint32_t XFRCM      : 1;            /*!< [0..0] Transfer completed mask                                            */
      __IOM uint32_t CHHM       : 1;            /*!< [1..1] Channel halted mask                                                */
            uint32_t            : 1;
      __IOM uint32_t STALLM     : 1;            /*!< [3..3] STALL response received interrupt mask                             */
      __IOM uint32_t NAKM       : 1;            /*!< [4..4] NAK response received interrupt mask                               */
      __IOM uint32_t ACKM       : 1;            /*!< [5..5] ACK response received/transmitted interrupt mask                   */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] response received interrupt mask                                   */
      __IOM uint32_t TXERRM     : 1;            /*!< [7..7] Transaction error mask                                             */
      __IOM uint32_t BBERRM     : 1;            /*!< [8..8] Babble error mask                                                  */
      __IOM uint32_t FRMORM     : 1;            /*!< [9..9] Frame overrun mask                                                 */
      __IOM uint32_t DTERRM     : 1;            /*!< [10..10] Data toggle error mask                                           */
            uint32_t            : 21;
    } OTG_FS_HCINTMSK6_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_HCTSIZ6;              /*!< (@ 0x000001D0) OTG_FS host channel-6 transfer size register               */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t DPID       : 2;            /*!< [30..29] Data PID                                                         */
            uint32_t            : 1;
    } OTG_FS_HCTSIZ6_b;
  } ;
  __IM  uint32_t  RESERVED16[3];
  
  union {
    __IOM uint32_t OTG_FS_HCCHAR7;              /*!< (@ 0x000001E0) OTG_FS host channel-7 characteristics register
                                                                    (OTG_FS_HCCHAR7)                                           */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
      __IOM uint32_t EPNUM      : 4;            /*!< [14..11] Endpoint number                                                  */
      __IOM uint32_t EPDIR      : 1;            /*!< [15..15] Endpoint direction                                               */
            uint32_t            : 1;
      __IOM uint32_t LSDEV      : 1;            /*!< [17..17] Low-speed device                                                 */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
      __IOM uint32_t MCNT       : 2;            /*!< [21..20] Multicount                                                       */
      __IOM uint32_t DAD        : 7;            /*!< [28..22] Device address                                                   */
      __IOM uint32_t ODDFRM     : 1;            /*!< [29..29] Odd frame                                                        */
      __IOM uint32_t CHDIS      : 1;            /*!< [30..30] Channel disable                                                  */
      __IOM uint32_t CHENA      : 1;            /*!< [31..31] Channel enable                                                   */
    } OTG_FS_HCCHAR7_b;
  } ;
  __IM  uint32_t  RESERVED17;
  
  union {
    __IOM uint32_t OTG_FS_HCINT7;               /*!< (@ 0x000001E8) OTG_FS host channel-7 interrupt register (OTG_FS_HCINT7)   */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed                                                 */
      __IOM uint32_t CHH        : 1;            /*!< [1..1] Channel halted                                                     */
            uint32_t            : 1;
      __IOM uint32_t STALL      : 1;            /*!< [3..3] STALL response received interrupt                                  */
      __IOM uint32_t NAK        : 1;            /*!< [4..4] NAK response received interrupt                                    */
      __IOM uint32_t ACK        : 1;            /*!< [5..5] ACK response received/transmitted interrupt                        */
            uint32_t            : 1;
      __IOM uint32_t TXERR      : 1;            /*!< [7..7] Transaction error                                                  */
      __IOM uint32_t BBERR      : 1;            /*!< [8..8] Babble error                                                       */
      __IOM uint32_t FRMOR      : 1;            /*!< [9..9] Frame overrun                                                      */
      __IOM uint32_t DTERR      : 1;            /*!< [10..10] Data toggle error                                                */
            uint32_t            : 21;
    } OTG_FS_HCINT7_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_HCINTMSK7;            /*!< (@ 0x000001EC) OTG_FS host channel-7 mask register (OTG_FS_HCINTMSK7)     */
    
    struct {
      __IOM uint32_t XFRCM      : 1;            /*!< [0..0] Transfer completed mask                                            */
      __IOM uint32_t CHHM       : 1;            /*!< [1..1] Channel halted mask                                                */
            uint32_t            : 1;
      __IOM uint32_t STALLM     : 1;            /*!< [3..3] STALL response received interrupt mask                             */
      __IOM uint32_t NAKM       : 1;            /*!< [4..4] NAK response received interrupt mask                               */
      __IOM uint32_t ACKM       : 1;            /*!< [5..5] ACK response received/transmitted interrupt mask                   */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] response received interrupt mask                                   */
      __IOM uint32_t TXERRM     : 1;            /*!< [7..7] Transaction error mask                                             */
      __IOM uint32_t BBERRM     : 1;            /*!< [8..8] Babble error mask                                                  */
      __IOM uint32_t FRMORM     : 1;            /*!< [9..9] Frame overrun mask                                                 */
      __IOM uint32_t DTERRM     : 1;            /*!< [10..10] Data toggle error mask                                           */
            uint32_t            : 21;
    } OTG_FS_HCINTMSK7_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_HCTSIZ7;              /*!< (@ 0x000001F0) OTG_FS host channel-7 transfer size register               */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t DPID       : 2;            /*!< [30..29] Data PID                                                         */
            uint32_t            : 1;
    } OTG_FS_HCTSIZ7_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_HCCHAR8;              /*!< (@ 0x000001F4) OTG_FS host channel-8 characteristics register             */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
      __IOM uint32_t EPNUM      : 4;            /*!< [14..11] Endpoint number                                                  */
      __IOM uint32_t EPDIR      : 1;            /*!< [15..15] Endpoint direction                                               */
            uint32_t            : 1;
      __IOM uint32_t LSDEV      : 1;            /*!< [17..17] Low-speed device                                                 */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
      __IOM uint32_t MCNT       : 2;            /*!< [21..20] Multicount                                                       */
      __IOM uint32_t DAD        : 7;            /*!< [28..22] Device address                                                   */
      __IOM uint32_t ODDFRM     : 1;            /*!< [29..29] Odd frame                                                        */
      __IOM uint32_t CHDIS      : 1;            /*!< [30..30] Channel disable                                                  */
      __IOM uint32_t CHENA      : 1;            /*!< [31..31] Channel enable                                                   */
    } OTG_FS_HCCHAR8_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_HCINT8;               /*!< (@ 0x000001F8) OTG_FS host channel-8 interrupt register                   */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed                                                 */
      __IOM uint32_t CHH        : 1;            /*!< [1..1] Channel halted                                                     */
            uint32_t            : 1;
      __IOM uint32_t STALL      : 1;            /*!< [3..3] STALL response received interrupt                                  */
      __IOM uint32_t NAK        : 1;            /*!< [4..4] NAK response received interrupt                                    */
      __IOM uint32_t ACK        : 1;            /*!< [5..5] ACK response received/transmitted interrupt                        */
            uint32_t            : 1;
      __IOM uint32_t TXERR      : 1;            /*!< [7..7] Transaction error                                                  */
      __IOM uint32_t BBERR      : 1;            /*!< [8..8] Babble error                                                       */
      __IOM uint32_t FRMOR      : 1;            /*!< [9..9] Frame overrun                                                      */
      __IOM uint32_t DTERR      : 1;            /*!< [10..10] Data toggle error                                                */
            uint32_t            : 21;
    } OTG_FS_HCINT8_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_HCINTMSK8;            /*!< (@ 0x000001FC) OTG_FS host channel-8 mask register                        */
    
    struct {
      __IOM uint32_t XFRCM      : 1;            /*!< [0..0] Transfer completed mask                                            */
      __IOM uint32_t CHHM       : 1;            /*!< [1..1] Channel halted mask                                                */
            uint32_t            : 1;
      __IOM uint32_t STALLM     : 1;            /*!< [3..3] STALL response received interrupt mask                             */
      __IOM uint32_t NAKM       : 1;            /*!< [4..4] NAK response received interrupt mask                               */
      __IOM uint32_t ACKM       : 1;            /*!< [5..5] ACK response received/transmitted interrupt mask                   */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] response received interrupt mask                                   */
      __IOM uint32_t TXERRM     : 1;            /*!< [7..7] Transaction error                                                  */
      __IOM uint32_t BBERRM     : 1;            /*!< [8..8] Babble error mask                                                  */
      __IOM uint32_t FRMORM     : 1;            /*!< [9..9] Frame overrun mask                                                 */
      __IOM uint32_t DTERRM     : 1;            /*!< [10..10] Data toggle error mask                                           */
            uint32_t            : 21;
    } OTG_FS_HCINTMSK8_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_HCTSIZ8;              /*!< (@ 0x00000200) OTG_FS host channel-8 transfer size register               */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t DPID       : 2;            /*!< [30..29] Data PID                                                         */
            uint32_t            : 1;
    } OTG_FS_HCTSIZ8_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_HCCHAR9;              /*!< (@ 0x00000204) OTG_FS host channel-9 characteristics register             */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
      __IOM uint32_t EPNUM      : 4;            /*!< [14..11] Endpoint number                                                  */
      __IOM uint32_t EPDIR      : 1;            /*!< [15..15] Endpoint direction                                               */
            uint32_t            : 1;
      __IOM uint32_t LSDEV      : 1;            /*!< [17..17] Low-speed device                                                 */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
      __IOM uint32_t MCNT       : 2;            /*!< [21..20] Multicount                                                       */
      __IOM uint32_t DAD        : 7;            /*!< [28..22] Device address                                                   */
      __IOM uint32_t ODDFRM     : 1;            /*!< [29..29] Odd frame                                                        */
      __IOM uint32_t CHDIS      : 1;            /*!< [30..30] Channel disable                                                  */
      __IOM uint32_t CHENA      : 1;            /*!< [31..31] Channel enable                                                   */
    } OTG_FS_HCCHAR9_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_HCINT9;               /*!< (@ 0x00000208) OTG_FS host channel-9 interrupt register                   */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed                                                 */
      __IOM uint32_t CHH        : 1;            /*!< [1..1] Channel halted                                                     */
            uint32_t            : 1;
      __IOM uint32_t STALL      : 1;            /*!< [3..3] STALL response received interrupt                                  */
      __IOM uint32_t NAK        : 1;            /*!< [4..4] NAK response received interrupt                                    */
      __IOM uint32_t ACK        : 1;            /*!< [5..5] ACK response received/transmitted interrupt                        */
            uint32_t            : 1;
      __IOM uint32_t TXERR      : 1;            /*!< [7..7] Transaction error                                                  */
      __IOM uint32_t BBERR      : 1;            /*!< [8..8] Babble error                                                       */
      __IOM uint32_t FRMOR      : 1;            /*!< [9..9] Frame overrun                                                      */
      __IOM uint32_t DTERR      : 1;            /*!< [10..10] Data toggle error                                                */
            uint32_t            : 21;
    } OTG_FS_HCINT9_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_HCINTMSK9;            /*!< (@ 0x0000020C) OTG_FS host channel-9 mask register                        */
    
    struct {
      __IOM uint32_t XFRCM      : 1;            /*!< [0..0] Transfer completed mask                                            */
      __IOM uint32_t CHHM       : 1;            /*!< [1..1] Channel halted mask                                                */
            uint32_t            : 1;
      __IOM uint32_t STALLM     : 1;            /*!< [3..3] STALL response received interrupt mask                             */
      __IOM uint32_t NAKM       : 1;            /*!< [4..4] NAK response received interrupt mask                               */
      __IOM uint32_t ACKM       : 1;            /*!< [5..5] ACK response received/transmitted interrupt mask                   */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] response received interrupt mask                                   */
      __IOM uint32_t TXERRM     : 1;            /*!< [7..7] Transaction error mask                                             */
      __IOM uint32_t BBERRM     : 1;            /*!< [8..8] Babble error mask                                                  */
      __IOM uint32_t FRMORM     : 1;            /*!< [9..9] Frame overrun mask                                                 */
      __IOM uint32_t DTERRM     : 1;            /*!< [10..10] Data toggle error mask                                           */
            uint32_t            : 21;
    } OTG_FS_HCINTMSK9_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_HCTSIZ9;              /*!< (@ 0x00000210) OTG_FS host channel-9 transfer size register               */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t DPID       : 2;            /*!< [30..29] Data PID                                                         */
            uint32_t            : 1;
    } OTG_FS_HCTSIZ9_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_HCCHAR10;             /*!< (@ 0x00000214) OTG_FS host channel-10 characteristics register            */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
      __IOM uint32_t EPNUM      : 4;            /*!< [14..11] Endpoint number                                                  */
      __IOM uint32_t EPDIR      : 1;            /*!< [15..15] Endpoint direction                                               */
            uint32_t            : 1;
      __IOM uint32_t LSDEV      : 1;            /*!< [17..17] Low-speed device                                                 */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
      __IOM uint32_t MCNT       : 2;            /*!< [21..20] Multicount                                                       */
      __IOM uint32_t DAD        : 7;            /*!< [28..22] Device address                                                   */
      __IOM uint32_t ODDFRM     : 1;            /*!< [29..29] Odd frame                                                        */
      __IOM uint32_t CHDIS      : 1;            /*!< [30..30] Channel disable                                                  */
      __IOM uint32_t CHENA      : 1;            /*!< [31..31] Channel enable                                                   */
    } OTG_FS_HCCHAR10_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_HCINT10;              /*!< (@ 0x00000218) OTG_FS host channel-10 interrupt register                  */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed                                                 */
      __IOM uint32_t CHH        : 1;            /*!< [1..1] Channel halted                                                     */
            uint32_t            : 1;
      __IOM uint32_t STALL      : 1;            /*!< [3..3] STALL response received interrupt                                  */
      __IOM uint32_t NAK        : 1;            /*!< [4..4] NAK response received interrupt                                    */
      __IOM uint32_t ACK        : 1;            /*!< [5..5] ACK response received/transmitted interrupt                        */
            uint32_t            : 1;
      __IOM uint32_t TXERR      : 1;            /*!< [7..7] Transaction error                                                  */
      __IOM uint32_t BBERR      : 1;            /*!< [8..8] Babble error                                                       */
      __IOM uint32_t FRMOR      : 1;            /*!< [9..9] Frame overrun                                                      */
      __IOM uint32_t DTERR      : 1;            /*!< [10..10] Data toggle error                                                */
            uint32_t            : 21;
    } OTG_FS_HCINT10_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_HCINTMSK10;           /*!< (@ 0x0000021C) OTG_FS host channel-10 mask register                       */
    
    struct {
      __IOM uint32_t XFRCM      : 1;            /*!< [0..0] Transfer completed mask                                            */
      __IOM uint32_t CHHM       : 1;            /*!< [1..1] Channel halted mask                                                */
            uint32_t            : 1;
      __IOM uint32_t STALLM     : 1;            /*!< [3..3] STALL response received interrupt mask                             */
      __IOM uint32_t NAKM       : 1;            /*!< [4..4] NAK response received interrupt mask                               */
      __IOM uint32_t ACKM       : 1;            /*!< [5..5] ACK response received/transmitted interrupt mask                   */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] response received interrupt mask                                   */
      __IOM uint32_t TXERRM     : 1;            /*!< [7..7] Transaction error mask                                             */
      __IOM uint32_t BBERRM     : 1;            /*!< [8..8] Babble error mask                                                  */
      __IOM uint32_t FRMORM     : 1;            /*!< [9..9] Frame overrun mask                                                 */
      __IOM uint32_t DTERRM     : 1;            /*!< [10..10] Data toggle error mask                                           */
            uint32_t            : 21;
    } OTG_FS_HCINTMSK10_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_HCTSIZ10;             /*!< (@ 0x00000220) OTG_FS host channel-10 transfer size register              */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t DPID       : 2;            /*!< [30..29] Data PID                                                         */
            uint32_t            : 1;
    } OTG_FS_HCTSIZ10_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_HCCHAR11;             /*!< (@ 0x00000224) OTG_FS host channel-11 characteristics register            */
    
    struct {
      __IOM uint32_t MPSIZ      : 11;           /*!< [10..0] Maximum packet size                                               */
      __IOM uint32_t EPNUM      : 4;            /*!< [14..11] Endpoint number                                                  */
      __IOM uint32_t EPDIR      : 1;            /*!< [15..15] Endpoint direction                                               */
            uint32_t            : 1;
      __IOM uint32_t LSDEV      : 1;            /*!< [17..17] Low-speed device                                                 */
      __IOM uint32_t EPTYP      : 2;            /*!< [19..18] Endpoint type                                                    */
      __IOM uint32_t MCNT       : 2;            /*!< [21..20] Multicount                                                       */
      __IOM uint32_t DAD        : 7;            /*!< [28..22] Device address                                                   */
      __IOM uint32_t ODDFRM     : 1;            /*!< [29..29] Odd frame                                                        */
      __IOM uint32_t CHDIS      : 1;            /*!< [30..30] Channel disable                                                  */
      __IOM uint32_t CHENA      : 1;            /*!< [31..31] Channel enable                                                   */
    } OTG_FS_HCCHAR11_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_HCINT11;              /*!< (@ 0x00000228) OTG_FS host channel-11 interrupt register                  */
    
    struct {
      __IOM uint32_t XFRC       : 1;            /*!< [0..0] Transfer completed                                                 */
      __IOM uint32_t CHH        : 1;            /*!< [1..1] Channel halted                                                     */
            uint32_t            : 1;
      __IOM uint32_t STALL      : 1;            /*!< [3..3] STALL response received interrupt                                  */
      __IOM uint32_t NAK        : 1;            /*!< [4..4] NAK response received interrupt                                    */
      __IOM uint32_t ACK        : 1;            /*!< [5..5] ACK response received/transmitted interrupt                        */
            uint32_t            : 1;
      __IOM uint32_t TXERR      : 1;            /*!< [7..7] Transaction error                                                  */
      __IOM uint32_t BBERR      : 1;            /*!< [8..8] Babble error                                                       */
      __IOM uint32_t FRMOR      : 1;            /*!< [9..9] Frame overrun                                                      */
      __IOM uint32_t DTERR      : 1;            /*!< [10..10] Data toggle error                                                */
            uint32_t            : 21;
    } OTG_FS_HCINT11_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_HCINTMSK11;           /*!< (@ 0x0000022C) OTG_FS host channel-11 mask register                       */
    
    struct {
      __IOM uint32_t XFRCM      : 1;            /*!< [0..0] Transfer completed mask                                            */
      __IOM uint32_t CHHM       : 1;            /*!< [1..1] Channel halted mask                                                */
            uint32_t            : 1;
      __IOM uint32_t STALLM     : 1;            /*!< [3..3] STALL response received interrupt mask                             */
      __IOM uint32_t NAKM       : 1;            /*!< [4..4] NAK response received interrupt mask                               */
      __IOM uint32_t ACKM       : 1;            /*!< [5..5] ACK response received/transmitted interrupt mask                   */
      __IOM uint32_t NYET       : 1;            /*!< [6..6] response received interrupt mask                                   */
      __IOM uint32_t TXERRM     : 1;            /*!< [7..7] Transaction error mask                                             */
      __IOM uint32_t BBERRM     : 1;            /*!< [8..8] Babble error mask                                                  */
      __IOM uint32_t FRMORM     : 1;            /*!< [9..9] Frame overrun mask                                                 */
      __IOM uint32_t DTERRM     : 1;            /*!< [10..10] Data toggle error mask                                           */
            uint32_t            : 21;
    } OTG_FS_HCINTMSK11_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_HCTSIZ11;             /*!< (@ 0x00000230) OTG_FS host channel-11 transfer size register              */
    
    struct {
      __IOM uint32_t XFRSIZ     : 19;           /*!< [18..0] Transfer size                                                     */
      __IOM uint32_t PKTCNT     : 10;           /*!< [28..19] Packet count                                                     */
      __IOM uint32_t DPID       : 2;            /*!< [30..29] Data PID                                                         */
            uint32_t            : 1;
    } OTG_FS_HCTSIZ11_b;
  } ;
} OTG_FS_HOST_Type;                             /*!< Size = 564 (0x234)                                                        */



/* =========================================================================================================================== */
/* ================                                       OTG_HS_GLOBAL                                       ================ */
/* =========================================================================================================================== */


/**
  * @brief USB on the go high speed (OTG_HS_GLOBAL)
  */

typedef struct {                                /*!< (@ 0x40040000) OTG_HS_GLOBAL Structure                                    */
  
  union {
    __IOM uint32_t OTG_HS_GOTGCTL;              /*!< (@ 0x00000000) OTG_HS control and status register                         */
    
    struct {
      __IM  uint32_t SRQSCS     : 1;            /*!< [0..0] Session request success                                            */
      __IOM uint32_t SRQ        : 1;            /*!< [1..1] Session request                                                    */
            uint32_t            : 6;
      __IM  uint32_t HNGSCS     : 1;            /*!< [8..8] Host negotiation success                                           */
      __IOM uint32_t HNPRQ      : 1;            /*!< [9..9] HNP request                                                        */
      __IOM uint32_t HSHNPEN    : 1;            /*!< [10..10] Host set HNP enable                                              */
      __IOM uint32_t DHNPEN     : 1;            /*!< [11..11] Device HNP enabled                                               */
      __IOM uint32_t EHEN       : 1;            /*!< [12..12] Embedded host enable                                             */
            uint32_t            : 3;
      __IM  uint32_t CIDSTS     : 1;            /*!< [16..16] Connector ID status                                              */
      __IM  uint32_t DBCT       : 1;            /*!< [17..17] Long/short debounce time                                         */
      __IM  uint32_t ASVLD      : 1;            /*!< [18..18] A-session valid                                                  */
      __IM  uint32_t BSVLD      : 1;            /*!< [19..19] B-session valid                                                  */
            uint32_t            : 12;
    } OTG_HS_GOTGCTL_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_GOTGINT;              /*!< (@ 0x00000004) OTG_HS interrupt register                                  */
    
    struct {
            uint32_t            : 2;
      __IOM uint32_t SEDET      : 1;            /*!< [2..2] Session end detected                                               */
            uint32_t            : 5;
      __IOM uint32_t SRSSCHG    : 1;            /*!< [8..8] Session request success status change                              */
      __IOM uint32_t HNSSCHG    : 1;            /*!< [9..9] Host negotiation success status change                             */
            uint32_t            : 7;
      __IOM uint32_t HNGDET     : 1;            /*!< [17..17] Host negotiation detected                                        */
      __IOM uint32_t ADTOCHG    : 1;            /*!< [18..18] A-device timeout change                                          */
      __IOM uint32_t DBCDNE     : 1;            /*!< [19..19] Debounce done                                                    */
      __IOM uint32_t IDCHNG     : 1;            /*!< [20..20] ID input pin changed                                             */
            uint32_t            : 11;
    } OTG_HS_GOTGINT_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_GAHBCFG;              /*!< (@ 0x00000008) OTG_HS AHB configuration register                          */
    
    struct {
      __IOM uint32_t GINT       : 1;            /*!< [0..0] Global interrupt mask                                              */
      __IOM uint32_t HBSTLEN    : 4;            /*!< [4..1] Burst length/type                                                  */
      __IOM uint32_t DMAEN      : 1;            /*!< [5..5] DMA enable                                                         */
            uint32_t            : 1;
      __IOM uint32_t TXFELVL    : 1;            /*!< [7..7] TxFIFO empty level                                                 */
      __IOM uint32_t PTXFELVL   : 1;            /*!< [8..8] Periodic TxFIFO empty level                                        */
            uint32_t            : 23;
    } OTG_HS_GAHBCFG_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_GUSBCFG;              /*!< (@ 0x0000000C) OTG_HS USB configuration register                          */
    
    struct {
      __IOM uint32_t TOCAL      : 3;            /*!< [2..0] FS timeout calibration                                             */
            uint32_t            : 3;
      __OM  uint32_t PHYSEL     : 1;            /*!< [6..6] USB 2.0 high-speed ULPI PHY or USB 1.1 full-speed serial
                                                     transceiver select                                                        */
            uint32_t            : 1;
      __IOM uint32_t SRPCAP     : 1;            /*!< [8..8] SRP-capable                                                        */
      __IOM uint32_t HNPCAP     : 1;            /*!< [9..9] HNP-capable                                                        */
      __IOM uint32_t TRDT       : 4;            /*!< [13..10] USB turnaround time                                              */
            uint32_t            : 1;
      __IOM uint32_t PHYLPCS    : 1;            /*!< [15..15] PHY Low-power clock select                                       */
            uint32_t            : 1;
      __IOM uint32_t ULPIFSLS   : 1;            /*!< [17..17] ULPI FS/LS select                                                */
      __IOM uint32_t ULPIAR     : 1;            /*!< [18..18] ULPI Auto-resume                                                 */
      __IOM uint32_t ULPICSM    : 1;            /*!< [19..19] ULPI Clock SuspendM                                              */
      __IOM uint32_t ULPIEVBUSD : 1;            /*!< [20..20] ULPI External VBUS Drive                                         */
      __IOM uint32_t ULPIEVBUSI : 1;            /*!< [21..21] ULPI external VBUS indicator                                     */
      __IOM uint32_t TSDPS      : 1;            /*!< [22..22] TermSel DLine pulsing selection                                  */
      __IOM uint32_t PCCI       : 1;            /*!< [23..23] Indicator complement                                             */
      __IOM uint32_t PTCI       : 1;            /*!< [24..24] Indicator pass through                                           */
      __IOM uint32_t ULPIIPD    : 1;            /*!< [25..25] ULPI interface protect disable                                   */
            uint32_t            : 3;
      __IOM uint32_t FHMOD      : 1;            /*!< [29..29] Forced host mode                                                 */
      __IOM uint32_t FDMOD      : 1;            /*!< [30..30] Forced peripheral mode                                           */
            uint32_t            : 1;
    } OTG_HS_GUSBCFG_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_GRSTCTL;              /*!< (@ 0x00000010) OTG_HS reset register                                      */
    
    struct {
      __IOM uint32_t CSRST      : 1;            /*!< [0..0] Core soft reset                                                    */
      __IOM uint32_t HSRST      : 1;            /*!< [1..1] HCLK soft reset                                                    */
      __IOM uint32_t FCRST      : 1;            /*!< [2..2] Host frame counter reset                                           */
            uint32_t            : 1;
      __IOM uint32_t RXFFLSH    : 1;            /*!< [4..4] RxFIFO flush                                                       */
      __IOM uint32_t TXFFLSH    : 1;            /*!< [5..5] TxFIFO flush                                                       */
      __IOM uint32_t TXFNUM     : 5;            /*!< [10..6] TxFIFO number                                                     */
            uint32_t            : 19;
      __IM  uint32_t DMAREQ     : 1;            /*!< [30..30] DMA request signal enabled for USB OTG HS                        */
      __IM  uint32_t AHBIDL     : 1;            /*!< [31..31] AHB master idle                                                  */
    } OTG_HS_GRSTCTL_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_GINTSTS;              /*!< (@ 0x00000014) OTG_HS core interrupt register                             */
    
    struct {
      __IM  uint32_t CMOD       : 1;            /*!< [0..0] Current mode of operation                                          */
      __IOM uint32_t MMIS       : 1;            /*!< [1..1] Mode mismatch interrupt                                            */
      __IM  uint32_t OTGINT     : 1;            /*!< [2..2] OTG interrupt                                                      */
      __IOM uint32_t SOF        : 1;            /*!< [3..3] Start of frame                                                     */
      __IM  uint32_t RXFLVL     : 1;            /*!< [4..4] RxFIFO nonempty                                                    */
      __IM  uint32_t NPTXFE     : 1;            /*!< [5..5] Nonperiodic TxFIFO empty                                           */
      __IM  uint32_t GINAKEFF   : 1;            /*!< [6..6] Global IN nonperiodic NAK effective                                */
      __IM  uint32_t BOUTNAKEFF : 1;            /*!< [7..7] Global OUT NAK effective                                           */
            uint32_t            : 2;
      __IOM uint32_t ESUSP      : 1;            /*!< [10..10] Early suspend                                                    */
      __IOM uint32_t USBSUSP    : 1;            /*!< [11..11] USB suspend                                                      */
      __IOM uint32_t USBRST     : 1;            /*!< [12..12] USB reset                                                        */
      __IOM uint32_t ENUMDNE    : 1;            /*!< [13..13] Enumeration done                                                 */
      __IOM uint32_t ISOODRP    : 1;            /*!< [14..14] Isochronous OUT packet dropped interrupt                         */
      __IOM uint32_t EOPF       : 1;            /*!< [15..15] End of periodic frame interrupt                                  */
            uint32_t            : 2;
      __IM  uint32_t IEPINT     : 1;            /*!< [18..18] IN endpoint interrupt                                            */
      __IM  uint32_t OEPINT     : 1;            /*!< [19..19] OUT endpoint interrupt                                           */
      __IOM uint32_t IISOIXFR   : 1;            /*!< [20..20] Incomplete isochronous IN transfer                               */
      __IOM uint32_t PXFR_INCOMPISOOUT : 1;     /*!< [21..21] Incomplete periodic transfer                                     */
      __IOM uint32_t DATAFSUSP  : 1;            /*!< [22..22] Data fetch suspended                                             */
            uint32_t            : 1;
      __IM  uint32_t HPRTINT    : 1;            /*!< [24..24] Host port interrupt                                              */
      __IM  uint32_t HCINT      : 1;            /*!< [25..25] Host channels interrupt                                          */
      __IM  uint32_t PTXFE      : 1;            /*!< [26..26] Periodic TxFIFO empty                                            */
            uint32_t            : 1;
      __IOM uint32_t CIDSCHG    : 1;            /*!< [28..28] Connector ID status change                                       */
      __IOM uint32_t DISCINT    : 1;            /*!< [29..29] Disconnect detected interrupt                                    */
      __IOM uint32_t SRQINT     : 1;            /*!< [30..30] Session request/new session detected interrupt                   */
      __IOM uint32_t WKUINT     : 1;            /*!< [31..31] Resume/remote wakeup detected interrupt                          */
    } OTG_HS_GINTSTS_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_GINTMSK;              /*!< (@ 0x00000018) OTG_HS interrupt mask register                             */
    
    struct {
            uint32_t            : 1;
      __IOM uint32_t MMISM      : 1;            /*!< [1..1] Mode mismatch interrupt mask                                       */
      __IOM uint32_t OTGINT     : 1;            /*!< [2..2] OTG interrupt mask                                                 */
      __IOM uint32_t SOFM       : 1;            /*!< [3..3] Start of frame mask                                                */
      __IOM uint32_t RXFLVLM    : 1;            /*!< [4..4] Receive FIFO nonempty mask                                         */
      __IOM uint32_t NPTXFEM    : 1;            /*!< [5..5] Nonperiodic TxFIFO empty mask                                      */
      __IOM uint32_t GINAKEFFM  : 1;            /*!< [6..6] Global nonperiodic IN NAK effective mask                           */
      __IOM uint32_t GONAKEFFM  : 1;            /*!< [7..7] Global OUT NAK effective mask                                      */
            uint32_t            : 2;
      __IOM uint32_t ESUSPM     : 1;            /*!< [10..10] Early suspend mask                                               */
      __IOM uint32_t USBSUSPM   : 1;            /*!< [11..11] USB suspend mask                                                 */
      __IOM uint32_t USBRST     : 1;            /*!< [12..12] USB reset mask                                                   */
      __IOM uint32_t ENUMDNEM   : 1;            /*!< [13..13] Enumeration done mask                                            */
      __IOM uint32_t ISOODRPM   : 1;            /*!< [14..14] Isochronous OUT packet dropped interrupt mask                    */
      __IOM uint32_t EOPFM      : 1;            /*!< [15..15] End of periodic frame interrupt mask                             */
            uint32_t            : 2;
      __IOM uint32_t IEPINT     : 1;            /*!< [18..18] IN endpoints interrupt mask                                      */
      __IOM uint32_t OEPINT     : 1;            /*!< [19..19] OUT endpoints interrupt mask                                     */
      __IOM uint32_t IISOIXFRM  : 1;            /*!< [20..20] Incomplete isochronous IN transfer mask                          */
      __IOM uint32_t PXFRM_IISOOXFRM : 1;       /*!< [21..21] Incomplete periodic transfer mask                                */
      __IOM uint32_t FSUSPM     : 1;            /*!< [22..22] Data fetch suspended mask                                        */
      __IOM uint32_t RSTDE      : 1;            /*!< [23..23] Reset detected interrupt mask                                    */
      __IM  uint32_t PRTIM      : 1;            /*!< [24..24] Host port interrupt mask                                         */
      __IOM uint32_t HCIM       : 1;            /*!< [25..25] Host channels interrupt mask                                     */
      __IOM uint32_t PTXFEM     : 1;            /*!< [26..26] Periodic TxFIFO empty mask                                       */
      __IOM uint32_t LPMINTM    : 1;            /*!< [27..27] LPM interrupt mask                                               */
      __IOM uint32_t CIDSCHGM   : 1;            /*!< [28..28] Connector ID status change mask                                  */
      __IOM uint32_t DISCINT    : 1;            /*!< [29..29] Disconnect detected interrupt mask                               */
      __IOM uint32_t SRQIM      : 1;            /*!< [30..30] Session request/new session detected interrupt mask              */
      __IOM uint32_t WUIM       : 1;            /*!< [31..31] Resume/remote wakeup detected interrupt mask                     */
    } OTG_HS_GINTMSK_b;
  } ;
  
  union {
    union {
      __IM  uint32_t OTG_HS_GRXSTSR_Host;       /*!< (@ 0x0000001C) OTG_HS Receive status debug read register (host
                                                                    mode)                                                      */
      
      struct {
        __IM  uint32_t CHNUM    : 4;            /*!< [3..0] Channel number                                                     */
        __IM  uint32_t BCNT     : 11;           /*!< [14..4] Byte count                                                        */
        __IM  uint32_t DPID     : 2;            /*!< [16..15] Data PID                                                         */
        __IM  uint32_t PKTSTS   : 4;            /*!< [20..17] Packet status                                                    */
              uint32_t          : 11;
      } OTG_HS_GRXSTSR_Host_b;
    } ;
    
    union {
      __IM  uint32_t OTG_HS_GRXSTSR_Device;     /*!< (@ 0x0000001C) OTG_HS Receive status debug read register (peripheral
                                                                    mode mode)                                                 */
      
      struct {
        __IM  uint32_t EPNUM    : 4;            /*!< [3..0] Endpoint number                                                    */
        __IM  uint32_t BCNT     : 11;           /*!< [14..4] Byte count                                                        */
        __IM  uint32_t DPID     : 2;            /*!< [16..15] Data PID                                                         */
        __IM  uint32_t PKTSTS   : 4;            /*!< [20..17] Packet status                                                    */
        __IM  uint32_t FRMNUM   : 4;            /*!< [24..21] Frame number                                                     */
              uint32_t          : 7;
      } OTG_HS_GRXSTSR_Device_b;
    } ;
  };
  
  union {
    union {
      __IM  uint32_t OTG_HS_GRXSTSP_Host;       /*!< (@ 0x00000020) OTG_HS status read and pop register (host mode)            */
      
      struct {
        __IM  uint32_t CHNUM    : 4;            /*!< [3..0] Channel number                                                     */
        __IM  uint32_t BCNT     : 11;           /*!< [14..4] Byte count                                                        */
        __IM  uint32_t DPID     : 2;            /*!< [16..15] Data PID                                                         */
        __IM  uint32_t PKTSTS   : 4;            /*!< [20..17] Packet status                                                    */
              uint32_t          : 11;
      } OTG_HS_GRXSTSP_Host_b;
    } ;
    
    union {
      __IM  uint32_t OTG_HS_GRXSTSP_Device;     /*!< (@ 0x00000020) OTG_HS status read and pop register (peripheral
                                                                    mode)                                                      */
      
      struct {
        __IM  uint32_t EPNUM    : 4;            /*!< [3..0] Endpoint number                                                    */
        __IM  uint32_t BCNT     : 11;           /*!< [14..4] Byte count                                                        */
        __IM  uint32_t DPID     : 2;            /*!< [16..15] Data PID                                                         */
        __IM  uint32_t PKTSTS   : 4;            /*!< [20..17] Packet status                                                    */
        __IM  uint32_t FRMNUM   : 4;            /*!< [24..21] Frame number                                                     */
              uint32_t          : 7;
      } OTG_HS_GRXSTSP_Device_b;
    } ;
  };
  
  union {
    __IOM uint32_t OTG_HS_GRXFSIZ;              /*!< (@ 0x00000024) OTG_HS Receive FIFO size register                          */
    
    struct {
      __IOM uint32_t RXFD       : 16;           /*!< [15..0] RxFIFO depth                                                      */
            uint32_t            : 16;
    } OTG_HS_GRXFSIZ_b;
  } ;
  
  union {
    union {
      __IOM uint32_t OTG_HS_HNPTXFSIZ_Host;     /*!< (@ 0x00000028) OTG_HS nonperiodic transmit FIFO size register
                                                                    (host mode)                                                */
      
      struct {
        __IOM uint32_t NPTXFSA  : 16;           /*!< [15..0] Nonperiodic transmit RAM start address                            */
        __IOM uint32_t NPTXFD   : 16;           /*!< [31..16] Nonperiodic TxFIFO depth                                         */
      } OTG_HS_HNPTXFSIZ_Host_b;
    } ;
    
    union {
      __IOM uint32_t OTG_HS_DIEPTXF0_Device;    /*!< (@ 0x00000028) Endpoint 0 transmit FIFO size (peripheral mode)            */
      
      struct {
        __IOM uint32_t TX0FSA   : 16;           /*!< [15..0] Endpoint 0 transmit RAM start address                             */
        __IOM uint32_t TX0FD    : 16;           /*!< [31..16] Endpoint 0 TxFIFO depth                                          */
      } OTG_HS_DIEPTXF0_Device_b;
    } ;
  };
  
  union {
    __IM  uint32_t OTG_HS_GNPTXSTS;             /*!< (@ 0x0000002C) OTG_HS nonperiodic transmit FIFO/queue status
                                                                    register                                                   */
    
    struct {
      __IM  uint32_t NPTXFSAV   : 16;           /*!< [15..0] Nonperiodic TxFIFO space available                                */
      __IM  uint32_t NPTQXSAV   : 8;            /*!< [23..16] Nonperiodic transmit request queue space available               */
      __IM  uint32_t NPTXQTOP   : 7;            /*!< [30..24] Top of the nonperiodic transmit request queue                    */
            uint32_t            : 1;
    } OTG_HS_GNPTXSTS_b;
  } ;
  __IM  uint32_t  RESERVED[2];
  
  union {
    __IOM uint32_t OTG_HS_GCCFG;                /*!< (@ 0x00000038) OTG_HS general core configuration register                 */
    
    struct {
      __IOM uint32_t DCDET      : 1;            /*!< [0..0] Data contact detection (DCD) status                                */
      __IOM uint32_t PDET       : 1;            /*!< [1..1] Primary detection (PD) status                                      */
      __IOM uint32_t SDET       : 1;            /*!< [2..2] Secondary detection (SD) status                                    */
      __IOM uint32_t PS2DET     : 1;            /*!< [3..3] DM pull-up detection status                                        */
            uint32_t            : 12;
      __IOM uint32_t PWRDWN     : 1;            /*!< [16..16] Power down                                                       */
      __IOM uint32_t BCDEN      : 1;            /*!< [17..17] Battery charging detector (BCD) enable                           */
      __IOM uint32_t DCDEN      : 1;            /*!< [18..18] Data contact detection (DCD) mode enable                         */
      __IOM uint32_t PDEN       : 1;            /*!< [19..19] Primary detection (PD) mode enable                               */
      __IOM uint32_t SDEN       : 1;            /*!< [20..20] Secondary detection (SD) mode enable                             */
      __IOM uint32_t VBDEN      : 1;            /*!< [21..21] USB VBUS detection enable                                        */
            uint32_t            : 10;
    } OTG_HS_GCCFG_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_CID;                  /*!< (@ 0x0000003C) OTG_HS core ID register                                    */
    
    struct {
      __IOM uint32_t PRODUCT_ID : 32;           /*!< [31..0] Product ID field                                                  */
    } OTG_HS_CID_b;
  } ;
  __IM  uint32_t  RESERVED1[5];
  
  union {
    __IOM uint32_t OTG_HS_GLPMCFG;              /*!< (@ 0x00000054) OTG core LPM configuration register                        */
    
    struct {
      __IOM uint32_t LPMEN      : 1;            /*!< [0..0] LPM support enable                                                 */
      __IOM uint32_t LPMACK     : 1;            /*!< [1..1] LPM token acknowledge enable                                       */
      __IM  uint32_t BESL       : 4;            /*!< [5..2] Best effort service latency                                        */
      __IM  uint32_t REMWAKE    : 1;            /*!< [6..6] bRemoteWake value                                                  */
      __IOM uint32_t L1SSEN     : 1;            /*!< [7..7] L1 Shallow Sleep enable                                            */
      __IOM uint32_t BESLTHRS   : 4;            /*!< [11..8] BESL threshold                                                    */
      __IOM uint32_t L1DSEN     : 1;            /*!< [12..12] L1 deep sleep enable                                             */
      __IM  uint32_t LPMRST     : 2;            /*!< [14..13] LPM response                                                     */
      __IM  uint32_t SLPSTS     : 1;            /*!< [15..15] Port sleep status                                                */
      __IM  uint32_t L1RSMOK    : 1;            /*!< [16..16] Sleep State Resume OK                                            */
      __IOM uint32_t LPMCHIDX   : 4;            /*!< [20..17] LPM Channel Index                                                */
      __IOM uint32_t LPMRCNT    : 3;            /*!< [23..21] LPM retry count                                                  */
      __IOM uint32_t SNDLPM     : 1;            /*!< [24..24] Send LPM transaction                                             */
      __IM  uint32_t LPMRCNTSTS : 3;            /*!< [27..25] LPM retry count status                                           */
      __IOM uint32_t ENBESL     : 1;            /*!< [28..28] Enable best effort service latency                               */
            uint32_t            : 3;
    } OTG_HS_GLPMCFG_b;
  } ;
  __IM  uint32_t  RESERVED2[42];
  
  union {
    __IOM uint32_t OTG_HS_HPTXFSIZ;             /*!< (@ 0x00000100) OTG_HS Host periodic transmit FIFO size register           */
    
    struct {
      __IOM uint32_t PTXSA      : 16;           /*!< [15..0] Host periodic TxFIFO start address                                */
      __IOM uint32_t PTXFD      : 16;           /*!< [31..16] Host periodic TxFIFO depth                                       */
    } OTG_HS_HPTXFSIZ_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_DIEPTXF1;             /*!< (@ 0x00000104) OTG_HS device IN endpoint transmit FIFO size
                                                                    register                                                   */
    
    struct {
      __IOM uint32_t INEPTXSA   : 16;           /*!< [15..0] IN endpoint FIFOx transmit RAM start address                      */
      __IOM uint32_t INEPTXFD   : 16;           /*!< [31..16] IN endpoint TxFIFO depth                                         */
    } OTG_HS_DIEPTXF1_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_DIEPTXF2;             /*!< (@ 0x00000108) OTG_HS device IN endpoint transmit FIFO size
                                                                    register                                                   */
    
    struct {
      __IOM uint32_t INEPTXSA   : 16;           /*!< [15..0] IN endpoint FIFOx transmit RAM start address                      */
      __IOM uint32_t INEPTXFD   : 16;           /*!< [31..16] IN endpoint TxFIFO depth                                         */
    } OTG_HS_DIEPTXF2_b;
  } ;
  __IM  uint32_t  RESERVED3[4];
  
  union {
    __IOM uint32_t OTG_HS_DIEPTXF3;             /*!< (@ 0x0000011C) OTG_HS device IN endpoint transmit FIFO size
                                                                    register                                                   */
    
    struct {
      __IOM uint32_t INEPTXSA   : 16;           /*!< [15..0] IN endpoint FIFOx transmit RAM start address                      */
      __IOM uint32_t INEPTXFD   : 16;           /*!< [31..16] IN endpoint TxFIFO depth                                         */
    } OTG_HS_DIEPTXF3_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_DIEPTXF4;             /*!< (@ 0x00000120) OTG_HS device IN endpoint transmit FIFO size
                                                                    register                                                   */
    
    struct {
      __IOM uint32_t INEPTXSA   : 16;           /*!< [15..0] IN endpoint FIFOx transmit RAM start address                      */
      __IOM uint32_t INEPTXFD   : 16;           /*!< [31..16] IN endpoint TxFIFO depth                                         */
    } OTG_HS_DIEPTXF4_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_DIEPTXF5;             /*!< (@ 0x00000124) OTG_HS device IN endpoint transmit FIFO size
                                                                    register                                                   */
    
    struct {
      __IOM uint32_t INEPTXSA   : 16;           /*!< [15..0] IN endpoint FIFOx transmit RAM start address                      */
      __IOM uint32_t INEPTXFD   : 16;           /*!< [31..16] IN endpoint TxFIFO depth                                         */
    } OTG_HS_DIEPTXF5_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_DIEPTXF6;             /*!< (@ 0x00000128) OTG_HS device IN endpoint transmit FIFO size
                                                                    register                                                   */
    
    struct {
      __IOM uint32_t INEPTXSA   : 16;           /*!< [15..0] IN endpoint FIFOx transmit RAM start address                      */
      __IOM uint32_t INEPTXFD   : 16;           /*!< [31..16] IN endpoint TxFIFO depth                                         */
    } OTG_HS_DIEPTXF6_b;
  } ;
  
  union {
    __IOM uint32_t OTG_HS_DIEPTXF7;             /*!< (@ 0x0000012C) OTG_HS device IN endpoint transmit FIFO size
                                                                    register                                                   */
    
    struct {
      __IOM uint32_t INEPTXSA   : 16;           /*!< [15..0] IN endpoint FIFOx transmit RAM start address                      */
      __IOM uint32_t INEPTXFD   : 16;           /*!< [31..16] IN endpoint TxFIFO depth                                         */
    } OTG_HS_DIEPTXF7_b;
  } ;
} OTG_HS_GLOBAL_Type;                           /*!< Size = 304 (0x130)                                                        */



/* =========================================================================================================================== */
/* ================                                       OTG_FS_GLOBAL                                       ================ */
/* =========================================================================================================================== */


/**
  * @brief USB on the go full speed (OTG_FS_GLOBAL)
  */

typedef struct {                                /*!< (@ 0x50000000) OTG_FS_GLOBAL Structure                                    */
  
  union {
    __IOM uint32_t OTG_FS_GOTGCTL;              /*!< (@ 0x00000000) OTG_FS control and status register (OTG_FS_GOTGCTL)        */
    
    struct {
      __IM  uint32_t SRQSCS     : 1;            /*!< [0..0] Session request success                                            */
      __IOM uint32_t SRQ        : 1;            /*!< [1..1] Session request                                                    */
      __IOM uint32_t VBVALOEN   : 1;            /*!< [2..2] VBUS valid override enable                                         */
      __IOM uint32_t VBVALOVAL  : 1;            /*!< [3..3] VBUS valid override value                                          */
      __IOM uint32_t AVALOEN    : 1;            /*!< [4..4] A-peripheral session valid override enable                         */
      __IOM uint32_t AVALOVAL   : 1;            /*!< [5..5] A-peripheral session valid override value                          */
      __IOM uint32_t BVALOEN    : 1;            /*!< [6..6] B-peripheral session valid override enable                         */
      __IOM uint32_t BVALOVAL   : 1;            /*!< [7..7] B-peripheral session valid override value                          */
      __IM  uint32_t HNGSCS     : 1;            /*!< [8..8] Host negotiation success                                           */
      __IOM uint32_t HNPRQ      : 1;            /*!< [9..9] HNP request                                                        */
      __IOM uint32_t HSHNPEN    : 1;            /*!< [10..10] Host set HNP enable                                              */
      __IOM uint32_t DHNPEN     : 1;            /*!< [11..11] Device HNP enabled                                               */
      __IOM uint32_t EHEN       : 1;            /*!< [12..12] Embedded host enable                                             */
            uint32_t            : 3;
      __IM  uint32_t CIDSTS     : 1;            /*!< [16..16] Connector ID status                                              */
      __IM  uint32_t DBCT       : 1;            /*!< [17..17] Long/short debounce time                                         */
      __IM  uint32_t ASVLD      : 1;            /*!< [18..18] A-session valid                                                  */
      __IM  uint32_t BSVLD      : 1;            /*!< [19..19] B-session valid                                                  */
      __IOM uint32_t OTGVER     : 1;            /*!< [20..20] OTG version                                                      */
            uint32_t            : 11;
    } OTG_FS_GOTGCTL_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_GOTGINT;              /*!< (@ 0x00000004) OTG_FS interrupt register (OTG_FS_GOTGINT)                 */
    
    struct {
            uint32_t            : 2;
      __IOM uint32_t SEDET      : 1;            /*!< [2..2] Session end detected                                               */
            uint32_t            : 5;
      __IOM uint32_t SRSSCHG    : 1;            /*!< [8..8] Session request success status change                              */
      __IOM uint32_t HNSSCHG    : 1;            /*!< [9..9] Host negotiation success status change                             */
            uint32_t            : 7;
      __IOM uint32_t HNGDET     : 1;            /*!< [17..17] Host negotiation detected                                        */
      __IOM uint32_t ADTOCHG    : 1;            /*!< [18..18] A-device timeout change                                          */
      __IOM uint32_t DBCDNE     : 1;            /*!< [19..19] Debounce done                                                    */
      __IOM uint32_t IDCHNG     : 1;            /*!< [20..20] ID input pin changed                                             */
            uint32_t            : 11;
    } OTG_FS_GOTGINT_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_GAHBCFG;              /*!< (@ 0x00000008) OTG_FS AHB configuration register (OTG_FS_GAHBCFG)         */
    
    struct {
      __IOM uint32_t GINT       : 1;            /*!< [0..0] Global interrupt mask                                              */
            uint32_t            : 6;
      __IOM uint32_t TXFELVL    : 1;            /*!< [7..7] TxFIFO empty level                                                 */
      __IOM uint32_t PTXFELVL   : 1;            /*!< [8..8] Periodic TxFIFO empty level                                        */
            uint32_t            : 23;
    } OTG_FS_GAHBCFG_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_GUSBCFG;              /*!< (@ 0x0000000C) OTG_FS USB configuration register (OTG_FS_GUSBCFG)         */
    
    struct {
      __IOM uint32_t TOCAL      : 3;            /*!< [2..0] FS timeout calibration                                             */
            uint32_t            : 3;
      __OM  uint32_t PHYSEL     : 1;            /*!< [6..6] Full Speed serial transceiver select                               */
            uint32_t            : 1;
      __IOM uint32_t SRPCAP     : 1;            /*!< [8..8] SRP-capable                                                        */
      __IOM uint32_t HNPCAP     : 1;            /*!< [9..9] HNP-capable                                                        */
      __IOM uint32_t TRDT       : 4;            /*!< [13..10] USB turnaround time                                              */
            uint32_t            : 15;
      __IOM uint32_t FHMOD      : 1;            /*!< [29..29] Force host mode                                                  */
      __IOM uint32_t FDMOD      : 1;            /*!< [30..30] Force device mode                                                */
            uint32_t            : 1;
    } OTG_FS_GUSBCFG_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_GRSTCTL;              /*!< (@ 0x00000010) OTG_FS reset register (OTG_FS_GRSTCTL)                     */
    
    struct {
      __IOM uint32_t CSRST      : 1;            /*!< [0..0] Core soft reset                                                    */
      __IOM uint32_t HSRST      : 1;            /*!< [1..1] HCLK soft reset                                                    */
      __IOM uint32_t FCRST      : 1;            /*!< [2..2] Host frame counter reset                                           */
            uint32_t            : 1;
      __IOM uint32_t RXFFLSH    : 1;            /*!< [4..4] RxFIFO flush                                                       */
      __IOM uint32_t TXFFLSH    : 1;            /*!< [5..5] TxFIFO flush                                                       */
      __IOM uint32_t TXFNUM     : 5;            /*!< [10..6] TxFIFO number                                                     */
            uint32_t            : 20;
      __IM  uint32_t AHBIDL     : 1;            /*!< [31..31] AHB master idle                                                  */
    } OTG_FS_GRSTCTL_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_GINTSTS;              /*!< (@ 0x00000014) OTG_FS core interrupt register (OTG_FS_GINTSTS)            */
    
    struct {
      __IM  uint32_t CMOD       : 1;            /*!< [0..0] Current mode of operation                                          */
      __IOM uint32_t MMIS       : 1;            /*!< [1..1] Mode mismatch interrupt                                            */
      __IM  uint32_t OTGINT     : 1;            /*!< [2..2] OTG interrupt                                                      */
      __IOM uint32_t SOF        : 1;            /*!< [3..3] Start of frame                                                     */
      __IM  uint32_t RXFLVL     : 1;            /*!< [4..4] RxFIFO non-empty                                                   */
      __IM  uint32_t NPTXFE     : 1;            /*!< [5..5] Non-periodic TxFIFO empty                                          */
      __IM  uint32_t GINAKEFF   : 1;            /*!< [6..6] Global IN non-periodic NAK effective                               */
      __IM  uint32_t GOUTNAKEFF : 1;            /*!< [7..7] Global OUT NAK effective                                           */
            uint32_t            : 2;
      __IOM uint32_t ESUSP      : 1;            /*!< [10..10] Early suspend                                                    */
      __IOM uint32_t USBSUSP    : 1;            /*!< [11..11] USB suspend                                                      */
      __IOM uint32_t USBRST     : 1;            /*!< [12..12] USB reset                                                        */
      __IOM uint32_t ENUMDNE    : 1;            /*!< [13..13] Enumeration done                                                 */
      __IOM uint32_t ISOODRP    : 1;            /*!< [14..14] Isochronous OUT packet dropped interrupt                         */
      __IOM uint32_t EOPF       : 1;            /*!< [15..15] End of periodic frame interrupt                                  */
            uint32_t            : 2;
      __IM  uint32_t IEPINT     : 1;            /*!< [18..18] IN endpoint interrupt                                            */
      __IM  uint32_t OEPINT     : 1;            /*!< [19..19] OUT endpoint interrupt                                           */
      __IOM uint32_t IISOIXFR   : 1;            /*!< [20..20] Incomplete isochronous IN transfer                               */
      __IOM uint32_t IPXFR_INCOMPISOOUT : 1;    /*!< [21..21] Incomplete periodic transfer(Host mode)/Incomplete
                                                     isochronous OUT transfer(Device mode)                                     */
            uint32_t            : 1;
      __IOM uint32_t RSTDET     : 1;            /*!< [23..23] Reset detected interrupt                                         */
      __IM  uint32_t HPRTINT    : 1;            /*!< [24..24] Host port interrupt                                              */
      __IM  uint32_t HCINT      : 1;            /*!< [25..25] Host channels interrupt                                          */
      __IM  uint32_t PTXFE      : 1;            /*!< [26..26] Periodic TxFIFO empty                                            */
            uint32_t            : 1;
      __IOM uint32_t CIDSCHG    : 1;            /*!< [28..28] Connector ID status change                                       */
      __IOM uint32_t DISCINT    : 1;            /*!< [29..29] Disconnect detected interrupt                                    */
      __IOM uint32_t SRQINT     : 1;            /*!< [30..30] Session request/new session detected interrupt                   */
      __IOM uint32_t WKUPINT    : 1;            /*!< [31..31] Resume/remote wakeup detected interrupt                          */
    } OTG_FS_GINTSTS_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_GINTMSK;              /*!< (@ 0x00000018) OTG_FS interrupt mask register (OTG_FS_GINTMSK)            */
    
    struct {
            uint32_t            : 1;
      __IOM uint32_t MMISM      : 1;            /*!< [1..1] Mode mismatch interrupt mask                                       */
      __IOM uint32_t OTGINT     : 1;            /*!< [2..2] OTG interrupt mask                                                 */
      __IOM uint32_t SOFM       : 1;            /*!< [3..3] Start of frame mask                                                */
      __IOM uint32_t RXFLVLM    : 1;            /*!< [4..4] Receive FIFO non-empty mask                                        */
      __IOM uint32_t NPTXFEM    : 1;            /*!< [5..5] Non-periodic TxFIFO empty mask                                     */
      __IOM uint32_t GINAKEFFM  : 1;            /*!< [6..6] Global non-periodic IN NAK effective mask                          */
      __IOM uint32_t GONAKEFFM  : 1;            /*!< [7..7] Global OUT NAK effective mask                                      */
            uint32_t            : 2;
      __IOM uint32_t ESUSPM     : 1;            /*!< [10..10] Early suspend mask                                               */
      __IOM uint32_t USBSUSPM   : 1;            /*!< [11..11] USB suspend mask                                                 */
      __IOM uint32_t USBRST     : 1;            /*!< [12..12] USB reset mask                                                   */
      __IOM uint32_t ENUMDNEM   : 1;            /*!< [13..13] Enumeration done mask                                            */
      __IOM uint32_t ISOODRPM   : 1;            /*!< [14..14] Isochronous OUT packet dropped interrupt mask                    */
      __IOM uint32_t EOPFM      : 1;            /*!< [15..15] End of periodic frame interrupt mask                             */
            uint32_t            : 2;
      __IOM uint32_t IEPINT     : 1;            /*!< [18..18] IN endpoints interrupt mask                                      */
      __IOM uint32_t OEPINT     : 1;            /*!< [19..19] OUT endpoints interrupt mask                                     */
      __IOM uint32_t IISOIXFRM  : 1;            /*!< [20..20] Incomplete isochronous IN transfer mask                          */
      __IOM uint32_t IPXFRM_IISOOXFRM : 1;      /*!< [21..21] Incomplete periodic transfer mask(Host mode)/Incomplete
                                                     isochronous OUT transfer mask(Device mode)                                */
            uint32_t            : 1;
      __IOM uint32_t RSTDETM    : 1;            /*!< [23..23] Reset detected interrupt mask                                    */
      __IM  uint32_t PRTIM      : 1;            /*!< [24..24] Host port interrupt mask                                         */
      __IOM uint32_t HCIM       : 1;            /*!< [25..25] Host channels interrupt mask                                     */
      __IOM uint32_t PTXFEM     : 1;            /*!< [26..26] Periodic TxFIFO empty mask                                       */
      __IOM uint32_t LPMIN      : 1;            /*!< [27..27] LPM interrupt mask                                               */
      __IOM uint32_t CIDSCHGM   : 1;            /*!< [28..28] Connector ID status change mask                                  */
      __IOM uint32_t DISCINT    : 1;            /*!< [29..29] Disconnect detected interrupt mask                               */
      __IOM uint32_t SRQIM      : 1;            /*!< [30..30] Session request/new session detected interrupt mask              */
      __IOM uint32_t WUIM       : 1;            /*!< [31..31] Resume/remote wakeup detected interrupt mask                     */
    } OTG_FS_GINTMSK_b;
  } ;
  
  union {
    union {
      __IM  uint32_t OTG_FS_GRXSTSR_Device;     /*!< (@ 0x0000001C) OTG_FS Receive status debug read(Device mode)              */
      
      struct {
        __IM  uint32_t EPNUM    : 4;            /*!< [3..0] Endpoint number                                                    */
        __IM  uint32_t BCNT     : 11;           /*!< [14..4] Byte count                                                        */
        __IM  uint32_t DPID     : 2;            /*!< [16..15] Data PID                                                         */
        __IM  uint32_t PKTSTS   : 4;            /*!< [20..17] Packet status                                                    */
        __IM  uint32_t FRMNUM   : 4;            /*!< [24..21] Frame number                                                     */
              uint32_t          : 7;
      } OTG_FS_GRXSTSR_Device_b;
    } ;
    
    union {
      __IM  uint32_t OTG_FS_GRXSTSR_Host;       /*!< (@ 0x0000001C) OTG_FS Receive status debug read(Host mode)                */
      
      struct {
        __IM  uint32_t CHNUM    : 4;            /*!< [3..0] Endpoint number                                                    */
        __IM  uint32_t BCNT     : 11;           /*!< [14..4] Byte count                                                        */
        __IM  uint32_t DPID     : 2;            /*!< [16..15] Data PID                                                         */
        __IM  uint32_t PKTSTS   : 4;            /*!< [20..17] Packet status                                                    */
              uint32_t          : 11;
      } OTG_FS_GRXSTSR_Host_b;
    } ;
  };
  
  union {
    union {
      __IM  uint32_t OTG_FS_GRXSTSP_Device;     /*!< (@ 0x00000020) OTG status read and pop register (Device mode)             */
      
      struct {
        __IM  uint32_t EPNUM    : 4;            /*!< [3..0] Endpoint number                                                    */
        __IM  uint32_t BCNT     : 11;           /*!< [14..4] Byte count                                                        */
        __IM  uint32_t DPID     : 2;            /*!< [16..15] Data PID                                                         */
        __IM  uint32_t PKTSTS   : 4;            /*!< [20..17] Packet status                                                    */
        __IM  uint32_t FRMNUM   : 4;            /*!< [24..21] Frame number                                                     */
              uint32_t          : 7;
      } OTG_FS_GRXSTSP_Device_b;
    } ;
    
    union {
      __IM  uint32_t OTG_FS_GRXSTSP_Host;       /*!< (@ 0x00000020) OTG status read and pop register (Host mode)               */
      
      struct {
        __IM  uint32_t CHNUM    : 4;            /*!< [3..0] Channel number                                                     */
        __IM  uint32_t BCNT     : 11;           /*!< [14..4] Byte count                                                        */
        __IM  uint32_t DPID     : 2;            /*!< [16..15] Data PID                                                         */
        __IM  uint32_t PKTSTS   : 4;            /*!< [20..17] Packet status                                                    */
              uint32_t          : 11;
      } OTG_FS_GRXSTSP_Host_b;
    } ;
  };
  
  union {
    __IOM uint32_t OTG_FS_GRXFSIZ;              /*!< (@ 0x00000024) OTG_FS Receive FIFO size register (OTG_FS_GRXFSIZ)         */
    
    struct {
      __IOM uint32_t RXFD       : 16;           /*!< [15..0] RxFIFO depth                                                      */
            uint32_t            : 16;
    } OTG_FS_GRXFSIZ_b;
  } ;
  
  union {
    union {
      __IOM uint32_t OTG_FS_DIEPTXF0_Device;    /*!< (@ 0x00000028) OTG_FS Endpoint 0 Transmit FIFO size                       */
      
      struct {
        __IOM uint32_t TX0FSA   : 16;           /*!< [15..0] Endpoint 0 transmit RAM start address                             */
        __IOM uint32_t TX0FD    : 16;           /*!< [31..16] Endpoint 0 TxFIFO depth                                          */
      } OTG_FS_DIEPTXF0_Device_b;
    } ;
    
    union {
      __IOM uint32_t OTG_FS_HNPTXFSIZ_Host;     /*!< (@ 0x00000028) OTG_FS Host non-periodic transmit FIFO size register       */
      
      struct {
        __IOM uint32_t NPTXFSA  : 16;           /*!< [15..0] Non-periodic transmit RAM start address                           */
        __IOM uint32_t NPTXFD   : 16;           /*!< [31..16] Non-periodic TxFIFO depth                                        */
      } OTG_FS_HNPTXFSIZ_Host_b;
    } ;
  };
  
  union {
    __IM  uint32_t OTG_FS_HNPTXSTS;             /*!< (@ 0x0000002C) OTG_FS non-periodic transmit FIFO/queue status
                                                                    register (OTG_FS_GNPTXSTS)                                 */
    
    struct {
      __IM  uint32_t NPTXFSAV   : 16;           /*!< [15..0] Non-periodic TxFIFO space available                               */
      __IM  uint32_t NPTQXSAV   : 8;            /*!< [23..16] Non-periodic transmit request queue space available              */
      __IM  uint32_t NPTXQTOP   : 7;            /*!< [30..24] Top of the non-periodic transmit request queue                   */
            uint32_t            : 1;
    } OTG_FS_HNPTXSTS_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_GI2CCTL;              /*!< (@ 0x00000030) OTG I2C access register                                    */
    
    struct {
      __IOM uint32_t RWDATA     : 8;            /*!< [7..0] I2C Read/Write Data                                                */
      __IOM uint32_t REGADDR    : 8;            /*!< [15..8] I2C Register Address                                              */
      __IOM uint32_t ADDR       : 7;            /*!< [22..16] I2C Address                                                      */
      __IOM uint32_t I2CEN      : 1;            /*!< [23..23] I2C Enable                                                       */
      __IOM uint32_t ACK        : 1;            /*!< [24..24] I2C ACK                                                          */
            uint32_t            : 1;
      __IOM uint32_t I2CDEVADR  : 2;            /*!< [27..26] I2C Device Address                                               */
      __IOM uint32_t I2CDATSE0  : 1;            /*!< [28..28] I2C DatSe0 USB mode                                              */
            uint32_t            : 1;
      __IOM uint32_t RW         : 1;            /*!< [30..30] Read/Write Indicator                                             */
      __IOM uint32_t BSYDNE     : 1;            /*!< [31..31] I2C Busy/Done                                                    */
    } OTG_FS_GI2CCTL_b;
  } ;
  __IM  uint32_t  RESERVED;
  
  union {
    __IOM uint32_t OTG_FS_GCCFG;                /*!< (@ 0x00000038) OTG_FS general core configuration register (OTG_FS_GCCFG)  */
    
    struct {
      __IOM uint32_t DCDET      : 1;            /*!< [0..0] Data contact detection (DCD) status                                */
      __IOM uint32_t PDET       : 1;            /*!< [1..1] Primary detection (PD) status                                      */
      __IOM uint32_t SDET       : 1;            /*!< [2..2] Secondary detection (SD) status                                    */
      __IOM uint32_t PS2DET     : 1;            /*!< [3..3] DM pull-up detection status                                        */
            uint32_t            : 12;
      __IOM uint32_t PWRDWN     : 1;            /*!< [16..16] Power down                                                       */
      __IOM uint32_t BCDEN      : 1;            /*!< [17..17] Battery charging detector (BCD) enable                           */
      __IOM uint32_t DCDEN      : 1;            /*!< [18..18] Data contact detection (DCD) mode enable                         */
      __IOM uint32_t PDEN       : 1;            /*!< [19..19] Primary detection (PD) mode enable                               */
      __IOM uint32_t SDEN       : 1;            /*!< [20..20] Secondary detection (SD) mode enable                             */
      __IOM uint32_t VBDEN      : 1;            /*!< [21..21] USB VBUS detection enable                                        */
            uint32_t            : 10;
    } OTG_FS_GCCFG_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_CID;                  /*!< (@ 0x0000003C) core ID register                                           */
    
    struct {
      __IOM uint32_t PRODUCT_ID : 32;           /*!< [31..0] Product ID field                                                  */
    } OTG_FS_CID_b;
  } ;
  __IM  uint32_t  RESERVED1[5];
  
  union {
    __IOM uint32_t OTG_FS_GLPMCFG;              /*!< (@ 0x00000054) OTG core LPM configuration register                        */
    
    struct {
      __IOM uint32_t LPMEN      : 1;            /*!< [0..0] LPM support enable                                                 */
      __IOM uint32_t LPMACK     : 1;            /*!< [1..1] LPM token acknowledge enable                                       */
      __IOM uint32_t BESL       : 4;            /*!< [5..2] Best effort service latency                                        */
      __IOM uint32_t REMWAKE    : 1;            /*!< [6..6] bRemoteWake value                                                  */
      __IOM uint32_t L1SSEN     : 1;            /*!< [7..7] L1 Shallow Sleep enable                                            */
      __IOM uint32_t BESLTHRS   : 4;            /*!< [11..8] BESL threshold                                                    */
      __IOM uint32_t L1DSEN     : 1;            /*!< [12..12] L1 deep sleep enable                                             */
      __IM  uint32_t LPMRST     : 2;            /*!< [14..13] LPM response                                                     */
      __IM  uint32_t SLPSTS     : 1;            /*!< [15..15] Port sleep status                                                */
      __IM  uint32_t L1RSMOK    : 1;            /*!< [16..16] Sleep State Resume OK                                            */
      __IOM uint32_t LPMCHIDX   : 4;            /*!< [20..17] LPM Channel Index                                                */
      __IOM uint32_t LPMRCNT    : 3;            /*!< [23..21] LPM retry count                                                  */
      __IOM uint32_t SNDLPM     : 1;            /*!< [24..24] Send LPM transaction                                             */
      __IM  uint32_t LPMRCNTSTS : 3;            /*!< [27..25] LPM retry count status                                           */
      __IOM uint32_t ENBESL     : 1;            /*!< [28..28] Enable best effort service latency                               */
            uint32_t            : 3;
    } OTG_FS_GLPMCFG_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_GPWRDN;               /*!< (@ 0x00000058) OTG power down register                                    */
    
    struct {
      __IOM uint32_t ADPMEN     : 1;            /*!< [0..0] ADP module enable                                                  */
            uint32_t            : 22;
      __IOM uint32_t ADPIF      : 1;            /*!< [23..23] ADP interrupt flag                                               */
            uint32_t            : 8;
    } OTG_FS_GPWRDN_b;
  } ;
  __IM  uint32_t  RESERVED2;
  
  union {
    __IOM uint32_t OTG_FS_GADPCTL;              /*!< (@ 0x00000060) OTG ADP timer, control and status register                 */
    
    struct {
      __IOM uint32_t PRBDSCHG   : 2;            /*!< [1..0] Probe discharge                                                    */
      __IOM uint32_t PRBDELTA   : 2;            /*!< [3..2] Probe delta                                                        */
      __IOM uint32_t PRBPER     : 2;            /*!< [5..4] Probe period                                                       */
      __IM  uint32_t RTIM       : 11;           /*!< [16..6] Ramp time                                                         */
      __IOM uint32_t ENAPRB     : 1;            /*!< [17..17] Enable probe                                                     */
      __IOM uint32_t ENASNS     : 1;            /*!< [18..18] Enable sense                                                     */
      __IM  uint32_t ADPRST     : 1;            /*!< [19..19] ADP reset                                                        */
      __IOM uint32_t ADPEN      : 1;            /*!< [20..20] ADP enable                                                       */
      __IOM uint32_t ADPPRBIF   : 1;            /*!< [21..21] ADP probe interrupt flag                                         */
      __IOM uint32_t ADPSNSIF   : 1;            /*!< [22..22] ADP sense interrupt flag                                         */
      __IOM uint32_t ADPTOIF    : 1;            /*!< [23..23] ADP timeout interrupt flag                                       */
      __IOM uint32_t ADPPRBIM   : 1;            /*!< [24..24] ADP probe interrupt mask                                         */
      __IOM uint32_t ADPSNSIM   : 1;            /*!< [25..25] ADP sense interrupt mask                                         */
      __IOM uint32_t ADPTOIM    : 1;            /*!< [26..26] ADP timeout interrupt mask                                       */
      __IOM uint32_t AR         : 2;            /*!< [28..27] Access request                                                   */
            uint32_t            : 3;
    } OTG_FS_GADPCTL_b;
  } ;
  __IM  uint32_t  RESERVED3[39];
  
  union {
    __IOM uint32_t OTG_FS_HPTXFSIZ;             /*!< (@ 0x00000100) OTG_FS Host periodic transmit FIFO size register
                                                                    (OTG_FS_HPTXFSIZ)                                          */
    
    struct {
      __IOM uint32_t PTXSA      : 16;           /*!< [15..0] Host periodic TxFIFO start address                                */
      __IOM uint32_t PTXFSIZ    : 16;           /*!< [31..16] Host periodic TxFIFO depth                                       */
    } OTG_FS_HPTXFSIZ_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_DIEPTXF1;             /*!< (@ 0x00000104) OTG_FS device IN endpoint transmit FIFO size
                                                                    register (OTG_FS_DIEPTXF1)                                 */
    
    struct {
      __IOM uint32_t INEPTXSA   : 16;           /*!< [15..0] IN endpoint FIFO2 transmit RAM start address                      */
      __IOM uint32_t INEPTXFD   : 16;           /*!< [31..16] IN endpoint TxFIFO depth                                         */
    } OTG_FS_DIEPTXF1_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_DIEPTXF2;             /*!< (@ 0x00000108) OTG_FS device IN endpoint transmit FIFO size
                                                                    register (OTG_FS_DIEPTXF2)                                 */
    
    struct {
      __IOM uint32_t INEPTXSA   : 16;           /*!< [15..0] IN endpoint FIFO3 transmit RAM start address                      */
      __IOM uint32_t INEPTXFD   : 16;           /*!< [31..16] IN endpoint TxFIFO depth                                         */
    } OTG_FS_DIEPTXF2_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_DIEPTXF3;             /*!< (@ 0x0000010C) OTG_FS device IN endpoint transmit FIFO size
                                                                    register (OTG_FS_DIEPTXF3)                                 */
    
    struct {
      __IOM uint32_t INEPTXSA   : 16;           /*!< [15..0] IN endpoint FIFO4 transmit RAM start address                      */
      __IOM uint32_t INEPTXFD   : 16;           /*!< [31..16] IN endpoint TxFIFO depth                                         */
    } OTG_FS_DIEPTXF3_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_DIEPTXF4;             /*!< (@ 0x00000110) OTG_FS device IN endpoint transmit FIFO size
                                                                    register (OTG_FS_DIEPTXF4)                                 */
    
    struct {
      __IOM uint32_t INEPTXSA   : 16;           /*!< [15..0] IN endpoint FIFOx transmit RAM start address                      */
      __IOM uint32_t INEPTXFD   : 16;           /*!< [31..16] IN endpoint Tx FIFO depth                                        */
    } OTG_FS_DIEPTXF4_b;
  } ;
  
  union {
    __IOM uint32_t OTG_FS_DIEPTXF5;             /*!< (@ 0x00000114) OTG_FS device IN endpoint transmit FIFO size
                                                                    register (OTG_FS_DIEPTXF5)                                 */
    
    struct {
      __IOM uint32_t INEPTXSA   : 16;           /*!< [15..0] IN endpoint FIFOx transmit RAM start address                      */
      __IOM uint32_t INEPTXFD   : 16;           /*!< [31..16] IN endpoint Tx FIFO depth                                        */
    } OTG_FS_DIEPTXF5_b;
  } ;
} OTG_FS_GLOBAL_Type;                           /*!< Size = 280 (0x118)                                                        */



/* =========================================================================================================================== */
/* ================                                       OTG_HS_PWRCLK                                       ================ */
/* =========================================================================================================================== */

/* =====================================================  OTG_HS_PCGCR  ====================================================== */
#define OTG_HS_PWRCLK_OTG_HS_PCGCR_STPPCLK_Pos (0UL)                /*!< STPPCLK (Bit 0)                                       */
#define OTG_HS_PWRCLK_OTG_HS_PCGCR_STPPCLK_Msk (0x1UL)              /*!< STPPCLK (Bitfield-Mask: 0x01)                         */
#define OTG_HS_PWRCLK_OTG_HS_PCGCR_GATEHCLK_Pos (1UL)               /*!< GATEHCLK (Bit 1)                                      */
#define OTG_HS_PWRCLK_OTG_HS_PCGCR_GATEHCLK_Msk (0x2UL)             /*!< GATEHCLK (Bitfield-Mask: 0x01)                        */
#define OTG_HS_PWRCLK_OTG_HS_PCGCR_PHYSUSP_Pos (4UL)                /*!< PHYSUSP (Bit 4)                                       */
#define OTG_HS_PWRCLK_OTG_HS_PCGCR_PHYSUSP_Msk (0x10UL)             /*!< PHYSUSP (Bitfield-Mask: 0x01)                         */


/* =========================================================================================================================== */
/* ================                                       OTG_HS_DEVICE                                       ================ */
/* =========================================================================================================================== */

/* ======================================================  OTG_HS_DCFG  ====================================================== */
#define OTG_HS_DEVICE_OTG_HS_DCFG_DSPD_Pos (0UL)                    /*!< DSPD (Bit 0)                                          */
#define OTG_HS_DEVICE_OTG_HS_DCFG_DSPD_Msk (0x3UL)                  /*!< DSPD (Bitfield-Mask: 0x03)                            */
#define OTG_HS_DEVICE_OTG_HS_DCFG_NZLSOHSK_Pos (2UL)                /*!< NZLSOHSK (Bit 2)                                      */
#define OTG_HS_DEVICE_OTG_HS_DCFG_NZLSOHSK_Msk (0x4UL)              /*!< NZLSOHSK (Bitfield-Mask: 0x01)                        */
#define OTG_HS_DEVICE_OTG_HS_DCFG_DAD_Pos (4UL)                     /*!< DAD (Bit 4)                                           */
#define OTG_HS_DEVICE_OTG_HS_DCFG_DAD_Msk (0x7f0UL)                 /*!< DAD (Bitfield-Mask: 0x7f)                             */
#define OTG_HS_DEVICE_OTG_HS_DCFG_PFIVL_Pos (11UL)                  /*!< PFIVL (Bit 11)                                        */
#define OTG_HS_DEVICE_OTG_HS_DCFG_PFIVL_Msk (0x1800UL)              /*!< PFIVL (Bitfield-Mask: 0x03)                           */
#define OTG_HS_DEVICE_OTG_HS_DCFG_PERSCHIVL_Pos (24UL)              /*!< PERSCHIVL (Bit 24)                                    */
#define OTG_HS_DEVICE_OTG_HS_DCFG_PERSCHIVL_Msk (0x3000000UL)       /*!< PERSCHIVL (Bitfield-Mask: 0x03)                       */
/* ======================================================  OTG_HS_DCTL  ====================================================== */
#define OTG_HS_DEVICE_OTG_HS_DCTL_RWUSIG_Pos (0UL)                  /*!< RWUSIG (Bit 0)                                        */
#define OTG_HS_DEVICE_OTG_HS_DCTL_RWUSIG_Msk (0x1UL)                /*!< RWUSIG (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DCTL_SDIS_Pos (1UL)                    /*!< SDIS (Bit 1)                                          */
#define OTG_HS_DEVICE_OTG_HS_DCTL_SDIS_Msk (0x2UL)                  /*!< SDIS (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DCTL_GINSTS_Pos (2UL)                  /*!< GINSTS (Bit 2)                                        */
#define OTG_HS_DEVICE_OTG_HS_DCTL_GINSTS_Msk (0x4UL)                /*!< GINSTS (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DCTL_GONSTS_Pos (3UL)                  /*!< GONSTS (Bit 3)                                        */
#define OTG_HS_DEVICE_OTG_HS_DCTL_GONSTS_Msk (0x8UL)                /*!< GONSTS (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DCTL_TCTL_Pos (4UL)                    /*!< TCTL (Bit 4)                                          */
#define OTG_HS_DEVICE_OTG_HS_DCTL_TCTL_Msk (0x70UL)                 /*!< TCTL (Bitfield-Mask: 0x07)                            */
#define OTG_HS_DEVICE_OTG_HS_DCTL_SGINAK_Pos (7UL)                  /*!< SGINAK (Bit 7)                                        */
#define OTG_HS_DEVICE_OTG_HS_DCTL_SGINAK_Msk (0x80UL)               /*!< SGINAK (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DCTL_CGINAK_Pos (8UL)                  /*!< CGINAK (Bit 8)                                        */
#define OTG_HS_DEVICE_OTG_HS_DCTL_CGINAK_Msk (0x100UL)              /*!< CGINAK (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DCTL_SGONAK_Pos (9UL)                  /*!< SGONAK (Bit 9)                                        */
#define OTG_HS_DEVICE_OTG_HS_DCTL_SGONAK_Msk (0x200UL)              /*!< SGONAK (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DCTL_CGONAK_Pos (10UL)                 /*!< CGONAK (Bit 10)                                       */
#define OTG_HS_DEVICE_OTG_HS_DCTL_CGONAK_Msk (0x400UL)              /*!< CGONAK (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DCTL_POPRGDNE_Pos (11UL)               /*!< POPRGDNE (Bit 11)                                     */
#define OTG_HS_DEVICE_OTG_HS_DCTL_POPRGDNE_Msk (0x800UL)            /*!< POPRGDNE (Bitfield-Mask: 0x01)                        */
/* ======================================================  OTG_HS_DSTS  ====================================================== */
#define OTG_HS_DEVICE_OTG_HS_DSTS_SUSPSTS_Pos (0UL)                 /*!< SUSPSTS (Bit 0)                                       */
#define OTG_HS_DEVICE_OTG_HS_DSTS_SUSPSTS_Msk (0x1UL)               /*!< SUSPSTS (Bitfield-Mask: 0x01)                         */
#define OTG_HS_DEVICE_OTG_HS_DSTS_ENUMSPD_Pos (1UL)                 /*!< ENUMSPD (Bit 1)                                       */
#define OTG_HS_DEVICE_OTG_HS_DSTS_ENUMSPD_Msk (0x6UL)               /*!< ENUMSPD (Bitfield-Mask: 0x03)                         */
#define OTG_HS_DEVICE_OTG_HS_DSTS_EERR_Pos (3UL)                    /*!< EERR (Bit 3)                                          */
#define OTG_HS_DEVICE_OTG_HS_DSTS_EERR_Msk (0x8UL)                  /*!< EERR (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DSTS_FNSOF_Pos (8UL)                   /*!< FNSOF (Bit 8)                                         */
#define OTG_HS_DEVICE_OTG_HS_DSTS_FNSOF_Msk (0x3fff00UL)            /*!< FNSOF (Bitfield-Mask: 0x3fff)                         */
/* ====================================================  OTG_HS_DIEPMSK  ===================================================== */
#define OTG_HS_DEVICE_OTG_HS_DIEPMSK_XFRCM_Pos (0UL)                /*!< XFRCM (Bit 0)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPMSK_XFRCM_Msk (0x1UL)              /*!< XFRCM (Bitfield-Mask: 0x01)                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPMSK_EPDM_Pos (1UL)                 /*!< EPDM (Bit 1)                                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPMSK_EPDM_Msk (0x2UL)               /*!< EPDM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPMSK_TOM_Pos (3UL)                  /*!< TOM (Bit 3)                                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPMSK_TOM_Msk (0x8UL)                /*!< TOM (Bitfield-Mask: 0x01)                             */
#define OTG_HS_DEVICE_OTG_HS_DIEPMSK_ITTXFEMSK_Pos (4UL)            /*!< ITTXFEMSK (Bit 4)                                     */
#define OTG_HS_DEVICE_OTG_HS_DIEPMSK_ITTXFEMSK_Msk (0x10UL)         /*!< ITTXFEMSK (Bitfield-Mask: 0x01)                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPMSK_INEPNMM_Pos (5UL)              /*!< INEPNMM (Bit 5)                                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPMSK_INEPNMM_Msk (0x20UL)           /*!< INEPNMM (Bitfield-Mask: 0x01)                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPMSK_INEPNEM_Pos (6UL)              /*!< INEPNEM (Bit 6)                                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPMSK_INEPNEM_Msk (0x40UL)           /*!< INEPNEM (Bitfield-Mask: 0x01)                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPMSK_TXFURM_Pos (8UL)               /*!< TXFURM (Bit 8)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPMSK_TXFURM_Msk (0x100UL)           /*!< TXFURM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPMSK_BIM_Pos (9UL)                  /*!< BIM (Bit 9)                                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPMSK_BIM_Msk (0x200UL)              /*!< BIM (Bitfield-Mask: 0x01)                             */
/* ====================================================  OTG_HS_DOEPMSK  ===================================================== */
#define OTG_HS_DEVICE_OTG_HS_DOEPMSK_XFRCM_Pos (0UL)                /*!< XFRCM (Bit 0)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPMSK_XFRCM_Msk (0x1UL)              /*!< XFRCM (Bitfield-Mask: 0x01)                           */
#define OTG_HS_DEVICE_OTG_HS_DOEPMSK_EPDM_Pos (1UL)                 /*!< EPDM (Bit 1)                                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPMSK_EPDM_Msk (0x2UL)               /*!< EPDM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPMSK_STUPM_Pos (3UL)                /*!< STUPM (Bit 3)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPMSK_STUPM_Msk (0x8UL)              /*!< STUPM (Bitfield-Mask: 0x01)                           */
#define OTG_HS_DEVICE_OTG_HS_DOEPMSK_OTEPDM_Pos (4UL)               /*!< OTEPDM (Bit 4)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPMSK_OTEPDM_Msk (0x10UL)            /*!< OTEPDM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPMSK_B2BSTUP_Pos (6UL)              /*!< B2BSTUP (Bit 6)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPMSK_B2BSTUP_Msk (0x40UL)           /*!< B2BSTUP (Bitfield-Mask: 0x01)                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPMSK_OPEM_Pos (8UL)                 /*!< OPEM (Bit 8)                                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPMSK_OPEM_Msk (0x100UL)             /*!< OPEM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPMSK_BOIM_Pos (9UL)                 /*!< BOIM (Bit 9)                                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPMSK_BOIM_Msk (0x200UL)             /*!< BOIM (Bitfield-Mask: 0x01)                            */
/* =====================================================  OTG_HS_DAINT  ====================================================== */
#define OTG_HS_DEVICE_OTG_HS_DAINT_IEPINT_Pos (0UL)                 /*!< IEPINT (Bit 0)                                        */
#define OTG_HS_DEVICE_OTG_HS_DAINT_IEPINT_Msk (0xffffUL)            /*!< IEPINT (Bitfield-Mask: 0xffff)                        */
#define OTG_HS_DEVICE_OTG_HS_DAINT_OEPINT_Pos (16UL)                /*!< OEPINT (Bit 16)                                       */
#define OTG_HS_DEVICE_OTG_HS_DAINT_OEPINT_Msk (0xffff0000UL)        /*!< OEPINT (Bitfield-Mask: 0xffff)                        */
/* ====================================================  OTG_HS_DAINTMSK  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DAINTMSK_IEPM_Pos (0UL)                /*!< IEPM (Bit 0)                                          */
#define OTG_HS_DEVICE_OTG_HS_DAINTMSK_IEPM_Msk (0xffffUL)           /*!< IEPM (Bitfield-Mask: 0xffff)                          */
#define OTG_HS_DEVICE_OTG_HS_DAINTMSK_OEPM_Pos (16UL)               /*!< OEPM (Bit 16)                                         */
#define OTG_HS_DEVICE_OTG_HS_DAINTMSK_OEPM_Msk (0xffff0000UL)       /*!< OEPM (Bitfield-Mask: 0xffff)                          */
/* ====================================================  OTG_HS_DVBUSDIS  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DVBUSDIS_VBUSDT_Pos (0UL)              /*!< VBUSDT (Bit 0)                                        */
#define OTG_HS_DEVICE_OTG_HS_DVBUSDIS_VBUSDT_Msk (0xffffUL)         /*!< VBUSDT (Bitfield-Mask: 0xffff)                        */
/* ===================================================  OTG_HS_DVBUSPULSE  =================================================== */
#define OTG_HS_DEVICE_OTG_HS_DVBUSPULSE_DVBUSP_Pos (0UL)            /*!< DVBUSP (Bit 0)                                        */
#define OTG_HS_DEVICE_OTG_HS_DVBUSPULSE_DVBUSP_Msk (0xfffUL)        /*!< DVBUSP (Bitfield-Mask: 0xfff)                         */
/* ====================================================  OTG_HS_DTHRCTL  ===================================================== */
#define OTG_HS_DEVICE_OTG_HS_DTHRCTL_NONISOTHREN_Pos (0UL)          /*!< NONISOTHREN (Bit 0)                                   */
#define OTG_HS_DEVICE_OTG_HS_DTHRCTL_NONISOTHREN_Msk (0x1UL)        /*!< NONISOTHREN (Bitfield-Mask: 0x01)                     */
#define OTG_HS_DEVICE_OTG_HS_DTHRCTL_ISOTHREN_Pos (1UL)             /*!< ISOTHREN (Bit 1)                                      */
#define OTG_HS_DEVICE_OTG_HS_DTHRCTL_ISOTHREN_Msk (0x2UL)           /*!< ISOTHREN (Bitfield-Mask: 0x01)                        */
#define OTG_HS_DEVICE_OTG_HS_DTHRCTL_TXTHRLEN_Pos (2UL)             /*!< TXTHRLEN (Bit 2)                                      */
#define OTG_HS_DEVICE_OTG_HS_DTHRCTL_TXTHRLEN_Msk (0x7fcUL)         /*!< TXTHRLEN (Bitfield-Mask: 0x1ff)                       */
#define OTG_HS_DEVICE_OTG_HS_DTHRCTL_RXTHREN_Pos (16UL)             /*!< RXTHREN (Bit 16)                                      */
#define OTG_HS_DEVICE_OTG_HS_DTHRCTL_RXTHREN_Msk (0x10000UL)        /*!< RXTHREN (Bitfield-Mask: 0x01)                         */
#define OTG_HS_DEVICE_OTG_HS_DTHRCTL_RXTHRLEN_Pos (17UL)            /*!< RXTHRLEN (Bit 17)                                     */
#define OTG_HS_DEVICE_OTG_HS_DTHRCTL_RXTHRLEN_Msk (0x3fe0000UL)     /*!< RXTHRLEN (Bitfield-Mask: 0x1ff)                       */
#define OTG_HS_DEVICE_OTG_HS_DTHRCTL_ARPEN_Pos (27UL)               /*!< ARPEN (Bit 27)                                        */
#define OTG_HS_DEVICE_OTG_HS_DTHRCTL_ARPEN_Msk (0x8000000UL)        /*!< ARPEN (Bitfield-Mask: 0x01)                           */
/* ===================================================  OTG_HS_DIEPEMPMSK  =================================================== */
#define OTG_HS_DEVICE_OTG_HS_DIEPEMPMSK_INEPTXFEM_Pos (0UL)         /*!< INEPTXFEM (Bit 0)                                     */
#define OTG_HS_DEVICE_OTG_HS_DIEPEMPMSK_INEPTXFEM_Msk (0xffffUL)    /*!< INEPTXFEM (Bitfield-Mask: 0xffff)                     */
/* ====================================================  OTG_HS_DEACHINT  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DEACHINT_IEP1INT_Pos (1UL)             /*!< IEP1INT (Bit 1)                                       */
#define OTG_HS_DEVICE_OTG_HS_DEACHINT_IEP1INT_Msk (0x2UL)           /*!< IEP1INT (Bitfield-Mask: 0x01)                         */
#define OTG_HS_DEVICE_OTG_HS_DEACHINT_OEP1INT_Pos (17UL)            /*!< OEP1INT (Bit 17)                                      */
#define OTG_HS_DEVICE_OTG_HS_DEACHINT_OEP1INT_Msk (0x20000UL)       /*!< OEP1INT (Bitfield-Mask: 0x01)                         */
/* ==================================================  OTG_HS_DEACHINTMSK  =================================================== */
#define OTG_HS_DEVICE_OTG_HS_DEACHINTMSK_IEP1INTM_Pos (1UL)         /*!< IEP1INTM (Bit 1)                                      */
#define OTG_HS_DEVICE_OTG_HS_DEACHINTMSK_IEP1INTM_Msk (0x2UL)       /*!< IEP1INTM (Bitfield-Mask: 0x01)                        */
#define OTG_HS_DEVICE_OTG_HS_DEACHINTMSK_OEP1INTM_Pos (17UL)        /*!< OEP1INTM (Bit 17)                                     */
#define OTG_HS_DEVICE_OTG_HS_DEACHINTMSK_OEP1INTM_Msk (0x20000UL)   /*!< OEP1INTM (Bitfield-Mask: 0x01)                        */
/* ====================================================  OTG_HS_DIEPCTL0  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL0_MPSIZ_Pos (0UL)               /*!< MPSIZ (Bit 0)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL0_MPSIZ_Msk (0x7ffUL)           /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL0_USBAEP_Pos (15UL)             /*!< USBAEP (Bit 15)                                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL0_USBAEP_Msk (0x8000UL)         /*!< USBAEP (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL0_EONUM_DPID_Pos (16UL)         /*!< EONUM_DPID (Bit 16)                                   */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL0_EONUM_DPID_Msk (0x10000UL)    /*!< EONUM_DPID (Bitfield-Mask: 0x01)                      */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL0_NAKSTS_Pos (17UL)             /*!< NAKSTS (Bit 17)                                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL0_NAKSTS_Msk (0x20000UL)        /*!< NAKSTS (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL0_EPTYP_Pos (18UL)              /*!< EPTYP (Bit 18)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL0_EPTYP_Msk (0xc0000UL)         /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL0_Stall_Pos (21UL)              /*!< Stall (Bit 21)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL0_Stall_Msk (0x200000UL)        /*!< Stall (Bitfield-Mask: 0x01)                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL0_TXFNUM_Pos (22UL)             /*!< TXFNUM (Bit 22)                                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL0_TXFNUM_Msk (0x3c00000UL)      /*!< TXFNUM (Bitfield-Mask: 0x0f)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL0_CNAK_Pos (26UL)               /*!< CNAK (Bit 26)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL0_CNAK_Msk (0x4000000UL)        /*!< CNAK (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL0_SNAK_Pos (27UL)               /*!< SNAK (Bit 27)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL0_SNAK_Msk (0x8000000UL)        /*!< SNAK (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL0_SD0PID_SEVNFRM_Pos (28UL)     /*!< SD0PID_SEVNFRM (Bit 28)                               */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL0_SD0PID_SEVNFRM_Msk (0x10000000UL) /*!< SD0PID_SEVNFRM (Bitfield-Mask: 0x01)              */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL0_SODDFRM_Pos (29UL)            /*!< SODDFRM (Bit 29)                                      */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL0_SODDFRM_Msk (0x20000000UL)    /*!< SODDFRM (Bitfield-Mask: 0x01)                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL0_EPDIS_Pos (30UL)              /*!< EPDIS (Bit 30)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL0_EPDIS_Msk (0x40000000UL)      /*!< EPDIS (Bitfield-Mask: 0x01)                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL0_EPENA_Pos (31UL)              /*!< EPENA (Bit 31)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL0_EPENA_Msk (0x80000000UL)      /*!< EPENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_HS_DIEPCTL1  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL1_MPSIZ_Pos (0UL)               /*!< MPSIZ (Bit 0)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL1_MPSIZ_Msk (0x7ffUL)           /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL1_USBAEP_Pos (15UL)             /*!< USBAEP (Bit 15)                                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL1_USBAEP_Msk (0x8000UL)         /*!< USBAEP (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL1_EONUM_DPID_Pos (16UL)         /*!< EONUM_DPID (Bit 16)                                   */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL1_EONUM_DPID_Msk (0x10000UL)    /*!< EONUM_DPID (Bitfield-Mask: 0x01)                      */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL1_NAKSTS_Pos (17UL)             /*!< NAKSTS (Bit 17)                                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL1_NAKSTS_Msk (0x20000UL)        /*!< NAKSTS (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL1_EPTYP_Pos (18UL)              /*!< EPTYP (Bit 18)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL1_EPTYP_Msk (0xc0000UL)         /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL1_Stall_Pos (21UL)              /*!< Stall (Bit 21)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL1_Stall_Msk (0x200000UL)        /*!< Stall (Bitfield-Mask: 0x01)                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL1_TXFNUM_Pos (22UL)             /*!< TXFNUM (Bit 22)                                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL1_TXFNUM_Msk (0x3c00000UL)      /*!< TXFNUM (Bitfield-Mask: 0x0f)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL1_CNAK_Pos (26UL)               /*!< CNAK (Bit 26)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL1_CNAK_Msk (0x4000000UL)        /*!< CNAK (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL1_SNAK_Pos (27UL)               /*!< SNAK (Bit 27)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL1_SNAK_Msk (0x8000000UL)        /*!< SNAK (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL1_SD0PID_SEVNFRM_Pos (28UL)     /*!< SD0PID_SEVNFRM (Bit 28)                               */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL1_SD0PID_SEVNFRM_Msk (0x10000000UL) /*!< SD0PID_SEVNFRM (Bitfield-Mask: 0x01)              */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL1_SODDFRM_Pos (29UL)            /*!< SODDFRM (Bit 29)                                      */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL1_SODDFRM_Msk (0x20000000UL)    /*!< SODDFRM (Bitfield-Mask: 0x01)                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL1_EPDIS_Pos (30UL)              /*!< EPDIS (Bit 30)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL1_EPDIS_Msk (0x40000000UL)      /*!< EPDIS (Bitfield-Mask: 0x01)                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL1_EPENA_Pos (31UL)              /*!< EPENA (Bit 31)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL1_EPENA_Msk (0x80000000UL)      /*!< EPENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_HS_DIEPCTL2  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL2_MPSIZ_Pos (0UL)               /*!< MPSIZ (Bit 0)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL2_MPSIZ_Msk (0x7ffUL)           /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL2_USBAEP_Pos (15UL)             /*!< USBAEP (Bit 15)                                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL2_USBAEP_Msk (0x8000UL)         /*!< USBAEP (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL2_EONUM_DPID_Pos (16UL)         /*!< EONUM_DPID (Bit 16)                                   */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL2_EONUM_DPID_Msk (0x10000UL)    /*!< EONUM_DPID (Bitfield-Mask: 0x01)                      */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL2_NAKSTS_Pos (17UL)             /*!< NAKSTS (Bit 17)                                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL2_NAKSTS_Msk (0x20000UL)        /*!< NAKSTS (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL2_EPTYP_Pos (18UL)              /*!< EPTYP (Bit 18)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL2_EPTYP_Msk (0xc0000UL)         /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL2_Stall_Pos (21UL)              /*!< Stall (Bit 21)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL2_Stall_Msk (0x200000UL)        /*!< Stall (Bitfield-Mask: 0x01)                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL2_TXFNUM_Pos (22UL)             /*!< TXFNUM (Bit 22)                                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL2_TXFNUM_Msk (0x3c00000UL)      /*!< TXFNUM (Bitfield-Mask: 0x0f)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL2_CNAK_Pos (26UL)               /*!< CNAK (Bit 26)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL2_CNAK_Msk (0x4000000UL)        /*!< CNAK (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL2_SNAK_Pos (27UL)               /*!< SNAK (Bit 27)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL2_SNAK_Msk (0x8000000UL)        /*!< SNAK (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL2_SD0PID_SEVNFRM_Pos (28UL)     /*!< SD0PID_SEVNFRM (Bit 28)                               */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL2_SD0PID_SEVNFRM_Msk (0x10000000UL) /*!< SD0PID_SEVNFRM (Bitfield-Mask: 0x01)              */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL2_SODDFRM_Pos (29UL)            /*!< SODDFRM (Bit 29)                                      */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL2_SODDFRM_Msk (0x20000000UL)    /*!< SODDFRM (Bitfield-Mask: 0x01)                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL2_EPDIS_Pos (30UL)              /*!< EPDIS (Bit 30)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL2_EPDIS_Msk (0x40000000UL)      /*!< EPDIS (Bitfield-Mask: 0x01)                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL2_EPENA_Pos (31UL)              /*!< EPENA (Bit 31)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL2_EPENA_Msk (0x80000000UL)      /*!< EPENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_HS_DIEPCTL3  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL3_MPSIZ_Pos (0UL)               /*!< MPSIZ (Bit 0)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL3_MPSIZ_Msk (0x7ffUL)           /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL3_USBAEP_Pos (15UL)             /*!< USBAEP (Bit 15)                                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL3_USBAEP_Msk (0x8000UL)         /*!< USBAEP (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL3_EONUM_DPID_Pos (16UL)         /*!< EONUM_DPID (Bit 16)                                   */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL3_EONUM_DPID_Msk (0x10000UL)    /*!< EONUM_DPID (Bitfield-Mask: 0x01)                      */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL3_NAKSTS_Pos (17UL)             /*!< NAKSTS (Bit 17)                                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL3_NAKSTS_Msk (0x20000UL)        /*!< NAKSTS (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL3_EPTYP_Pos (18UL)              /*!< EPTYP (Bit 18)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL3_EPTYP_Msk (0xc0000UL)         /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL3_Stall_Pos (21UL)              /*!< Stall (Bit 21)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL3_Stall_Msk (0x200000UL)        /*!< Stall (Bitfield-Mask: 0x01)                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL3_TXFNUM_Pos (22UL)             /*!< TXFNUM (Bit 22)                                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL3_TXFNUM_Msk (0x3c00000UL)      /*!< TXFNUM (Bitfield-Mask: 0x0f)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL3_CNAK_Pos (26UL)               /*!< CNAK (Bit 26)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL3_CNAK_Msk (0x4000000UL)        /*!< CNAK (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL3_SNAK_Pos (27UL)               /*!< SNAK (Bit 27)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL3_SNAK_Msk (0x8000000UL)        /*!< SNAK (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL3_SD0PID_SEVNFRM_Pos (28UL)     /*!< SD0PID_SEVNFRM (Bit 28)                               */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL3_SD0PID_SEVNFRM_Msk (0x10000000UL) /*!< SD0PID_SEVNFRM (Bitfield-Mask: 0x01)              */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL3_SODDFRM_Pos (29UL)            /*!< SODDFRM (Bit 29)                                      */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL3_SODDFRM_Msk (0x20000000UL)    /*!< SODDFRM (Bitfield-Mask: 0x01)                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL3_EPDIS_Pos (30UL)              /*!< EPDIS (Bit 30)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL3_EPDIS_Msk (0x40000000UL)      /*!< EPDIS (Bitfield-Mask: 0x01)                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL3_EPENA_Pos (31UL)              /*!< EPENA (Bit 31)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL3_EPENA_Msk (0x80000000UL)      /*!< EPENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_HS_DIEPCTL4  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL4_MPSIZ_Pos (0UL)               /*!< MPSIZ (Bit 0)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL4_MPSIZ_Msk (0x7ffUL)           /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL4_USBAEP_Pos (15UL)             /*!< USBAEP (Bit 15)                                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL4_USBAEP_Msk (0x8000UL)         /*!< USBAEP (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL4_EONUM_DPID_Pos (16UL)         /*!< EONUM_DPID (Bit 16)                                   */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL4_EONUM_DPID_Msk (0x10000UL)    /*!< EONUM_DPID (Bitfield-Mask: 0x01)                      */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL4_NAKSTS_Pos (17UL)             /*!< NAKSTS (Bit 17)                                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL4_NAKSTS_Msk (0x20000UL)        /*!< NAKSTS (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL4_EPTYP_Pos (18UL)              /*!< EPTYP (Bit 18)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL4_EPTYP_Msk (0xc0000UL)         /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL4_Stall_Pos (21UL)              /*!< Stall (Bit 21)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL4_Stall_Msk (0x200000UL)        /*!< Stall (Bitfield-Mask: 0x01)                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL4_TXFNUM_Pos (22UL)             /*!< TXFNUM (Bit 22)                                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL4_TXFNUM_Msk (0x3c00000UL)      /*!< TXFNUM (Bitfield-Mask: 0x0f)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL4_CNAK_Pos (26UL)               /*!< CNAK (Bit 26)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL4_CNAK_Msk (0x4000000UL)        /*!< CNAK (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL4_SNAK_Pos (27UL)               /*!< SNAK (Bit 27)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL4_SNAK_Msk (0x8000000UL)        /*!< SNAK (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL4_SD0PID_SEVNFRM_Pos (28UL)     /*!< SD0PID_SEVNFRM (Bit 28)                               */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL4_SD0PID_SEVNFRM_Msk (0x10000000UL) /*!< SD0PID_SEVNFRM (Bitfield-Mask: 0x01)              */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL4_SODDFRM_Pos (29UL)            /*!< SODDFRM (Bit 29)                                      */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL4_SODDFRM_Msk (0x20000000UL)    /*!< SODDFRM (Bitfield-Mask: 0x01)                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL4_EPDIS_Pos (30UL)              /*!< EPDIS (Bit 30)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL4_EPDIS_Msk (0x40000000UL)      /*!< EPDIS (Bitfield-Mask: 0x01)                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL4_EPENA_Pos (31UL)              /*!< EPENA (Bit 31)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL4_EPENA_Msk (0x80000000UL)      /*!< EPENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_HS_DIEPCTL5  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL5_MPSIZ_Pos (0UL)               /*!< MPSIZ (Bit 0)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL5_MPSIZ_Msk (0x7ffUL)           /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL5_USBAEP_Pos (15UL)             /*!< USBAEP (Bit 15)                                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL5_USBAEP_Msk (0x8000UL)         /*!< USBAEP (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL5_EONUM_DPID_Pos (16UL)         /*!< EONUM_DPID (Bit 16)                                   */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL5_EONUM_DPID_Msk (0x10000UL)    /*!< EONUM_DPID (Bitfield-Mask: 0x01)                      */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL5_NAKSTS_Pos (17UL)             /*!< NAKSTS (Bit 17)                                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL5_NAKSTS_Msk (0x20000UL)        /*!< NAKSTS (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL5_EPTYP_Pos (18UL)              /*!< EPTYP (Bit 18)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL5_EPTYP_Msk (0xc0000UL)         /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL5_Stall_Pos (21UL)              /*!< Stall (Bit 21)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL5_Stall_Msk (0x200000UL)        /*!< Stall (Bitfield-Mask: 0x01)                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL5_TXFNUM_Pos (22UL)             /*!< TXFNUM (Bit 22)                                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL5_TXFNUM_Msk (0x3c00000UL)      /*!< TXFNUM (Bitfield-Mask: 0x0f)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL5_CNAK_Pos (26UL)               /*!< CNAK (Bit 26)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL5_CNAK_Msk (0x4000000UL)        /*!< CNAK (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL5_SNAK_Pos (27UL)               /*!< SNAK (Bit 27)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL5_SNAK_Msk (0x8000000UL)        /*!< SNAK (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL5_SD0PID_SEVNFRM_Pos (28UL)     /*!< SD0PID_SEVNFRM (Bit 28)                               */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL5_SD0PID_SEVNFRM_Msk (0x10000000UL) /*!< SD0PID_SEVNFRM (Bitfield-Mask: 0x01)              */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL5_SODDFRM_Pos (29UL)            /*!< SODDFRM (Bit 29)                                      */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL5_SODDFRM_Msk (0x20000000UL)    /*!< SODDFRM (Bitfield-Mask: 0x01)                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL5_EPDIS_Pos (30UL)              /*!< EPDIS (Bit 30)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL5_EPDIS_Msk (0x40000000UL)      /*!< EPDIS (Bitfield-Mask: 0x01)                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL5_EPENA_Pos (31UL)              /*!< EPENA (Bit 31)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL5_EPENA_Msk (0x80000000UL)      /*!< EPENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_HS_DIEPCTL6  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL6_MPSIZ_Pos (0UL)               /*!< MPSIZ (Bit 0)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL6_MPSIZ_Msk (0x7ffUL)           /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL6_USBAEP_Pos (15UL)             /*!< USBAEP (Bit 15)                                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL6_USBAEP_Msk (0x8000UL)         /*!< USBAEP (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL6_EONUM_DPID_Pos (16UL)         /*!< EONUM_DPID (Bit 16)                                   */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL6_EONUM_DPID_Msk (0x10000UL)    /*!< EONUM_DPID (Bitfield-Mask: 0x01)                      */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL6_NAKSTS_Pos (17UL)             /*!< NAKSTS (Bit 17)                                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL6_NAKSTS_Msk (0x20000UL)        /*!< NAKSTS (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL6_EPTYP_Pos (18UL)              /*!< EPTYP (Bit 18)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL6_EPTYP_Msk (0xc0000UL)         /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL6_Stall_Pos (21UL)              /*!< Stall (Bit 21)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL6_Stall_Msk (0x200000UL)        /*!< Stall (Bitfield-Mask: 0x01)                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL6_TXFNUM_Pos (22UL)             /*!< TXFNUM (Bit 22)                                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL6_TXFNUM_Msk (0x3c00000UL)      /*!< TXFNUM (Bitfield-Mask: 0x0f)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL6_CNAK_Pos (26UL)               /*!< CNAK (Bit 26)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL6_CNAK_Msk (0x4000000UL)        /*!< CNAK (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL6_SNAK_Pos (27UL)               /*!< SNAK (Bit 27)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL6_SNAK_Msk (0x8000000UL)        /*!< SNAK (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL6_SD0PID_SEVNFRM_Pos (28UL)     /*!< SD0PID_SEVNFRM (Bit 28)                               */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL6_SD0PID_SEVNFRM_Msk (0x10000000UL) /*!< SD0PID_SEVNFRM (Bitfield-Mask: 0x01)              */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL6_SODDFRM_Pos (29UL)            /*!< SODDFRM (Bit 29)                                      */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL6_SODDFRM_Msk (0x20000000UL)    /*!< SODDFRM (Bitfield-Mask: 0x01)                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL6_EPDIS_Pos (30UL)              /*!< EPDIS (Bit 30)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL6_EPDIS_Msk (0x40000000UL)      /*!< EPDIS (Bitfield-Mask: 0x01)                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL6_EPENA_Pos (31UL)              /*!< EPENA (Bit 31)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL6_EPENA_Msk (0x80000000UL)      /*!< EPENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_HS_DIEPCTL7  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL7_MPSIZ_Pos (0UL)               /*!< MPSIZ (Bit 0)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL7_MPSIZ_Msk (0x7ffUL)           /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL7_USBAEP_Pos (15UL)             /*!< USBAEP (Bit 15)                                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL7_USBAEP_Msk (0x8000UL)         /*!< USBAEP (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL7_EONUM_DPID_Pos (16UL)         /*!< EONUM_DPID (Bit 16)                                   */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL7_EONUM_DPID_Msk (0x10000UL)    /*!< EONUM_DPID (Bitfield-Mask: 0x01)                      */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL7_NAKSTS_Pos (17UL)             /*!< NAKSTS (Bit 17)                                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL7_NAKSTS_Msk (0x20000UL)        /*!< NAKSTS (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL7_EPTYP_Pos (18UL)              /*!< EPTYP (Bit 18)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL7_EPTYP_Msk (0xc0000UL)         /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL7_Stall_Pos (21UL)              /*!< Stall (Bit 21)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL7_Stall_Msk (0x200000UL)        /*!< Stall (Bitfield-Mask: 0x01)                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL7_TXFNUM_Pos (22UL)             /*!< TXFNUM (Bit 22)                                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL7_TXFNUM_Msk (0x3c00000UL)      /*!< TXFNUM (Bitfield-Mask: 0x0f)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL7_CNAK_Pos (26UL)               /*!< CNAK (Bit 26)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL7_CNAK_Msk (0x4000000UL)        /*!< CNAK (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL7_SNAK_Pos (27UL)               /*!< SNAK (Bit 27)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL7_SNAK_Msk (0x8000000UL)        /*!< SNAK (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL7_SD0PID_SEVNFRM_Pos (28UL)     /*!< SD0PID_SEVNFRM (Bit 28)                               */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL7_SD0PID_SEVNFRM_Msk (0x10000000UL) /*!< SD0PID_SEVNFRM (Bitfield-Mask: 0x01)              */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL7_SODDFRM_Pos (29UL)            /*!< SODDFRM (Bit 29)                                      */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL7_SODDFRM_Msk (0x20000000UL)    /*!< SODDFRM (Bitfield-Mask: 0x01)                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL7_EPDIS_Pos (30UL)              /*!< EPDIS (Bit 30)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL7_EPDIS_Msk (0x40000000UL)      /*!< EPDIS (Bitfield-Mask: 0x01)                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL7_EPENA_Pos (31UL)              /*!< EPENA (Bit 31)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPCTL7_EPENA_Msk (0x80000000UL)      /*!< EPENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_HS_DIEPINT0  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT0_XFRC_Pos (0UL)                /*!< XFRC (Bit 0)                                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT0_XFRC_Msk (0x1UL)              /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT0_EPDISD_Pos (1UL)              /*!< EPDISD (Bit 1)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT0_EPDISD_Msk (0x2UL)            /*!< EPDISD (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT0_TOC_Pos (3UL)                 /*!< TOC (Bit 3)                                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT0_TOC_Msk (0x8UL)               /*!< TOC (Bitfield-Mask: 0x01)                             */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT0_ITTXFE_Pos (4UL)              /*!< ITTXFE (Bit 4)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT0_ITTXFE_Msk (0x10UL)           /*!< ITTXFE (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT0_INEPNE_Pos (6UL)              /*!< INEPNE (Bit 6)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT0_INEPNE_Msk (0x40UL)           /*!< INEPNE (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT0_TXFE_Pos (7UL)                /*!< TXFE (Bit 7)                                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT0_TXFE_Msk (0x80UL)             /*!< TXFE (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT0_TXFIFOUDRN_Pos (8UL)          /*!< TXFIFOUDRN (Bit 8)                                    */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT0_TXFIFOUDRN_Msk (0x100UL)      /*!< TXFIFOUDRN (Bitfield-Mask: 0x01)                      */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT0_BNA_Pos (9UL)                 /*!< BNA (Bit 9)                                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT0_BNA_Msk (0x200UL)             /*!< BNA (Bitfield-Mask: 0x01)                             */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT0_PKTDRPSTS_Pos (11UL)          /*!< PKTDRPSTS (Bit 11)                                    */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT0_PKTDRPSTS_Msk (0x800UL)       /*!< PKTDRPSTS (Bitfield-Mask: 0x01)                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT0_BERR_Pos (12UL)               /*!< BERR (Bit 12)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT0_BERR_Msk (0x1000UL)           /*!< BERR (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT0_NAK_Pos (13UL)                /*!< NAK (Bit 13)                                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT0_NAK_Msk (0x2000UL)            /*!< NAK (Bitfield-Mask: 0x01)                             */
/* ====================================================  OTG_HS_DIEPINT1  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT1_XFRC_Pos (0UL)                /*!< XFRC (Bit 0)                                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT1_XFRC_Msk (0x1UL)              /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT1_EPDISD_Pos (1UL)              /*!< EPDISD (Bit 1)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT1_EPDISD_Msk (0x2UL)            /*!< EPDISD (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT1_TOC_Pos (3UL)                 /*!< TOC (Bit 3)                                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT1_TOC_Msk (0x8UL)               /*!< TOC (Bitfield-Mask: 0x01)                             */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT1_ITTXFE_Pos (4UL)              /*!< ITTXFE (Bit 4)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT1_ITTXFE_Msk (0x10UL)           /*!< ITTXFE (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT1_INEPNE_Pos (6UL)              /*!< INEPNE (Bit 6)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT1_INEPNE_Msk (0x40UL)           /*!< INEPNE (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT1_TXFE_Pos (7UL)                /*!< TXFE (Bit 7)                                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT1_TXFE_Msk (0x80UL)             /*!< TXFE (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT1_TXFIFOUDRN_Pos (8UL)          /*!< TXFIFOUDRN (Bit 8)                                    */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT1_TXFIFOUDRN_Msk (0x100UL)      /*!< TXFIFOUDRN (Bitfield-Mask: 0x01)                      */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT1_BNA_Pos (9UL)                 /*!< BNA (Bit 9)                                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT1_BNA_Msk (0x200UL)             /*!< BNA (Bitfield-Mask: 0x01)                             */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT1_PKTDRPSTS_Pos (11UL)          /*!< PKTDRPSTS (Bit 11)                                    */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT1_PKTDRPSTS_Msk (0x800UL)       /*!< PKTDRPSTS (Bitfield-Mask: 0x01)                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT1_BERR_Pos (12UL)               /*!< BERR (Bit 12)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT1_BERR_Msk (0x1000UL)           /*!< BERR (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT1_NAK_Pos (13UL)                /*!< NAK (Bit 13)                                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT1_NAK_Msk (0x2000UL)            /*!< NAK (Bitfield-Mask: 0x01)                             */
/* ====================================================  OTG_HS_DIEPINT2  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT2_XFRC_Pos (0UL)                /*!< XFRC (Bit 0)                                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT2_XFRC_Msk (0x1UL)              /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT2_EPDISD_Pos (1UL)              /*!< EPDISD (Bit 1)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT2_EPDISD_Msk (0x2UL)            /*!< EPDISD (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT2_TOC_Pos (3UL)                 /*!< TOC (Bit 3)                                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT2_TOC_Msk (0x8UL)               /*!< TOC (Bitfield-Mask: 0x01)                             */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT2_ITTXFE_Pos (4UL)              /*!< ITTXFE (Bit 4)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT2_ITTXFE_Msk (0x10UL)           /*!< ITTXFE (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT2_INEPNE_Pos (6UL)              /*!< INEPNE (Bit 6)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT2_INEPNE_Msk (0x40UL)           /*!< INEPNE (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT2_TXFE_Pos (7UL)                /*!< TXFE (Bit 7)                                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT2_TXFE_Msk (0x80UL)             /*!< TXFE (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT2_TXFIFOUDRN_Pos (8UL)          /*!< TXFIFOUDRN (Bit 8)                                    */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT2_TXFIFOUDRN_Msk (0x100UL)      /*!< TXFIFOUDRN (Bitfield-Mask: 0x01)                      */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT2_BNA_Pos (9UL)                 /*!< BNA (Bit 9)                                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT2_BNA_Msk (0x200UL)             /*!< BNA (Bitfield-Mask: 0x01)                             */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT2_PKTDRPSTS_Pos (11UL)          /*!< PKTDRPSTS (Bit 11)                                    */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT2_PKTDRPSTS_Msk (0x800UL)       /*!< PKTDRPSTS (Bitfield-Mask: 0x01)                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT2_BERR_Pos (12UL)               /*!< BERR (Bit 12)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT2_BERR_Msk (0x1000UL)           /*!< BERR (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT2_NAK_Pos (13UL)                /*!< NAK (Bit 13)                                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT2_NAK_Msk (0x2000UL)            /*!< NAK (Bitfield-Mask: 0x01)                             */
/* ====================================================  OTG_HS_DIEPINT3  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT3_XFRC_Pos (0UL)                /*!< XFRC (Bit 0)                                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT3_XFRC_Msk (0x1UL)              /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT3_EPDISD_Pos (1UL)              /*!< EPDISD (Bit 1)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT3_EPDISD_Msk (0x2UL)            /*!< EPDISD (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT3_TOC_Pos (3UL)                 /*!< TOC (Bit 3)                                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT3_TOC_Msk (0x8UL)               /*!< TOC (Bitfield-Mask: 0x01)                             */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT3_ITTXFE_Pos (4UL)              /*!< ITTXFE (Bit 4)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT3_ITTXFE_Msk (0x10UL)           /*!< ITTXFE (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT3_INEPNE_Pos (6UL)              /*!< INEPNE (Bit 6)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT3_INEPNE_Msk (0x40UL)           /*!< INEPNE (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT3_TXFE_Pos (7UL)                /*!< TXFE (Bit 7)                                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT3_TXFE_Msk (0x80UL)             /*!< TXFE (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT3_TXFIFOUDRN_Pos (8UL)          /*!< TXFIFOUDRN (Bit 8)                                    */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT3_TXFIFOUDRN_Msk (0x100UL)      /*!< TXFIFOUDRN (Bitfield-Mask: 0x01)                      */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT3_BNA_Pos (9UL)                 /*!< BNA (Bit 9)                                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT3_BNA_Msk (0x200UL)             /*!< BNA (Bitfield-Mask: 0x01)                             */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT3_PKTDRPSTS_Pos (11UL)          /*!< PKTDRPSTS (Bit 11)                                    */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT3_PKTDRPSTS_Msk (0x800UL)       /*!< PKTDRPSTS (Bitfield-Mask: 0x01)                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT3_BERR_Pos (12UL)               /*!< BERR (Bit 12)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT3_BERR_Msk (0x1000UL)           /*!< BERR (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT3_NAK_Pos (13UL)                /*!< NAK (Bit 13)                                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT3_NAK_Msk (0x2000UL)            /*!< NAK (Bitfield-Mask: 0x01)                             */
/* ====================================================  OTG_HS_DIEPINT4  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT4_XFRC_Pos (0UL)                /*!< XFRC (Bit 0)                                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT4_XFRC_Msk (0x1UL)              /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT4_EPDISD_Pos (1UL)              /*!< EPDISD (Bit 1)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT4_EPDISD_Msk (0x2UL)            /*!< EPDISD (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT4_TOC_Pos (3UL)                 /*!< TOC (Bit 3)                                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT4_TOC_Msk (0x8UL)               /*!< TOC (Bitfield-Mask: 0x01)                             */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT4_ITTXFE_Pos (4UL)              /*!< ITTXFE (Bit 4)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT4_ITTXFE_Msk (0x10UL)           /*!< ITTXFE (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT4_INEPNE_Pos (6UL)              /*!< INEPNE (Bit 6)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT4_INEPNE_Msk (0x40UL)           /*!< INEPNE (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT4_TXFE_Pos (7UL)                /*!< TXFE (Bit 7)                                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT4_TXFE_Msk (0x80UL)             /*!< TXFE (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT4_TXFIFOUDRN_Pos (8UL)          /*!< TXFIFOUDRN (Bit 8)                                    */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT4_TXFIFOUDRN_Msk (0x100UL)      /*!< TXFIFOUDRN (Bitfield-Mask: 0x01)                      */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT4_BNA_Pos (9UL)                 /*!< BNA (Bit 9)                                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT4_BNA_Msk (0x200UL)             /*!< BNA (Bitfield-Mask: 0x01)                             */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT4_PKTDRPSTS_Pos (11UL)          /*!< PKTDRPSTS (Bit 11)                                    */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT4_PKTDRPSTS_Msk (0x800UL)       /*!< PKTDRPSTS (Bitfield-Mask: 0x01)                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT4_BERR_Pos (12UL)               /*!< BERR (Bit 12)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT4_BERR_Msk (0x1000UL)           /*!< BERR (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT4_NAK_Pos (13UL)                /*!< NAK (Bit 13)                                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT4_NAK_Msk (0x2000UL)            /*!< NAK (Bitfield-Mask: 0x01)                             */
/* ====================================================  OTG_HS_DIEPINT5  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT5_XFRC_Pos (0UL)                /*!< XFRC (Bit 0)                                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT5_XFRC_Msk (0x1UL)              /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT5_EPDISD_Pos (1UL)              /*!< EPDISD (Bit 1)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT5_EPDISD_Msk (0x2UL)            /*!< EPDISD (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT5_TOC_Pos (3UL)                 /*!< TOC (Bit 3)                                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT5_TOC_Msk (0x8UL)               /*!< TOC (Bitfield-Mask: 0x01)                             */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT5_ITTXFE_Pos (4UL)              /*!< ITTXFE (Bit 4)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT5_ITTXFE_Msk (0x10UL)           /*!< ITTXFE (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT5_INEPNE_Pos (6UL)              /*!< INEPNE (Bit 6)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT5_INEPNE_Msk (0x40UL)           /*!< INEPNE (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT5_TXFE_Pos (7UL)                /*!< TXFE (Bit 7)                                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT5_TXFE_Msk (0x80UL)             /*!< TXFE (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT5_TXFIFOUDRN_Pos (8UL)          /*!< TXFIFOUDRN (Bit 8)                                    */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT5_TXFIFOUDRN_Msk (0x100UL)      /*!< TXFIFOUDRN (Bitfield-Mask: 0x01)                      */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT5_BNA_Pos (9UL)                 /*!< BNA (Bit 9)                                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT5_BNA_Msk (0x200UL)             /*!< BNA (Bitfield-Mask: 0x01)                             */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT5_PKTDRPSTS_Pos (11UL)          /*!< PKTDRPSTS (Bit 11)                                    */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT5_PKTDRPSTS_Msk (0x800UL)       /*!< PKTDRPSTS (Bitfield-Mask: 0x01)                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT5_BERR_Pos (12UL)               /*!< BERR (Bit 12)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT5_BERR_Msk (0x1000UL)           /*!< BERR (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT5_NAK_Pos (13UL)                /*!< NAK (Bit 13)                                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT5_NAK_Msk (0x2000UL)            /*!< NAK (Bitfield-Mask: 0x01)                             */
/* ====================================================  OTG_HS_DIEPINT6  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT6_XFRC_Pos (0UL)                /*!< XFRC (Bit 0)                                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT6_XFRC_Msk (0x1UL)              /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT6_EPDISD_Pos (1UL)              /*!< EPDISD (Bit 1)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT6_EPDISD_Msk (0x2UL)            /*!< EPDISD (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT6_TOC_Pos (3UL)                 /*!< TOC (Bit 3)                                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT6_TOC_Msk (0x8UL)               /*!< TOC (Bitfield-Mask: 0x01)                             */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT6_ITTXFE_Pos (4UL)              /*!< ITTXFE (Bit 4)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT6_ITTXFE_Msk (0x10UL)           /*!< ITTXFE (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT6_INEPNE_Pos (6UL)              /*!< INEPNE (Bit 6)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT6_INEPNE_Msk (0x40UL)           /*!< INEPNE (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT6_TXFE_Pos (7UL)                /*!< TXFE (Bit 7)                                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT6_TXFE_Msk (0x80UL)             /*!< TXFE (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT6_TXFIFOUDRN_Pos (8UL)          /*!< TXFIFOUDRN (Bit 8)                                    */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT6_TXFIFOUDRN_Msk (0x100UL)      /*!< TXFIFOUDRN (Bitfield-Mask: 0x01)                      */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT6_BNA_Pos (9UL)                 /*!< BNA (Bit 9)                                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT6_BNA_Msk (0x200UL)             /*!< BNA (Bitfield-Mask: 0x01)                             */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT6_PKTDRPSTS_Pos (11UL)          /*!< PKTDRPSTS (Bit 11)                                    */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT6_PKTDRPSTS_Msk (0x800UL)       /*!< PKTDRPSTS (Bitfield-Mask: 0x01)                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT6_BERR_Pos (12UL)               /*!< BERR (Bit 12)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT6_BERR_Msk (0x1000UL)           /*!< BERR (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT6_NAK_Pos (13UL)                /*!< NAK (Bit 13)                                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT6_NAK_Msk (0x2000UL)            /*!< NAK (Bitfield-Mask: 0x01)                             */
/* ====================================================  OTG_HS_DIEPINT7  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT7_XFRC_Pos (0UL)                /*!< XFRC (Bit 0)                                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT7_XFRC_Msk (0x1UL)              /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT7_EPDISD_Pos (1UL)              /*!< EPDISD (Bit 1)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT7_EPDISD_Msk (0x2UL)            /*!< EPDISD (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT7_TOC_Pos (3UL)                 /*!< TOC (Bit 3)                                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT7_TOC_Msk (0x8UL)               /*!< TOC (Bitfield-Mask: 0x01)                             */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT7_ITTXFE_Pos (4UL)              /*!< ITTXFE (Bit 4)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT7_ITTXFE_Msk (0x10UL)           /*!< ITTXFE (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT7_INEPNE_Pos (6UL)              /*!< INEPNE (Bit 6)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT7_INEPNE_Msk (0x40UL)           /*!< INEPNE (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT7_TXFE_Pos (7UL)                /*!< TXFE (Bit 7)                                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT7_TXFE_Msk (0x80UL)             /*!< TXFE (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT7_TXFIFOUDRN_Pos (8UL)          /*!< TXFIFOUDRN (Bit 8)                                    */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT7_TXFIFOUDRN_Msk (0x100UL)      /*!< TXFIFOUDRN (Bitfield-Mask: 0x01)                      */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT7_BNA_Pos (9UL)                 /*!< BNA (Bit 9)                                           */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT7_BNA_Msk (0x200UL)             /*!< BNA (Bitfield-Mask: 0x01)                             */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT7_PKTDRPSTS_Pos (11UL)          /*!< PKTDRPSTS (Bit 11)                                    */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT7_PKTDRPSTS_Msk (0x800UL)       /*!< PKTDRPSTS (Bitfield-Mask: 0x01)                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT7_BERR_Pos (12UL)               /*!< BERR (Bit 12)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT7_BERR_Msk (0x1000UL)           /*!< BERR (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT7_NAK_Pos (13UL)                /*!< NAK (Bit 13)                                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPINT7_NAK_Msk (0x2000UL)            /*!< NAK (Bitfield-Mask: 0x01)                             */
/* ===================================================  OTG_HS_DIEPTSIZ0  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ0_XFRSIZ_Pos (0UL)             /*!< XFRSIZ (Bit 0)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ0_XFRSIZ_Msk (0x7fUL)          /*!< XFRSIZ (Bitfield-Mask: 0x7f)                          */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ0_PKTCNT_Pos (19UL)            /*!< PKTCNT (Bit 19)                                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ0_PKTCNT_Msk (0x180000UL)      /*!< PKTCNT (Bitfield-Mask: 0x03)                          */
/* ====================================================  OTG_HS_DIEPDMA1  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DIEPDMA1_DMAADDR_Pos (0UL)             /*!< DMAADDR (Bit 0)                                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPDMA1_DMAADDR_Msk (0xffffffffUL)    /*!< DMAADDR (Bitfield-Mask: 0xffffffff)                   */
/* ====================================================  OTG_HS_DIEPDMA2  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DIEPDMA2_DMAADDR_Pos (0UL)             /*!< DMAADDR (Bit 0)                                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPDMA2_DMAADDR_Msk (0xffffffffUL)    /*!< DMAADDR (Bitfield-Mask: 0xffffffff)                   */
/* ====================================================  OTG_HS_DIEPDMA3  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DIEPDMA3_DMAADDR_Pos (0UL)             /*!< DMAADDR (Bit 0)                                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPDMA3_DMAADDR_Msk (0xffffffffUL)    /*!< DMAADDR (Bitfield-Mask: 0xffffffff)                   */
/* ====================================================  OTG_HS_DIEPDMA4  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DIEPDMA4_DMAADDR_Pos (0UL)             /*!< DMAADDR (Bit 0)                                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPDMA4_DMAADDR_Msk (0xffffffffUL)    /*!< DMAADDR (Bitfield-Mask: 0xffffffff)                   */
/* ====================================================  OTG_HS_DIEPDMA5  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DIEPDMA5_DMAADDR_Pos (0UL)             /*!< DMAADDR (Bit 0)                                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPDMA5_DMAADDR_Msk (0xffffffffUL)    /*!< DMAADDR (Bitfield-Mask: 0xffffffff)                   */
/* ====================================================  OTG_HS_DTXFSTS0  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DTXFSTS0_INEPTFSAV_Pos (0UL)           /*!< INEPTFSAV (Bit 0)                                     */
#define OTG_HS_DEVICE_OTG_HS_DTXFSTS0_INEPTFSAV_Msk (0xffffUL)      /*!< INEPTFSAV (Bitfield-Mask: 0xffff)                     */
/* ====================================================  OTG_HS_DTXFSTS1  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DTXFSTS1_INEPTFSAV_Pos (0UL)           /*!< INEPTFSAV (Bit 0)                                     */
#define OTG_HS_DEVICE_OTG_HS_DTXFSTS1_INEPTFSAV_Msk (0xffffUL)      /*!< INEPTFSAV (Bitfield-Mask: 0xffff)                     */
/* ====================================================  OTG_HS_DTXFSTS2  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DTXFSTS2_INEPTFSAV_Pos (0UL)           /*!< INEPTFSAV (Bit 0)                                     */
#define OTG_HS_DEVICE_OTG_HS_DTXFSTS2_INEPTFSAV_Msk (0xffffUL)      /*!< INEPTFSAV (Bitfield-Mask: 0xffff)                     */
/* ====================================================  OTG_HS_DTXFSTS3  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DTXFSTS3_INEPTFSAV_Pos (0UL)           /*!< INEPTFSAV (Bit 0)                                     */
#define OTG_HS_DEVICE_OTG_HS_DTXFSTS3_INEPTFSAV_Msk (0xffffUL)      /*!< INEPTFSAV (Bitfield-Mask: 0xffff)                     */
/* ====================================================  OTG_HS_DTXFSTS4  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DTXFSTS4_INEPTFSAV_Pos (0UL)           /*!< INEPTFSAV (Bit 0)                                     */
#define OTG_HS_DEVICE_OTG_HS_DTXFSTS4_INEPTFSAV_Msk (0xffffUL)      /*!< INEPTFSAV (Bitfield-Mask: 0xffff)                     */
/* ====================================================  OTG_HS_DTXFSTS5  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DTXFSTS5_INEPTFSAV_Pos (0UL)           /*!< INEPTFSAV (Bit 0)                                     */
#define OTG_HS_DEVICE_OTG_HS_DTXFSTS5_INEPTFSAV_Msk (0xffffUL)      /*!< INEPTFSAV (Bitfield-Mask: 0xffff)                     */
/* ===================================================  OTG_HS_DIEPTSIZ1  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ1_XFRSIZ_Pos (0UL)             /*!< XFRSIZ (Bit 0)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ1_XFRSIZ_Msk (0x7ffffUL)       /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ1_PKTCNT_Pos (19UL)            /*!< PKTCNT (Bit 19)                                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ1_PKTCNT_Msk (0x1ff80000UL)    /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ1_MCNT_Pos (29UL)              /*!< MCNT (Bit 29)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ1_MCNT_Msk (0x60000000UL)      /*!< MCNT (Bitfield-Mask: 0x03)                            */
/* ===================================================  OTG_HS_DIEPTSIZ2  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ2_XFRSIZ_Pos (0UL)             /*!< XFRSIZ (Bit 0)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ2_XFRSIZ_Msk (0x7ffffUL)       /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ2_PKTCNT_Pos (19UL)            /*!< PKTCNT (Bit 19)                                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ2_PKTCNT_Msk (0x1ff80000UL)    /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ2_MCNT_Pos (29UL)              /*!< MCNT (Bit 29)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ2_MCNT_Msk (0x60000000UL)      /*!< MCNT (Bitfield-Mask: 0x03)                            */
/* ===================================================  OTG_HS_DIEPTSIZ3  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ3_XFRSIZ_Pos (0UL)             /*!< XFRSIZ (Bit 0)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ3_XFRSIZ_Msk (0x7ffffUL)       /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ3_PKTCNT_Pos (19UL)            /*!< PKTCNT (Bit 19)                                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ3_PKTCNT_Msk (0x1ff80000UL)    /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ3_MCNT_Pos (29UL)              /*!< MCNT (Bit 29)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ3_MCNT_Msk (0x60000000UL)      /*!< MCNT (Bitfield-Mask: 0x03)                            */
/* ===================================================  OTG_HS_DIEPTSIZ4  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ4_XFRSIZ_Pos (0UL)             /*!< XFRSIZ (Bit 0)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ4_XFRSIZ_Msk (0x7ffffUL)       /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ4_PKTCNT_Pos (19UL)            /*!< PKTCNT (Bit 19)                                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ4_PKTCNT_Msk (0x1ff80000UL)    /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ4_MCNT_Pos (29UL)              /*!< MCNT (Bit 29)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ4_MCNT_Msk (0x60000000UL)      /*!< MCNT (Bitfield-Mask: 0x03)                            */
/* ===================================================  OTG_HS_DIEPTSIZ5  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ5_XFRSIZ_Pos (0UL)             /*!< XFRSIZ (Bit 0)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ5_XFRSIZ_Msk (0x7ffffUL)       /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ5_PKTCNT_Pos (19UL)            /*!< PKTCNT (Bit 19)                                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ5_PKTCNT_Msk (0x1ff80000UL)    /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ5_MCNT_Pos (29UL)              /*!< MCNT (Bit 29)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ5_MCNT_Msk (0x60000000UL)      /*!< MCNT (Bitfield-Mask: 0x03)                            */
/* ====================================================  OTG_HS_DOEPCTL0  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL0_MPSIZ_Pos (0UL)               /*!< MPSIZ (Bit 0)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL0_MPSIZ_Msk (0x3UL)             /*!< MPSIZ (Bitfield-Mask: 0x03)                           */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL0_USBAEP_Pos (15UL)             /*!< USBAEP (Bit 15)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL0_USBAEP_Msk (0x8000UL)         /*!< USBAEP (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL0_NAKSTS_Pos (17UL)             /*!< NAKSTS (Bit 17)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL0_NAKSTS_Msk (0x20000UL)        /*!< NAKSTS (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL0_EPTYP_Pos (18UL)              /*!< EPTYP (Bit 18)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL0_EPTYP_Msk (0xc0000UL)         /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL0_SNPM_Pos (20UL)               /*!< SNPM (Bit 20)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL0_SNPM_Msk (0x100000UL)         /*!< SNPM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL0_Stall_Pos (21UL)              /*!< Stall (Bit 21)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL0_Stall_Msk (0x200000UL)        /*!< Stall (Bitfield-Mask: 0x01)                           */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL0_CNAK_Pos (26UL)               /*!< CNAK (Bit 26)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL0_CNAK_Msk (0x4000000UL)        /*!< CNAK (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL0_SNAK_Pos (27UL)               /*!< SNAK (Bit 27)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL0_SNAK_Msk (0x8000000UL)        /*!< SNAK (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL0_EPDIS_Pos (30UL)              /*!< EPDIS (Bit 30)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL0_EPDIS_Msk (0x40000000UL)      /*!< EPDIS (Bitfield-Mask: 0x01)                           */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL0_EPENA_Pos (31UL)              /*!< EPENA (Bit 31)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL0_EPENA_Msk (0x80000000UL)      /*!< EPENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_HS_DOEPCTL1  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL1_MPSIZ_Pos (0UL)               /*!< MPSIZ (Bit 0)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL1_MPSIZ_Msk (0x7ffUL)           /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL1_USBAEP_Pos (15UL)             /*!< USBAEP (Bit 15)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL1_USBAEP_Msk (0x8000UL)         /*!< USBAEP (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL1_EONUM_DPID_Pos (16UL)         /*!< EONUM_DPID (Bit 16)                                   */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL1_EONUM_DPID_Msk (0x10000UL)    /*!< EONUM_DPID (Bitfield-Mask: 0x01)                      */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL1_NAKSTS_Pos (17UL)             /*!< NAKSTS (Bit 17)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL1_NAKSTS_Msk (0x20000UL)        /*!< NAKSTS (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL1_EPTYP_Pos (18UL)              /*!< EPTYP (Bit 18)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL1_EPTYP_Msk (0xc0000UL)         /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL1_SNPM_Pos (20UL)               /*!< SNPM (Bit 20)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL1_SNPM_Msk (0x100000UL)         /*!< SNPM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL1_Stall_Pos (21UL)              /*!< Stall (Bit 21)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL1_Stall_Msk (0x200000UL)        /*!< Stall (Bitfield-Mask: 0x01)                           */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL1_CNAK_Pos (26UL)               /*!< CNAK (Bit 26)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL1_CNAK_Msk (0x4000000UL)        /*!< CNAK (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL1_SNAK_Pos (27UL)               /*!< SNAK (Bit 27)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL1_SNAK_Msk (0x8000000UL)        /*!< SNAK (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL1_SD0PID_SEVNFRM_Pos (28UL)     /*!< SD0PID_SEVNFRM (Bit 28)                               */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL1_SD0PID_SEVNFRM_Msk (0x10000000UL) /*!< SD0PID_SEVNFRM (Bitfield-Mask: 0x01)              */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL1_SODDFRM_Pos (29UL)            /*!< SODDFRM (Bit 29)                                      */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL1_SODDFRM_Msk (0x20000000UL)    /*!< SODDFRM (Bitfield-Mask: 0x01)                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL1_EPDIS_Pos (30UL)              /*!< EPDIS (Bit 30)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL1_EPDIS_Msk (0x40000000UL)      /*!< EPDIS (Bitfield-Mask: 0x01)                           */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL1_EPENA_Pos (31UL)              /*!< EPENA (Bit 31)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL1_EPENA_Msk (0x80000000UL)      /*!< EPENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_HS_DOEPCTL2  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL2_MPSIZ_Pos (0UL)               /*!< MPSIZ (Bit 0)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL2_MPSIZ_Msk (0x7ffUL)           /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL2_USBAEP_Pos (15UL)             /*!< USBAEP (Bit 15)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL2_USBAEP_Msk (0x8000UL)         /*!< USBAEP (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL2_EONUM_DPID_Pos (16UL)         /*!< EONUM_DPID (Bit 16)                                   */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL2_EONUM_DPID_Msk (0x10000UL)    /*!< EONUM_DPID (Bitfield-Mask: 0x01)                      */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL2_NAKSTS_Pos (17UL)             /*!< NAKSTS (Bit 17)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL2_NAKSTS_Msk (0x20000UL)        /*!< NAKSTS (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL2_EPTYP_Pos (18UL)              /*!< EPTYP (Bit 18)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL2_EPTYP_Msk (0xc0000UL)         /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL2_SNPM_Pos (20UL)               /*!< SNPM (Bit 20)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL2_SNPM_Msk (0x100000UL)         /*!< SNPM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL2_Stall_Pos (21UL)              /*!< Stall (Bit 21)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL2_Stall_Msk (0x200000UL)        /*!< Stall (Bitfield-Mask: 0x01)                           */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL2_CNAK_Pos (26UL)               /*!< CNAK (Bit 26)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL2_CNAK_Msk (0x4000000UL)        /*!< CNAK (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL2_SNAK_Pos (27UL)               /*!< SNAK (Bit 27)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL2_SNAK_Msk (0x8000000UL)        /*!< SNAK (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL2_SD0PID_SEVNFRM_Pos (28UL)     /*!< SD0PID_SEVNFRM (Bit 28)                               */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL2_SD0PID_SEVNFRM_Msk (0x10000000UL) /*!< SD0PID_SEVNFRM (Bitfield-Mask: 0x01)              */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL2_SODDFRM_Pos (29UL)            /*!< SODDFRM (Bit 29)                                      */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL2_SODDFRM_Msk (0x20000000UL)    /*!< SODDFRM (Bitfield-Mask: 0x01)                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL2_EPDIS_Pos (30UL)              /*!< EPDIS (Bit 30)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL2_EPDIS_Msk (0x40000000UL)      /*!< EPDIS (Bitfield-Mask: 0x01)                           */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL2_EPENA_Pos (31UL)              /*!< EPENA (Bit 31)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL2_EPENA_Msk (0x80000000UL)      /*!< EPENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_HS_DOEPCTL3  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL3_MPSIZ_Pos (0UL)               /*!< MPSIZ (Bit 0)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL3_MPSIZ_Msk (0x7ffUL)           /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL3_USBAEP_Pos (15UL)             /*!< USBAEP (Bit 15)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL3_USBAEP_Msk (0x8000UL)         /*!< USBAEP (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL3_EONUM_DPID_Pos (16UL)         /*!< EONUM_DPID (Bit 16)                                   */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL3_EONUM_DPID_Msk (0x10000UL)    /*!< EONUM_DPID (Bitfield-Mask: 0x01)                      */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL3_NAKSTS_Pos (17UL)             /*!< NAKSTS (Bit 17)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL3_NAKSTS_Msk (0x20000UL)        /*!< NAKSTS (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL3_EPTYP_Pos (18UL)              /*!< EPTYP (Bit 18)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL3_EPTYP_Msk (0xc0000UL)         /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL3_SNPM_Pos (20UL)               /*!< SNPM (Bit 20)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL3_SNPM_Msk (0x100000UL)         /*!< SNPM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL3_Stall_Pos (21UL)              /*!< Stall (Bit 21)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL3_Stall_Msk (0x200000UL)        /*!< Stall (Bitfield-Mask: 0x01)                           */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL3_CNAK_Pos (26UL)               /*!< CNAK (Bit 26)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL3_CNAK_Msk (0x4000000UL)        /*!< CNAK (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL3_SNAK_Pos (27UL)               /*!< SNAK (Bit 27)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL3_SNAK_Msk (0x8000000UL)        /*!< SNAK (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL3_SD0PID_SEVNFRM_Pos (28UL)     /*!< SD0PID_SEVNFRM (Bit 28)                               */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL3_SD0PID_SEVNFRM_Msk (0x10000000UL) /*!< SD0PID_SEVNFRM (Bitfield-Mask: 0x01)              */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL3_SODDFRM_Pos (29UL)            /*!< SODDFRM (Bit 29)                                      */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL3_SODDFRM_Msk (0x20000000UL)    /*!< SODDFRM (Bitfield-Mask: 0x01)                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL3_EPDIS_Pos (30UL)              /*!< EPDIS (Bit 30)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL3_EPDIS_Msk (0x40000000UL)      /*!< EPDIS (Bitfield-Mask: 0x01)                           */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL3_EPENA_Pos (31UL)              /*!< EPENA (Bit 31)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL3_EPENA_Msk (0x80000000UL)      /*!< EPENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_HS_DOEPINT0  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT0_XFRC_Pos (0UL)                /*!< XFRC (Bit 0)                                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT0_XFRC_Msk (0x1UL)              /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT0_EPDISD_Pos (1UL)              /*!< EPDISD (Bit 1)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT0_EPDISD_Msk (0x2UL)            /*!< EPDISD (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT0_STUP_Pos (3UL)                /*!< STUP (Bit 3)                                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT0_STUP_Msk (0x8UL)              /*!< STUP (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT0_OTEPDIS_Pos (4UL)             /*!< OTEPDIS (Bit 4)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT0_OTEPDIS_Msk (0x10UL)          /*!< OTEPDIS (Bitfield-Mask: 0x01)                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT0_B2BSTUP_Pos (6UL)             /*!< B2BSTUP (Bit 6)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT0_B2BSTUP_Msk (0x40UL)          /*!< B2BSTUP (Bitfield-Mask: 0x01)                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT0_NYET_Pos (14UL)               /*!< NYET (Bit 14)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT0_NYET_Msk (0x4000UL)           /*!< NYET (Bitfield-Mask: 0x01)                            */
/* ====================================================  OTG_HS_DOEPINT1  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT1_XFRC_Pos (0UL)                /*!< XFRC (Bit 0)                                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT1_XFRC_Msk (0x1UL)              /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT1_EPDISD_Pos (1UL)              /*!< EPDISD (Bit 1)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT1_EPDISD_Msk (0x2UL)            /*!< EPDISD (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT1_STUP_Pos (3UL)                /*!< STUP (Bit 3)                                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT1_STUP_Msk (0x8UL)              /*!< STUP (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT1_OTEPDIS_Pos (4UL)             /*!< OTEPDIS (Bit 4)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT1_OTEPDIS_Msk (0x10UL)          /*!< OTEPDIS (Bitfield-Mask: 0x01)                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT1_B2BSTUP_Pos (6UL)             /*!< B2BSTUP (Bit 6)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT1_B2BSTUP_Msk (0x40UL)          /*!< B2BSTUP (Bitfield-Mask: 0x01)                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT1_NYET_Pos (14UL)               /*!< NYET (Bit 14)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT1_NYET_Msk (0x4000UL)           /*!< NYET (Bitfield-Mask: 0x01)                            */
/* ====================================================  OTG_HS_DOEPINT2  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT2_XFRC_Pos (0UL)                /*!< XFRC (Bit 0)                                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT2_XFRC_Msk (0x1UL)              /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT2_EPDISD_Pos (1UL)              /*!< EPDISD (Bit 1)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT2_EPDISD_Msk (0x2UL)            /*!< EPDISD (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT2_STUP_Pos (3UL)                /*!< STUP (Bit 3)                                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT2_STUP_Msk (0x8UL)              /*!< STUP (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT2_OTEPDIS_Pos (4UL)             /*!< OTEPDIS (Bit 4)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT2_OTEPDIS_Msk (0x10UL)          /*!< OTEPDIS (Bitfield-Mask: 0x01)                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT2_B2BSTUP_Pos (6UL)             /*!< B2BSTUP (Bit 6)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT2_B2BSTUP_Msk (0x40UL)          /*!< B2BSTUP (Bitfield-Mask: 0x01)                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT2_NYET_Pos (14UL)               /*!< NYET (Bit 14)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT2_NYET_Msk (0x4000UL)           /*!< NYET (Bitfield-Mask: 0x01)                            */
/* ====================================================  OTG_HS_DOEPINT3  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT3_XFRC_Pos (0UL)                /*!< XFRC (Bit 0)                                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT3_XFRC_Msk (0x1UL)              /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT3_EPDISD_Pos (1UL)              /*!< EPDISD (Bit 1)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT3_EPDISD_Msk (0x2UL)            /*!< EPDISD (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT3_STUP_Pos (3UL)                /*!< STUP (Bit 3)                                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT3_STUP_Msk (0x8UL)              /*!< STUP (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT3_OTEPDIS_Pos (4UL)             /*!< OTEPDIS (Bit 4)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT3_OTEPDIS_Msk (0x10UL)          /*!< OTEPDIS (Bitfield-Mask: 0x01)                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT3_B2BSTUP_Pos (6UL)             /*!< B2BSTUP (Bit 6)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT3_B2BSTUP_Msk (0x40UL)          /*!< B2BSTUP (Bitfield-Mask: 0x01)                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT3_NYET_Pos (14UL)               /*!< NYET (Bit 14)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT3_NYET_Msk (0x4000UL)           /*!< NYET (Bitfield-Mask: 0x01)                            */
/* ====================================================  OTG_HS_DOEPINT4  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT4_XFRC_Pos (0UL)                /*!< XFRC (Bit 0)                                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT4_XFRC_Msk (0x1UL)              /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT4_EPDISD_Pos (1UL)              /*!< EPDISD (Bit 1)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT4_EPDISD_Msk (0x2UL)            /*!< EPDISD (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT4_STUP_Pos (3UL)                /*!< STUP (Bit 3)                                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT4_STUP_Msk (0x8UL)              /*!< STUP (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT4_OTEPDIS_Pos (4UL)             /*!< OTEPDIS (Bit 4)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT4_OTEPDIS_Msk (0x10UL)          /*!< OTEPDIS (Bitfield-Mask: 0x01)                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT4_B2BSTUP_Pos (6UL)             /*!< B2BSTUP (Bit 6)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT4_B2BSTUP_Msk (0x40UL)          /*!< B2BSTUP (Bitfield-Mask: 0x01)                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT4_NYET_Pos (14UL)               /*!< NYET (Bit 14)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT4_NYET_Msk (0x4000UL)           /*!< NYET (Bitfield-Mask: 0x01)                            */
/* ====================================================  OTG_HS_DOEPINT5  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT5_XFRC_Pos (0UL)                /*!< XFRC (Bit 0)                                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT5_XFRC_Msk (0x1UL)              /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT5_EPDISD_Pos (1UL)              /*!< EPDISD (Bit 1)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT5_EPDISD_Msk (0x2UL)            /*!< EPDISD (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT5_STUP_Pos (3UL)                /*!< STUP (Bit 3)                                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT5_STUP_Msk (0x8UL)              /*!< STUP (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT5_OTEPDIS_Pos (4UL)             /*!< OTEPDIS (Bit 4)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT5_OTEPDIS_Msk (0x10UL)          /*!< OTEPDIS (Bitfield-Mask: 0x01)                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT5_B2BSTUP_Pos (6UL)             /*!< B2BSTUP (Bit 6)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT5_B2BSTUP_Msk (0x40UL)          /*!< B2BSTUP (Bitfield-Mask: 0x01)                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT5_NYET_Pos (14UL)               /*!< NYET (Bit 14)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT5_NYET_Msk (0x4000UL)           /*!< NYET (Bitfield-Mask: 0x01)                            */
/* ====================================================  OTG_HS_DOEPINT6  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT6_XFRC_Pos (0UL)                /*!< XFRC (Bit 0)                                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT6_XFRC_Msk (0x1UL)              /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT6_EPDISD_Pos (1UL)              /*!< EPDISD (Bit 1)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT6_EPDISD_Msk (0x2UL)            /*!< EPDISD (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT6_STUP_Pos (3UL)                /*!< STUP (Bit 3)                                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT6_STUP_Msk (0x8UL)              /*!< STUP (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT6_OTEPDIS_Pos (4UL)             /*!< OTEPDIS (Bit 4)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT6_OTEPDIS_Msk (0x10UL)          /*!< OTEPDIS (Bitfield-Mask: 0x01)                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT6_B2BSTUP_Pos (6UL)             /*!< B2BSTUP (Bit 6)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT6_B2BSTUP_Msk (0x40UL)          /*!< B2BSTUP (Bitfield-Mask: 0x01)                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT6_NYET_Pos (14UL)               /*!< NYET (Bit 14)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT6_NYET_Msk (0x4000UL)           /*!< NYET (Bitfield-Mask: 0x01)                            */
/* ====================================================  OTG_HS_DOEPINT7  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT7_XFRC_Pos (0UL)                /*!< XFRC (Bit 0)                                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT7_XFRC_Msk (0x1UL)              /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT7_EPDISD_Pos (1UL)              /*!< EPDISD (Bit 1)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT7_EPDISD_Msk (0x2UL)            /*!< EPDISD (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT7_STUP_Pos (3UL)                /*!< STUP (Bit 3)                                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT7_STUP_Msk (0x8UL)              /*!< STUP (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT7_OTEPDIS_Pos (4UL)             /*!< OTEPDIS (Bit 4)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT7_OTEPDIS_Msk (0x10UL)          /*!< OTEPDIS (Bitfield-Mask: 0x01)                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT7_B2BSTUP_Pos (6UL)             /*!< B2BSTUP (Bit 6)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT7_B2BSTUP_Msk (0x40UL)          /*!< B2BSTUP (Bitfield-Mask: 0x01)                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT7_NYET_Pos (14UL)               /*!< NYET (Bit 14)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPINT7_NYET_Msk (0x4000UL)           /*!< NYET (Bitfield-Mask: 0x01)                            */
/* ===================================================  OTG_HS_DOEPTSIZ0  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ0_XFRSIZ_Pos (0UL)             /*!< XFRSIZ (Bit 0)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ0_XFRSIZ_Msk (0x7fUL)          /*!< XFRSIZ (Bitfield-Mask: 0x7f)                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ0_PKTCNT_Pos (19UL)            /*!< PKTCNT (Bit 19)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ0_PKTCNT_Msk (0x80000UL)       /*!< PKTCNT (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ0_STUPCNT_Pos (29UL)           /*!< STUPCNT (Bit 29)                                      */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ0_STUPCNT_Msk (0x60000000UL)   /*!< STUPCNT (Bitfield-Mask: 0x03)                         */
/* ===================================================  OTG_HS_DOEPTSIZ1  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ1_XFRSIZ_Pos (0UL)             /*!< XFRSIZ (Bit 0)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ1_XFRSIZ_Msk (0x7ffffUL)       /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ1_PKTCNT_Pos (19UL)            /*!< PKTCNT (Bit 19)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ1_PKTCNT_Msk (0x1ff80000UL)    /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ1_RXDPID_STUPCNT_Pos (29UL)    /*!< RXDPID_STUPCNT (Bit 29)                               */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ1_RXDPID_STUPCNT_Msk (0x60000000UL) /*!< RXDPID_STUPCNT (Bitfield-Mask: 0x03)             */
/* ===================================================  OTG_HS_DOEPTSIZ2  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ2_XFRSIZ_Pos (0UL)             /*!< XFRSIZ (Bit 0)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ2_XFRSIZ_Msk (0x7ffffUL)       /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ2_PKTCNT_Pos (19UL)            /*!< PKTCNT (Bit 19)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ2_PKTCNT_Msk (0x1ff80000UL)    /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ2_RXDPID_STUPCNT_Pos (29UL)    /*!< RXDPID_STUPCNT (Bit 29)                               */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ2_RXDPID_STUPCNT_Msk (0x60000000UL) /*!< RXDPID_STUPCNT (Bitfield-Mask: 0x03)             */
/* ===================================================  OTG_HS_DOEPTSIZ3  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ3_XFRSIZ_Pos (0UL)             /*!< XFRSIZ (Bit 0)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ3_XFRSIZ_Msk (0x7ffffUL)       /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ3_PKTCNT_Pos (19UL)            /*!< PKTCNT (Bit 19)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ3_PKTCNT_Msk (0x1ff80000UL)    /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ3_RXDPID_STUPCNT_Pos (29UL)    /*!< RXDPID_STUPCNT (Bit 29)                               */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ3_RXDPID_STUPCNT_Msk (0x60000000UL) /*!< RXDPID_STUPCNT (Bitfield-Mask: 0x03)             */
/* ===================================================  OTG_HS_DOEPTSIZ4  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ4_XFRSIZ_Pos (0UL)             /*!< XFRSIZ (Bit 0)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ4_XFRSIZ_Msk (0x7ffffUL)       /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ4_PKTCNT_Pos (19UL)            /*!< PKTCNT (Bit 19)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ4_PKTCNT_Msk (0x1ff80000UL)    /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ4_RXDPID_STUPCNT_Pos (29UL)    /*!< RXDPID_STUPCNT (Bit 29)                               */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ4_RXDPID_STUPCNT_Msk (0x60000000UL) /*!< RXDPID_STUPCNT (Bitfield-Mask: 0x03)             */
/* ===================================================  OTG_HS_DIEPTSIZ6  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ6_XFRSIZ_Pos (0UL)             /*!< XFRSIZ (Bit 0)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ6_XFRSIZ_Msk (0x7ffffUL)       /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ6_PKTCNT_Pos (19UL)            /*!< PKTCNT (Bit 19)                                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ6_PKTCNT_Msk (0x1ff80000UL)    /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ6_MCNT_Pos (29UL)              /*!< MCNT (Bit 29)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ6_MCNT_Msk (0x60000000UL)      /*!< MCNT (Bitfield-Mask: 0x03)                            */
/* ====================================================  OTG_HS_DTXFSTS6  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DTXFSTS6_INEPTFSAV_Pos (0UL)           /*!< INEPTFSAV (Bit 0)                                     */
#define OTG_HS_DEVICE_OTG_HS_DTXFSTS6_INEPTFSAV_Msk (0xffffUL)      /*!< INEPTFSAV (Bitfield-Mask: 0xffff)                     */
/* ===================================================  OTG_HS_DIEPTSIZ7  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ7_XFRSIZ_Pos (0UL)             /*!< XFRSIZ (Bit 0)                                        */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ7_XFRSIZ_Msk (0x7ffffUL)       /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ7_PKTCNT_Pos (19UL)            /*!< PKTCNT (Bit 19)                                       */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ7_PKTCNT_Msk (0x1ff80000UL)    /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ7_MCNT_Pos (29UL)              /*!< MCNT (Bit 29)                                         */
#define OTG_HS_DEVICE_OTG_HS_DIEPTSIZ7_MCNT_Msk (0x60000000UL)      /*!< MCNT (Bitfield-Mask: 0x03)                            */
/* ====================================================  OTG_HS_DTXFSTS7  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DTXFSTS7_INEPTFSAV_Pos (0UL)           /*!< INEPTFSAV (Bit 0)                                     */
#define OTG_HS_DEVICE_OTG_HS_DTXFSTS7_INEPTFSAV_Msk (0xffffUL)      /*!< INEPTFSAV (Bitfield-Mask: 0xffff)                     */
/* ====================================================  OTG_HS_DOEPCTL4  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL4_MPSIZ_Pos (0UL)               /*!< MPSIZ (Bit 0)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL4_MPSIZ_Msk (0x7ffUL)           /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL4_USBAEP_Pos (15UL)             /*!< USBAEP (Bit 15)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL4_USBAEP_Msk (0x8000UL)         /*!< USBAEP (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL4_EONUM_DPID_Pos (16UL)         /*!< EONUM_DPID (Bit 16)                                   */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL4_EONUM_DPID_Msk (0x10000UL)    /*!< EONUM_DPID (Bitfield-Mask: 0x01)                      */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL4_NAKSTS_Pos (17UL)             /*!< NAKSTS (Bit 17)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL4_NAKSTS_Msk (0x20000UL)        /*!< NAKSTS (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL4_EPTYP_Pos (18UL)              /*!< EPTYP (Bit 18)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL4_EPTYP_Msk (0xc0000UL)         /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL4_SNPM_Pos (20UL)               /*!< SNPM (Bit 20)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL4_SNPM_Msk (0x100000UL)         /*!< SNPM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL4_Stall_Pos (21UL)              /*!< Stall (Bit 21)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL4_Stall_Msk (0x200000UL)        /*!< Stall (Bitfield-Mask: 0x01)                           */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL4_CNAK_Pos (26UL)               /*!< CNAK (Bit 26)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL4_CNAK_Msk (0x4000000UL)        /*!< CNAK (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL4_SNAK_Pos (27UL)               /*!< SNAK (Bit 27)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL4_SNAK_Msk (0x8000000UL)        /*!< SNAK (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL4_SD0PID_SEVNFRM_Pos (28UL)     /*!< SD0PID_SEVNFRM (Bit 28)                               */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL4_SD0PID_SEVNFRM_Msk (0x10000000UL) /*!< SD0PID_SEVNFRM (Bitfield-Mask: 0x01)              */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL4_SODDFRM_Pos (29UL)            /*!< SODDFRM (Bit 29)                                      */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL4_SODDFRM_Msk (0x20000000UL)    /*!< SODDFRM (Bitfield-Mask: 0x01)                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL4_EPDIS_Pos (30UL)              /*!< EPDIS (Bit 30)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL4_EPDIS_Msk (0x40000000UL)      /*!< EPDIS (Bitfield-Mask: 0x01)                           */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL4_EPENA_Pos (31UL)              /*!< EPENA (Bit 31)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL4_EPENA_Msk (0x80000000UL)      /*!< EPENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_HS_DOEPCTL5  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL5_MPSIZ_Pos (0UL)               /*!< MPSIZ (Bit 0)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL5_MPSIZ_Msk (0x7ffUL)           /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL5_USBAEP_Pos (15UL)             /*!< USBAEP (Bit 15)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL5_USBAEP_Msk (0x8000UL)         /*!< USBAEP (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL5_EONUM_DPID_Pos (16UL)         /*!< EONUM_DPID (Bit 16)                                   */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL5_EONUM_DPID_Msk (0x10000UL)    /*!< EONUM_DPID (Bitfield-Mask: 0x01)                      */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL5_NAKSTS_Pos (17UL)             /*!< NAKSTS (Bit 17)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL5_NAKSTS_Msk (0x20000UL)        /*!< NAKSTS (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL5_EPTYP_Pos (18UL)              /*!< EPTYP (Bit 18)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL5_EPTYP_Msk (0xc0000UL)         /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL5_SNPM_Pos (20UL)               /*!< SNPM (Bit 20)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL5_SNPM_Msk (0x100000UL)         /*!< SNPM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL5_Stall_Pos (21UL)              /*!< Stall (Bit 21)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL5_Stall_Msk (0x200000UL)        /*!< Stall (Bitfield-Mask: 0x01)                           */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL5_CNAK_Pos (26UL)               /*!< CNAK (Bit 26)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL5_CNAK_Msk (0x4000000UL)        /*!< CNAK (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL5_SNAK_Pos (27UL)               /*!< SNAK (Bit 27)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL5_SNAK_Msk (0x8000000UL)        /*!< SNAK (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL5_SD0PID_SEVNFRM_Pos (28UL)     /*!< SD0PID_SEVNFRM (Bit 28)                               */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL5_SD0PID_SEVNFRM_Msk (0x10000000UL) /*!< SD0PID_SEVNFRM (Bitfield-Mask: 0x01)              */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL5_SODDFRM_Pos (29UL)            /*!< SODDFRM (Bit 29)                                      */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL5_SODDFRM_Msk (0x20000000UL)    /*!< SODDFRM (Bitfield-Mask: 0x01)                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL5_EPDIS_Pos (30UL)              /*!< EPDIS (Bit 30)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL5_EPDIS_Msk (0x40000000UL)      /*!< EPDIS (Bitfield-Mask: 0x01)                           */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL5_EPENA_Pos (31UL)              /*!< EPENA (Bit 31)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL5_EPENA_Msk (0x80000000UL)      /*!< EPENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_HS_DOEPCTL6  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL6_MPSIZ_Pos (0UL)               /*!< MPSIZ (Bit 0)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL6_MPSIZ_Msk (0x7ffUL)           /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL6_USBAEP_Pos (15UL)             /*!< USBAEP (Bit 15)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL6_USBAEP_Msk (0x8000UL)         /*!< USBAEP (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL6_EONUM_DPID_Pos (16UL)         /*!< EONUM_DPID (Bit 16)                                   */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL6_EONUM_DPID_Msk (0x10000UL)    /*!< EONUM_DPID (Bitfield-Mask: 0x01)                      */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL6_NAKSTS_Pos (17UL)             /*!< NAKSTS (Bit 17)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL6_NAKSTS_Msk (0x20000UL)        /*!< NAKSTS (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL6_EPTYP_Pos (18UL)              /*!< EPTYP (Bit 18)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL6_EPTYP_Msk (0xc0000UL)         /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL6_SNPM_Pos (20UL)               /*!< SNPM (Bit 20)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL6_SNPM_Msk (0x100000UL)         /*!< SNPM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL6_Stall_Pos (21UL)              /*!< Stall (Bit 21)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL6_Stall_Msk (0x200000UL)        /*!< Stall (Bitfield-Mask: 0x01)                           */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL6_CNAK_Pos (26UL)               /*!< CNAK (Bit 26)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL6_CNAK_Msk (0x4000000UL)        /*!< CNAK (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL6_SNAK_Pos (27UL)               /*!< SNAK (Bit 27)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL6_SNAK_Msk (0x8000000UL)        /*!< SNAK (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL6_SD0PID_SEVNFRM_Pos (28UL)     /*!< SD0PID_SEVNFRM (Bit 28)                               */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL6_SD0PID_SEVNFRM_Msk (0x10000000UL) /*!< SD0PID_SEVNFRM (Bitfield-Mask: 0x01)              */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL6_SODDFRM_Pos (29UL)            /*!< SODDFRM (Bit 29)                                      */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL6_SODDFRM_Msk (0x20000000UL)    /*!< SODDFRM (Bitfield-Mask: 0x01)                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL6_EPDIS_Pos (30UL)              /*!< EPDIS (Bit 30)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL6_EPDIS_Msk (0x40000000UL)      /*!< EPDIS (Bitfield-Mask: 0x01)                           */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL6_EPENA_Pos (31UL)              /*!< EPENA (Bit 31)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL6_EPENA_Msk (0x80000000UL)      /*!< EPENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_HS_DOEPCTL7  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL7_MPSIZ_Pos (0UL)               /*!< MPSIZ (Bit 0)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL7_MPSIZ_Msk (0x7ffUL)           /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL7_USBAEP_Pos (15UL)             /*!< USBAEP (Bit 15)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL7_USBAEP_Msk (0x8000UL)         /*!< USBAEP (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL7_EONUM_DPID_Pos (16UL)         /*!< EONUM_DPID (Bit 16)                                   */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL7_EONUM_DPID_Msk (0x10000UL)    /*!< EONUM_DPID (Bitfield-Mask: 0x01)                      */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL7_NAKSTS_Pos (17UL)             /*!< NAKSTS (Bit 17)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL7_NAKSTS_Msk (0x20000UL)        /*!< NAKSTS (Bitfield-Mask: 0x01)                          */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL7_EPTYP_Pos (18UL)              /*!< EPTYP (Bit 18)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL7_EPTYP_Msk (0xc0000UL)         /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL7_SNPM_Pos (20UL)               /*!< SNPM (Bit 20)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL7_SNPM_Msk (0x100000UL)         /*!< SNPM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL7_Stall_Pos (21UL)              /*!< Stall (Bit 21)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL7_Stall_Msk (0x200000UL)        /*!< Stall (Bitfield-Mask: 0x01)                           */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL7_CNAK_Pos (26UL)               /*!< CNAK (Bit 26)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL7_CNAK_Msk (0x4000000UL)        /*!< CNAK (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL7_SNAK_Pos (27UL)               /*!< SNAK (Bit 27)                                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL7_SNAK_Msk (0x8000000UL)        /*!< SNAK (Bitfield-Mask: 0x01)                            */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL7_SD0PID_SEVNFRM_Pos (28UL)     /*!< SD0PID_SEVNFRM (Bit 28)                               */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL7_SD0PID_SEVNFRM_Msk (0x10000000UL) /*!< SD0PID_SEVNFRM (Bitfield-Mask: 0x01)              */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL7_SODDFRM_Pos (29UL)            /*!< SODDFRM (Bit 29)                                      */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL7_SODDFRM_Msk (0x20000000UL)    /*!< SODDFRM (Bitfield-Mask: 0x01)                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL7_EPDIS_Pos (30UL)              /*!< EPDIS (Bit 30)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL7_EPDIS_Msk (0x40000000UL)      /*!< EPDIS (Bitfield-Mask: 0x01)                           */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL7_EPENA_Pos (31UL)              /*!< EPENA (Bit 31)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPCTL7_EPENA_Msk (0x80000000UL)      /*!< EPENA (Bitfield-Mask: 0x01)                           */
/* ===================================================  OTG_HS_DOEPTSIZ5  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ5_XFRSIZ_Pos (0UL)             /*!< XFRSIZ (Bit 0)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ5_XFRSIZ_Msk (0x7ffffUL)       /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ5_PKTCNT_Pos (19UL)            /*!< PKTCNT (Bit 19)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ5_PKTCNT_Msk (0x1ff80000UL)    /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ5_RXDPID_STUPCNT_Pos (29UL)    /*!< RXDPID_STUPCNT (Bit 29)                               */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ5_RXDPID_STUPCNT_Msk (0x60000000UL) /*!< RXDPID_STUPCNT (Bitfield-Mask: 0x03)             */
/* ===================================================  OTG_HS_DOEPTSIZ6  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ6_XFRSIZ_Pos (0UL)             /*!< XFRSIZ (Bit 0)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ6_XFRSIZ_Msk (0x7ffffUL)       /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ6_PKTCNT_Pos (19UL)            /*!< PKTCNT (Bit 19)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ6_PKTCNT_Msk (0x1ff80000UL)    /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ6_RXDPID_STUPCNT_Pos (29UL)    /*!< RXDPID_STUPCNT (Bit 29)                               */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ6_RXDPID_STUPCNT_Msk (0x60000000UL) /*!< RXDPID_STUPCNT (Bitfield-Mask: 0x03)             */
/* ===================================================  OTG_HS_DOEPTSIZ7  ==================================================== */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ7_XFRSIZ_Pos (0UL)             /*!< XFRSIZ (Bit 0)                                        */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ7_XFRSIZ_Msk (0x7ffffUL)       /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ7_PKTCNT_Pos (19UL)            /*!< PKTCNT (Bit 19)                                       */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ7_PKTCNT_Msk (0x1ff80000UL)    /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ7_RXDPID_STUPCNT_Pos (29UL)    /*!< RXDPID_STUPCNT (Bit 29)                               */
#define OTG_HS_DEVICE_OTG_HS_DOEPTSIZ7_RXDPID_STUPCNT_Msk (0x60000000UL) /*!< RXDPID_STUPCNT (Bitfield-Mask: 0x03)             */


/* =========================================================================================================================== */
/* ================                                        OTG_HS_HOST                                        ================ */
/* =========================================================================================================================== */

/* ======================================================  OTG_HS_HCFG  ====================================================== */
#define OTG_HS_HOST_OTG_HS_HCFG_FSLSPCS_Pos (0UL)                   /*!< FSLSPCS (Bit 0)                                       */
#define OTG_HS_HOST_OTG_HS_HCFG_FSLSPCS_Msk (0x3UL)                 /*!< FSLSPCS (Bitfield-Mask: 0x03)                         */
#define OTG_HS_HOST_OTG_HS_HCFG_FSLSS_Pos (2UL)                     /*!< FSLSS (Bit 2)                                         */
#define OTG_HS_HOST_OTG_HS_HCFG_FSLSS_Msk (0x4UL)                   /*!< FSLSS (Bitfield-Mask: 0x01)                           */
/* ======================================================  OTG_HS_HFIR  ====================================================== */
#define OTG_HS_HOST_OTG_HS_HFIR_FRIVL_Pos (0UL)                     /*!< FRIVL (Bit 0)                                         */
#define OTG_HS_HOST_OTG_HS_HFIR_FRIVL_Msk (0xffffUL)                /*!< FRIVL (Bitfield-Mask: 0xffff)                         */
/* =====================================================  OTG_HS_HFNUM  ====================================================== */
#define OTG_HS_HOST_OTG_HS_HFNUM_FRNUM_Pos (0UL)                    /*!< FRNUM (Bit 0)                                         */
#define OTG_HS_HOST_OTG_HS_HFNUM_FRNUM_Msk (0xffffUL)               /*!< FRNUM (Bitfield-Mask: 0xffff)                         */
#define OTG_HS_HOST_OTG_HS_HFNUM_FTREM_Pos (16UL)                   /*!< FTREM (Bit 16)                                        */
#define OTG_HS_HOST_OTG_HS_HFNUM_FTREM_Msk (0xffff0000UL)           /*!< FTREM (Bitfield-Mask: 0xffff)                         */
/* ====================================================  OTG_HS_HPTXSTS  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HPTXSTS_PTXFSAVL_Pos (0UL)               /*!< PTXFSAVL (Bit 0)                                      */
#define OTG_HS_HOST_OTG_HS_HPTXSTS_PTXFSAVL_Msk (0xffffUL)          /*!< PTXFSAVL (Bitfield-Mask: 0xffff)                      */
#define OTG_HS_HOST_OTG_HS_HPTXSTS_PTXQSAV_Pos (16UL)               /*!< PTXQSAV (Bit 16)                                      */
#define OTG_HS_HOST_OTG_HS_HPTXSTS_PTXQSAV_Msk (0xff0000UL)         /*!< PTXQSAV (Bitfield-Mask: 0xff)                         */
#define OTG_HS_HOST_OTG_HS_HPTXSTS_PTXQTOP_Pos (24UL)               /*!< PTXQTOP (Bit 24)                                      */
#define OTG_HS_HOST_OTG_HS_HPTXSTS_PTXQTOP_Msk (0xff000000UL)       /*!< PTXQTOP (Bitfield-Mask: 0xff)                         */
/* =====================================================  OTG_HS_HAINT  ====================================================== */
#define OTG_HS_HOST_OTG_HS_HAINT_HAINT_Pos (0UL)                    /*!< HAINT (Bit 0)                                         */
#define OTG_HS_HOST_OTG_HS_HAINT_HAINT_Msk (0xffffUL)               /*!< HAINT (Bitfield-Mask: 0xffff)                         */
/* ====================================================  OTG_HS_HAINTMSK  ==================================================== */
#define OTG_HS_HOST_OTG_HS_HAINTMSK_HAINTM_Pos (0UL)                /*!< HAINTM (Bit 0)                                        */
#define OTG_HS_HOST_OTG_HS_HAINTMSK_HAINTM_Msk (0xffffUL)           /*!< HAINTM (Bitfield-Mask: 0xffff)                        */
/* ======================================================  OTG_HS_HPRT  ====================================================== */
#define OTG_HS_HOST_OTG_HS_HPRT_PCSTS_Pos (0UL)                     /*!< PCSTS (Bit 0)                                         */
#define OTG_HS_HOST_OTG_HS_HPRT_PCSTS_Msk (0x1UL)                   /*!< PCSTS (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HPRT_PCDET_Pos (1UL)                     /*!< PCDET (Bit 1)                                         */
#define OTG_HS_HOST_OTG_HS_HPRT_PCDET_Msk (0x2UL)                   /*!< PCDET (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HPRT_PENA_Pos  (2UL)                     /*!< PENA (Bit 2)                                          */
#define OTG_HS_HOST_OTG_HS_HPRT_PENA_Msk  (0x4UL)                   /*!< PENA (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HPRT_PENCHNG_Pos (3UL)                   /*!< PENCHNG (Bit 3)                                       */
#define OTG_HS_HOST_OTG_HS_HPRT_PENCHNG_Msk (0x8UL)                 /*!< PENCHNG (Bitfield-Mask: 0x01)                         */
#define OTG_HS_HOST_OTG_HS_HPRT_POCA_Pos  (4UL)                     /*!< POCA (Bit 4)                                          */
#define OTG_HS_HOST_OTG_HS_HPRT_POCA_Msk  (0x10UL)                  /*!< POCA (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HPRT_POCCHNG_Pos (5UL)                   /*!< POCCHNG (Bit 5)                                       */
#define OTG_HS_HOST_OTG_HS_HPRT_POCCHNG_Msk (0x20UL)                /*!< POCCHNG (Bitfield-Mask: 0x01)                         */
#define OTG_HS_HOST_OTG_HS_HPRT_PRES_Pos  (6UL)                     /*!< PRES (Bit 6)                                          */
#define OTG_HS_HOST_OTG_HS_HPRT_PRES_Msk  (0x40UL)                  /*!< PRES (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HPRT_PSUSP_Pos (7UL)                     /*!< PSUSP (Bit 7)                                         */
#define OTG_HS_HOST_OTG_HS_HPRT_PSUSP_Msk (0x80UL)                  /*!< PSUSP (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HPRT_PRST_Pos  (8UL)                     /*!< PRST (Bit 8)                                          */
#define OTG_HS_HOST_OTG_HS_HPRT_PRST_Msk  (0x100UL)                 /*!< PRST (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HPRT_PLSTS_Pos (10UL)                    /*!< PLSTS (Bit 10)                                        */
#define OTG_HS_HOST_OTG_HS_HPRT_PLSTS_Msk (0xc00UL)                 /*!< PLSTS (Bitfield-Mask: 0x03)                           */
#define OTG_HS_HOST_OTG_HS_HPRT_PPWR_Pos  (12UL)                    /*!< PPWR (Bit 12)                                         */
#define OTG_HS_HOST_OTG_HS_HPRT_PPWR_Msk  (0x1000UL)                /*!< PPWR (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HPRT_PTCTL_Pos (13UL)                    /*!< PTCTL (Bit 13)                                        */
#define OTG_HS_HOST_OTG_HS_HPRT_PTCTL_Msk (0x1e000UL)               /*!< PTCTL (Bitfield-Mask: 0x0f)                           */
#define OTG_HS_HOST_OTG_HS_HPRT_PSPD_Pos  (17UL)                    /*!< PSPD (Bit 17)                                         */
#define OTG_HS_HOST_OTG_HS_HPRT_PSPD_Msk  (0x60000UL)               /*!< PSPD (Bitfield-Mask: 0x03)                            */
/* ====================================================  OTG_HS_HCCHAR0  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCCHAR0_MPSIZ_Pos (0UL)                  /*!< MPSIZ (Bit 0)                                         */
#define OTG_HS_HOST_OTG_HS_HCCHAR0_MPSIZ_Msk (0x7ffUL)              /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR0_EPNUM_Pos (11UL)                 /*!< EPNUM (Bit 11)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR0_EPNUM_Msk (0x7800UL)             /*!< EPNUM (Bitfield-Mask: 0x0f)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR0_EPDIR_Pos (15UL)                 /*!< EPDIR (Bit 15)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR0_EPDIR_Msk (0x8000UL)             /*!< EPDIR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR0_LSDEV_Pos (17UL)                 /*!< LSDEV (Bit 17)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR0_LSDEV_Msk (0x20000UL)            /*!< LSDEV (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR0_EPTYP_Pos (18UL)                 /*!< EPTYP (Bit 18)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR0_EPTYP_Msk (0xc0000UL)            /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR0_MC_Pos (20UL)                    /*!< MC (Bit 20)                                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR0_MC_Msk (0x300000UL)              /*!< MC (Bitfield-Mask: 0x03)                              */
#define OTG_HS_HOST_OTG_HS_HCCHAR0_DAD_Pos (22UL)                   /*!< DAD (Bit 22)                                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR0_DAD_Msk (0x1fc00000UL)           /*!< DAD (Bitfield-Mask: 0x7f)                             */
#define OTG_HS_HOST_OTG_HS_HCCHAR0_ODDFRM_Pos (29UL)                /*!< ODDFRM (Bit 29)                                       */
#define OTG_HS_HOST_OTG_HS_HCCHAR0_ODDFRM_Msk (0x20000000UL)        /*!< ODDFRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR0_CHDIS_Pos (30UL)                 /*!< CHDIS (Bit 30)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR0_CHDIS_Msk (0x40000000UL)         /*!< CHDIS (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR0_CHENA_Pos (31UL)                 /*!< CHENA (Bit 31)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR0_CHENA_Msk (0x80000000UL)         /*!< CHENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_HS_HCCHAR1  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCCHAR1_MPSIZ_Pos (0UL)                  /*!< MPSIZ (Bit 0)                                         */
#define OTG_HS_HOST_OTG_HS_HCCHAR1_MPSIZ_Msk (0x7ffUL)              /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR1_EPNUM_Pos (11UL)                 /*!< EPNUM (Bit 11)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR1_EPNUM_Msk (0x7800UL)             /*!< EPNUM (Bitfield-Mask: 0x0f)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR1_EPDIR_Pos (15UL)                 /*!< EPDIR (Bit 15)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR1_EPDIR_Msk (0x8000UL)             /*!< EPDIR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR1_LSDEV_Pos (17UL)                 /*!< LSDEV (Bit 17)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR1_LSDEV_Msk (0x20000UL)            /*!< LSDEV (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR1_EPTYP_Pos (18UL)                 /*!< EPTYP (Bit 18)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR1_EPTYP_Msk (0xc0000UL)            /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR1_MC_Pos (20UL)                    /*!< MC (Bit 20)                                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR1_MC_Msk (0x300000UL)              /*!< MC (Bitfield-Mask: 0x03)                              */
#define OTG_HS_HOST_OTG_HS_HCCHAR1_DAD_Pos (22UL)                   /*!< DAD (Bit 22)                                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR1_DAD_Msk (0x1fc00000UL)           /*!< DAD (Bitfield-Mask: 0x7f)                             */
#define OTG_HS_HOST_OTG_HS_HCCHAR1_ODDFRM_Pos (29UL)                /*!< ODDFRM (Bit 29)                                       */
#define OTG_HS_HOST_OTG_HS_HCCHAR1_ODDFRM_Msk (0x20000000UL)        /*!< ODDFRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR1_CHDIS_Pos (30UL)                 /*!< CHDIS (Bit 30)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR1_CHDIS_Msk (0x40000000UL)         /*!< CHDIS (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR1_CHENA_Pos (31UL)                 /*!< CHENA (Bit 31)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR1_CHENA_Msk (0x80000000UL)         /*!< CHENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_HS_HCCHAR2  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCCHAR2_MPSIZ_Pos (0UL)                  /*!< MPSIZ (Bit 0)                                         */
#define OTG_HS_HOST_OTG_HS_HCCHAR2_MPSIZ_Msk (0x7ffUL)              /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR2_EPNUM_Pos (11UL)                 /*!< EPNUM (Bit 11)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR2_EPNUM_Msk (0x7800UL)             /*!< EPNUM (Bitfield-Mask: 0x0f)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR2_EPDIR_Pos (15UL)                 /*!< EPDIR (Bit 15)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR2_EPDIR_Msk (0x8000UL)             /*!< EPDIR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR2_LSDEV_Pos (17UL)                 /*!< LSDEV (Bit 17)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR2_LSDEV_Msk (0x20000UL)            /*!< LSDEV (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR2_EPTYP_Pos (18UL)                 /*!< EPTYP (Bit 18)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR2_EPTYP_Msk (0xc0000UL)            /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR2_MC_Pos (20UL)                    /*!< MC (Bit 20)                                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR2_MC_Msk (0x300000UL)              /*!< MC (Bitfield-Mask: 0x03)                              */
#define OTG_HS_HOST_OTG_HS_HCCHAR2_DAD_Pos (22UL)                   /*!< DAD (Bit 22)                                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR2_DAD_Msk (0x1fc00000UL)           /*!< DAD (Bitfield-Mask: 0x7f)                             */
#define OTG_HS_HOST_OTG_HS_HCCHAR2_ODDFRM_Pos (29UL)                /*!< ODDFRM (Bit 29)                                       */
#define OTG_HS_HOST_OTG_HS_HCCHAR2_ODDFRM_Msk (0x20000000UL)        /*!< ODDFRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR2_CHDIS_Pos (30UL)                 /*!< CHDIS (Bit 30)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR2_CHDIS_Msk (0x40000000UL)         /*!< CHDIS (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR2_CHENA_Pos (31UL)                 /*!< CHENA (Bit 31)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR2_CHENA_Msk (0x80000000UL)         /*!< CHENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_HS_HCCHAR3  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCCHAR3_MPSIZ_Pos (0UL)                  /*!< MPSIZ (Bit 0)                                         */
#define OTG_HS_HOST_OTG_HS_HCCHAR3_MPSIZ_Msk (0x7ffUL)              /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR3_EPNUM_Pos (11UL)                 /*!< EPNUM (Bit 11)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR3_EPNUM_Msk (0x7800UL)             /*!< EPNUM (Bitfield-Mask: 0x0f)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR3_EPDIR_Pos (15UL)                 /*!< EPDIR (Bit 15)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR3_EPDIR_Msk (0x8000UL)             /*!< EPDIR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR3_LSDEV_Pos (17UL)                 /*!< LSDEV (Bit 17)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR3_LSDEV_Msk (0x20000UL)            /*!< LSDEV (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR3_EPTYP_Pos (18UL)                 /*!< EPTYP (Bit 18)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR3_EPTYP_Msk (0xc0000UL)            /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR3_MC_Pos (20UL)                    /*!< MC (Bit 20)                                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR3_MC_Msk (0x300000UL)              /*!< MC (Bitfield-Mask: 0x03)                              */
#define OTG_HS_HOST_OTG_HS_HCCHAR3_DAD_Pos (22UL)                   /*!< DAD (Bit 22)                                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR3_DAD_Msk (0x1fc00000UL)           /*!< DAD (Bitfield-Mask: 0x7f)                             */
#define OTG_HS_HOST_OTG_HS_HCCHAR3_ODDFRM_Pos (29UL)                /*!< ODDFRM (Bit 29)                                       */
#define OTG_HS_HOST_OTG_HS_HCCHAR3_ODDFRM_Msk (0x20000000UL)        /*!< ODDFRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR3_CHDIS_Pos (30UL)                 /*!< CHDIS (Bit 30)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR3_CHDIS_Msk (0x40000000UL)         /*!< CHDIS (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR3_CHENA_Pos (31UL)                 /*!< CHENA (Bit 31)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR3_CHENA_Msk (0x80000000UL)         /*!< CHENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_HS_HCCHAR4  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCCHAR4_MPSIZ_Pos (0UL)                  /*!< MPSIZ (Bit 0)                                         */
#define OTG_HS_HOST_OTG_HS_HCCHAR4_MPSIZ_Msk (0x7ffUL)              /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR4_EPNUM_Pos (11UL)                 /*!< EPNUM (Bit 11)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR4_EPNUM_Msk (0x7800UL)             /*!< EPNUM (Bitfield-Mask: 0x0f)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR4_EPDIR_Pos (15UL)                 /*!< EPDIR (Bit 15)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR4_EPDIR_Msk (0x8000UL)             /*!< EPDIR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR4_LSDEV_Pos (17UL)                 /*!< LSDEV (Bit 17)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR4_LSDEV_Msk (0x20000UL)            /*!< LSDEV (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR4_EPTYP_Pos (18UL)                 /*!< EPTYP (Bit 18)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR4_EPTYP_Msk (0xc0000UL)            /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR4_MC_Pos (20UL)                    /*!< MC (Bit 20)                                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR4_MC_Msk (0x300000UL)              /*!< MC (Bitfield-Mask: 0x03)                              */
#define OTG_HS_HOST_OTG_HS_HCCHAR4_DAD_Pos (22UL)                   /*!< DAD (Bit 22)                                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR4_DAD_Msk (0x1fc00000UL)           /*!< DAD (Bitfield-Mask: 0x7f)                             */
#define OTG_HS_HOST_OTG_HS_HCCHAR4_ODDFRM_Pos (29UL)                /*!< ODDFRM (Bit 29)                                       */
#define OTG_HS_HOST_OTG_HS_HCCHAR4_ODDFRM_Msk (0x20000000UL)        /*!< ODDFRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR4_CHDIS_Pos (30UL)                 /*!< CHDIS (Bit 30)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR4_CHDIS_Msk (0x40000000UL)         /*!< CHDIS (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR4_CHENA_Pos (31UL)                 /*!< CHENA (Bit 31)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR4_CHENA_Msk (0x80000000UL)         /*!< CHENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_HS_HCCHAR5  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCCHAR5_MPSIZ_Pos (0UL)                  /*!< MPSIZ (Bit 0)                                         */
#define OTG_HS_HOST_OTG_HS_HCCHAR5_MPSIZ_Msk (0x7ffUL)              /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR5_EPNUM_Pos (11UL)                 /*!< EPNUM (Bit 11)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR5_EPNUM_Msk (0x7800UL)             /*!< EPNUM (Bitfield-Mask: 0x0f)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR5_EPDIR_Pos (15UL)                 /*!< EPDIR (Bit 15)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR5_EPDIR_Msk (0x8000UL)             /*!< EPDIR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR5_LSDEV_Pos (17UL)                 /*!< LSDEV (Bit 17)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR5_LSDEV_Msk (0x20000UL)            /*!< LSDEV (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR5_EPTYP_Pos (18UL)                 /*!< EPTYP (Bit 18)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR5_EPTYP_Msk (0xc0000UL)            /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR5_MC_Pos (20UL)                    /*!< MC (Bit 20)                                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR5_MC_Msk (0x300000UL)              /*!< MC (Bitfield-Mask: 0x03)                              */
#define OTG_HS_HOST_OTG_HS_HCCHAR5_DAD_Pos (22UL)                   /*!< DAD (Bit 22)                                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR5_DAD_Msk (0x1fc00000UL)           /*!< DAD (Bitfield-Mask: 0x7f)                             */
#define OTG_HS_HOST_OTG_HS_HCCHAR5_ODDFRM_Pos (29UL)                /*!< ODDFRM (Bit 29)                                       */
#define OTG_HS_HOST_OTG_HS_HCCHAR5_ODDFRM_Msk (0x20000000UL)        /*!< ODDFRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR5_CHDIS_Pos (30UL)                 /*!< CHDIS (Bit 30)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR5_CHDIS_Msk (0x40000000UL)         /*!< CHDIS (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR5_CHENA_Pos (31UL)                 /*!< CHENA (Bit 31)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR5_CHENA_Msk (0x80000000UL)         /*!< CHENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_HS_HCCHAR6  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCCHAR6_MPSIZ_Pos (0UL)                  /*!< MPSIZ (Bit 0)                                         */
#define OTG_HS_HOST_OTG_HS_HCCHAR6_MPSIZ_Msk (0x7ffUL)              /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR6_EPNUM_Pos (11UL)                 /*!< EPNUM (Bit 11)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR6_EPNUM_Msk (0x7800UL)             /*!< EPNUM (Bitfield-Mask: 0x0f)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR6_EPDIR_Pos (15UL)                 /*!< EPDIR (Bit 15)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR6_EPDIR_Msk (0x8000UL)             /*!< EPDIR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR6_LSDEV_Pos (17UL)                 /*!< LSDEV (Bit 17)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR6_LSDEV_Msk (0x20000UL)            /*!< LSDEV (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR6_EPTYP_Pos (18UL)                 /*!< EPTYP (Bit 18)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR6_EPTYP_Msk (0xc0000UL)            /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR6_MC_Pos (20UL)                    /*!< MC (Bit 20)                                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR6_MC_Msk (0x300000UL)              /*!< MC (Bitfield-Mask: 0x03)                              */
#define OTG_HS_HOST_OTG_HS_HCCHAR6_DAD_Pos (22UL)                   /*!< DAD (Bit 22)                                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR6_DAD_Msk (0x1fc00000UL)           /*!< DAD (Bitfield-Mask: 0x7f)                             */
#define OTG_HS_HOST_OTG_HS_HCCHAR6_ODDFRM_Pos (29UL)                /*!< ODDFRM (Bit 29)                                       */
#define OTG_HS_HOST_OTG_HS_HCCHAR6_ODDFRM_Msk (0x20000000UL)        /*!< ODDFRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR6_CHDIS_Pos (30UL)                 /*!< CHDIS (Bit 30)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR6_CHDIS_Msk (0x40000000UL)         /*!< CHDIS (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR6_CHENA_Pos (31UL)                 /*!< CHENA (Bit 31)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR6_CHENA_Msk (0x80000000UL)         /*!< CHENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_HS_HCCHAR7  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCCHAR7_MPSIZ_Pos (0UL)                  /*!< MPSIZ (Bit 0)                                         */
#define OTG_HS_HOST_OTG_HS_HCCHAR7_MPSIZ_Msk (0x7ffUL)              /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR7_EPNUM_Pos (11UL)                 /*!< EPNUM (Bit 11)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR7_EPNUM_Msk (0x7800UL)             /*!< EPNUM (Bitfield-Mask: 0x0f)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR7_EPDIR_Pos (15UL)                 /*!< EPDIR (Bit 15)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR7_EPDIR_Msk (0x8000UL)             /*!< EPDIR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR7_LSDEV_Pos (17UL)                 /*!< LSDEV (Bit 17)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR7_LSDEV_Msk (0x20000UL)            /*!< LSDEV (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR7_EPTYP_Pos (18UL)                 /*!< EPTYP (Bit 18)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR7_EPTYP_Msk (0xc0000UL)            /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR7_MC_Pos (20UL)                    /*!< MC (Bit 20)                                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR7_MC_Msk (0x300000UL)              /*!< MC (Bitfield-Mask: 0x03)                              */
#define OTG_HS_HOST_OTG_HS_HCCHAR7_DAD_Pos (22UL)                   /*!< DAD (Bit 22)                                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR7_DAD_Msk (0x1fc00000UL)           /*!< DAD (Bitfield-Mask: 0x7f)                             */
#define OTG_HS_HOST_OTG_HS_HCCHAR7_ODDFRM_Pos (29UL)                /*!< ODDFRM (Bit 29)                                       */
#define OTG_HS_HOST_OTG_HS_HCCHAR7_ODDFRM_Msk (0x20000000UL)        /*!< ODDFRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR7_CHDIS_Pos (30UL)                 /*!< CHDIS (Bit 30)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR7_CHDIS_Msk (0x40000000UL)         /*!< CHDIS (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR7_CHENA_Pos (31UL)                 /*!< CHENA (Bit 31)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR7_CHENA_Msk (0x80000000UL)         /*!< CHENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_HS_HCCHAR8  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCCHAR8_MPSIZ_Pos (0UL)                  /*!< MPSIZ (Bit 0)                                         */
#define OTG_HS_HOST_OTG_HS_HCCHAR8_MPSIZ_Msk (0x7ffUL)              /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR8_EPNUM_Pos (11UL)                 /*!< EPNUM (Bit 11)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR8_EPNUM_Msk (0x7800UL)             /*!< EPNUM (Bitfield-Mask: 0x0f)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR8_EPDIR_Pos (15UL)                 /*!< EPDIR (Bit 15)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR8_EPDIR_Msk (0x8000UL)             /*!< EPDIR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR8_LSDEV_Pos (17UL)                 /*!< LSDEV (Bit 17)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR8_LSDEV_Msk (0x20000UL)            /*!< LSDEV (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR8_EPTYP_Pos (18UL)                 /*!< EPTYP (Bit 18)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR8_EPTYP_Msk (0xc0000UL)            /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR8_MC_Pos (20UL)                    /*!< MC (Bit 20)                                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR8_MC_Msk (0x300000UL)              /*!< MC (Bitfield-Mask: 0x03)                              */
#define OTG_HS_HOST_OTG_HS_HCCHAR8_DAD_Pos (22UL)                   /*!< DAD (Bit 22)                                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR8_DAD_Msk (0x1fc00000UL)           /*!< DAD (Bitfield-Mask: 0x7f)                             */
#define OTG_HS_HOST_OTG_HS_HCCHAR8_ODDFRM_Pos (29UL)                /*!< ODDFRM (Bit 29)                                       */
#define OTG_HS_HOST_OTG_HS_HCCHAR8_ODDFRM_Msk (0x20000000UL)        /*!< ODDFRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR8_CHDIS_Pos (30UL)                 /*!< CHDIS (Bit 30)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR8_CHDIS_Msk (0x40000000UL)         /*!< CHDIS (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR8_CHENA_Pos (31UL)                 /*!< CHENA (Bit 31)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR8_CHENA_Msk (0x80000000UL)         /*!< CHENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_HS_HCCHAR9  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCCHAR9_MPSIZ_Pos (0UL)                  /*!< MPSIZ (Bit 0)                                         */
#define OTG_HS_HOST_OTG_HS_HCCHAR9_MPSIZ_Msk (0x7ffUL)              /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR9_EPNUM_Pos (11UL)                 /*!< EPNUM (Bit 11)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR9_EPNUM_Msk (0x7800UL)             /*!< EPNUM (Bitfield-Mask: 0x0f)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR9_EPDIR_Pos (15UL)                 /*!< EPDIR (Bit 15)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR9_EPDIR_Msk (0x8000UL)             /*!< EPDIR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR9_LSDEV_Pos (17UL)                 /*!< LSDEV (Bit 17)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR9_LSDEV_Msk (0x20000UL)            /*!< LSDEV (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR9_EPTYP_Pos (18UL)                 /*!< EPTYP (Bit 18)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR9_EPTYP_Msk (0xc0000UL)            /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR9_MC_Pos (20UL)                    /*!< MC (Bit 20)                                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR9_MC_Msk (0x300000UL)              /*!< MC (Bitfield-Mask: 0x03)                              */
#define OTG_HS_HOST_OTG_HS_HCCHAR9_DAD_Pos (22UL)                   /*!< DAD (Bit 22)                                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR9_DAD_Msk (0x1fc00000UL)           /*!< DAD (Bitfield-Mask: 0x7f)                             */
#define OTG_HS_HOST_OTG_HS_HCCHAR9_ODDFRM_Pos (29UL)                /*!< ODDFRM (Bit 29)                                       */
#define OTG_HS_HOST_OTG_HS_HCCHAR9_ODDFRM_Msk (0x20000000UL)        /*!< ODDFRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR9_CHDIS_Pos (30UL)                 /*!< CHDIS (Bit 30)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR9_CHDIS_Msk (0x40000000UL)         /*!< CHDIS (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR9_CHENA_Pos (31UL)                 /*!< CHENA (Bit 31)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR9_CHENA_Msk (0x80000000UL)         /*!< CHENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_HS_HCCHAR10  ==================================================== */
#define OTG_HS_HOST_OTG_HS_HCCHAR10_MPSIZ_Pos (0UL)                 /*!< MPSIZ (Bit 0)                                         */
#define OTG_HS_HOST_OTG_HS_HCCHAR10_MPSIZ_Msk (0x7ffUL)             /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR10_EPNUM_Pos (11UL)                /*!< EPNUM (Bit 11)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR10_EPNUM_Msk (0x7800UL)            /*!< EPNUM (Bitfield-Mask: 0x0f)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR10_EPDIR_Pos (15UL)                /*!< EPDIR (Bit 15)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR10_EPDIR_Msk (0x8000UL)            /*!< EPDIR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR10_LSDEV_Pos (17UL)                /*!< LSDEV (Bit 17)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR10_LSDEV_Msk (0x20000UL)           /*!< LSDEV (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR10_EPTYP_Pos (18UL)                /*!< EPTYP (Bit 18)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR10_EPTYP_Msk (0xc0000UL)           /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR10_MC_Pos (20UL)                   /*!< MC (Bit 20)                                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR10_MC_Msk (0x300000UL)             /*!< MC (Bitfield-Mask: 0x03)                              */
#define OTG_HS_HOST_OTG_HS_HCCHAR10_DAD_Pos (22UL)                  /*!< DAD (Bit 22)                                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR10_DAD_Msk (0x1fc00000UL)          /*!< DAD (Bitfield-Mask: 0x7f)                             */
#define OTG_HS_HOST_OTG_HS_HCCHAR10_ODDFRM_Pos (29UL)               /*!< ODDFRM (Bit 29)                                       */
#define OTG_HS_HOST_OTG_HS_HCCHAR10_ODDFRM_Msk (0x20000000UL)       /*!< ODDFRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR10_CHDIS_Pos (30UL)                /*!< CHDIS (Bit 30)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR10_CHDIS_Msk (0x40000000UL)        /*!< CHDIS (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR10_CHENA_Pos (31UL)                /*!< CHENA (Bit 31)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR10_CHENA_Msk (0x80000000UL)        /*!< CHENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_HS_HCCHAR11  ==================================================== */
#define OTG_HS_HOST_OTG_HS_HCCHAR11_MPSIZ_Pos (0UL)                 /*!< MPSIZ (Bit 0)                                         */
#define OTG_HS_HOST_OTG_HS_HCCHAR11_MPSIZ_Msk (0x7ffUL)             /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR11_EPNUM_Pos (11UL)                /*!< EPNUM (Bit 11)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR11_EPNUM_Msk (0x7800UL)            /*!< EPNUM (Bitfield-Mask: 0x0f)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR11_EPDIR_Pos (15UL)                /*!< EPDIR (Bit 15)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR11_EPDIR_Msk (0x8000UL)            /*!< EPDIR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR11_LSDEV_Pos (17UL)                /*!< LSDEV (Bit 17)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR11_LSDEV_Msk (0x20000UL)           /*!< LSDEV (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR11_EPTYP_Pos (18UL)                /*!< EPTYP (Bit 18)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR11_EPTYP_Msk (0xc0000UL)           /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR11_MC_Pos (20UL)                   /*!< MC (Bit 20)                                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR11_MC_Msk (0x300000UL)             /*!< MC (Bitfield-Mask: 0x03)                              */
#define OTG_HS_HOST_OTG_HS_HCCHAR11_DAD_Pos (22UL)                  /*!< DAD (Bit 22)                                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR11_DAD_Msk (0x1fc00000UL)          /*!< DAD (Bitfield-Mask: 0x7f)                             */
#define OTG_HS_HOST_OTG_HS_HCCHAR11_ODDFRM_Pos (29UL)               /*!< ODDFRM (Bit 29)                                       */
#define OTG_HS_HOST_OTG_HS_HCCHAR11_ODDFRM_Msk (0x20000000UL)       /*!< ODDFRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR11_CHDIS_Pos (30UL)                /*!< CHDIS (Bit 30)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR11_CHDIS_Msk (0x40000000UL)        /*!< CHDIS (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR11_CHENA_Pos (31UL)                /*!< CHENA (Bit 31)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR11_CHENA_Msk (0x80000000UL)        /*!< CHENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_HS_HCSPLT0  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCSPLT0_PRTADDR_Pos (0UL)                /*!< PRTADDR (Bit 0)                                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT0_PRTADDR_Msk (0x7fUL)             /*!< PRTADDR (Bitfield-Mask: 0x7f)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT0_HUBADDR_Pos (7UL)                /*!< HUBADDR (Bit 7)                                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT0_HUBADDR_Msk (0x3f80UL)           /*!< HUBADDR (Bitfield-Mask: 0x7f)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT0_XACTPOS_Pos (14UL)               /*!< XACTPOS (Bit 14)                                      */
#define OTG_HS_HOST_OTG_HS_HCSPLT0_XACTPOS_Msk (0xc000UL)           /*!< XACTPOS (Bitfield-Mask: 0x03)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT0_COMPLSPLT_Pos (16UL)             /*!< COMPLSPLT (Bit 16)                                    */
#define OTG_HS_HOST_OTG_HS_HCSPLT0_COMPLSPLT_Msk (0x10000UL)        /*!< COMPLSPLT (Bitfield-Mask: 0x01)                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT0_SPLITEN_Pos (31UL)               /*!< SPLITEN (Bit 31)                                      */
#define OTG_HS_HOST_OTG_HS_HCSPLT0_SPLITEN_Msk (0x80000000UL)       /*!< SPLITEN (Bitfield-Mask: 0x01)                         */
/* ====================================================  OTG_HS_HCSPLT1  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCSPLT1_PRTADDR_Pos (0UL)                /*!< PRTADDR (Bit 0)                                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT1_PRTADDR_Msk (0x7fUL)             /*!< PRTADDR (Bitfield-Mask: 0x7f)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT1_HUBADDR_Pos (7UL)                /*!< HUBADDR (Bit 7)                                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT1_HUBADDR_Msk (0x3f80UL)           /*!< HUBADDR (Bitfield-Mask: 0x7f)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT1_XACTPOS_Pos (14UL)               /*!< XACTPOS (Bit 14)                                      */
#define OTG_HS_HOST_OTG_HS_HCSPLT1_XACTPOS_Msk (0xc000UL)           /*!< XACTPOS (Bitfield-Mask: 0x03)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT1_COMPLSPLT_Pos (16UL)             /*!< COMPLSPLT (Bit 16)                                    */
#define OTG_HS_HOST_OTG_HS_HCSPLT1_COMPLSPLT_Msk (0x10000UL)        /*!< COMPLSPLT (Bitfield-Mask: 0x01)                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT1_SPLITEN_Pos (31UL)               /*!< SPLITEN (Bit 31)                                      */
#define OTG_HS_HOST_OTG_HS_HCSPLT1_SPLITEN_Msk (0x80000000UL)       /*!< SPLITEN (Bitfield-Mask: 0x01)                         */
/* ====================================================  OTG_HS_HCSPLT2  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCSPLT2_PRTADDR_Pos (0UL)                /*!< PRTADDR (Bit 0)                                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT2_PRTADDR_Msk (0x7fUL)             /*!< PRTADDR (Bitfield-Mask: 0x7f)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT2_HUBADDR_Pos (7UL)                /*!< HUBADDR (Bit 7)                                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT2_HUBADDR_Msk (0x3f80UL)           /*!< HUBADDR (Bitfield-Mask: 0x7f)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT2_XACTPOS_Pos (14UL)               /*!< XACTPOS (Bit 14)                                      */
#define OTG_HS_HOST_OTG_HS_HCSPLT2_XACTPOS_Msk (0xc000UL)           /*!< XACTPOS (Bitfield-Mask: 0x03)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT2_COMPLSPLT_Pos (16UL)             /*!< COMPLSPLT (Bit 16)                                    */
#define OTG_HS_HOST_OTG_HS_HCSPLT2_COMPLSPLT_Msk (0x10000UL)        /*!< COMPLSPLT (Bitfield-Mask: 0x01)                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT2_SPLITEN_Pos (31UL)               /*!< SPLITEN (Bit 31)                                      */
#define OTG_HS_HOST_OTG_HS_HCSPLT2_SPLITEN_Msk (0x80000000UL)       /*!< SPLITEN (Bitfield-Mask: 0x01)                         */
/* ====================================================  OTG_HS_HCSPLT3  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCSPLT3_PRTADDR_Pos (0UL)                /*!< PRTADDR (Bit 0)                                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT3_PRTADDR_Msk (0x7fUL)             /*!< PRTADDR (Bitfield-Mask: 0x7f)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT3_HUBADDR_Pos (7UL)                /*!< HUBADDR (Bit 7)                                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT3_HUBADDR_Msk (0x3f80UL)           /*!< HUBADDR (Bitfield-Mask: 0x7f)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT3_XACTPOS_Pos (14UL)               /*!< XACTPOS (Bit 14)                                      */
#define OTG_HS_HOST_OTG_HS_HCSPLT3_XACTPOS_Msk (0xc000UL)           /*!< XACTPOS (Bitfield-Mask: 0x03)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT3_COMPLSPLT_Pos (16UL)             /*!< COMPLSPLT (Bit 16)                                    */
#define OTG_HS_HOST_OTG_HS_HCSPLT3_COMPLSPLT_Msk (0x10000UL)        /*!< COMPLSPLT (Bitfield-Mask: 0x01)                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT3_SPLITEN_Pos (31UL)               /*!< SPLITEN (Bit 31)                                      */
#define OTG_HS_HOST_OTG_HS_HCSPLT3_SPLITEN_Msk (0x80000000UL)       /*!< SPLITEN (Bitfield-Mask: 0x01)                         */
/* ====================================================  OTG_HS_HCSPLT4  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCSPLT4_PRTADDR_Pos (0UL)                /*!< PRTADDR (Bit 0)                                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT4_PRTADDR_Msk (0x7fUL)             /*!< PRTADDR (Bitfield-Mask: 0x7f)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT4_HUBADDR_Pos (7UL)                /*!< HUBADDR (Bit 7)                                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT4_HUBADDR_Msk (0x3f80UL)           /*!< HUBADDR (Bitfield-Mask: 0x7f)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT4_XACTPOS_Pos (14UL)               /*!< XACTPOS (Bit 14)                                      */
#define OTG_HS_HOST_OTG_HS_HCSPLT4_XACTPOS_Msk (0xc000UL)           /*!< XACTPOS (Bitfield-Mask: 0x03)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT4_COMPLSPLT_Pos (16UL)             /*!< COMPLSPLT (Bit 16)                                    */
#define OTG_HS_HOST_OTG_HS_HCSPLT4_COMPLSPLT_Msk (0x10000UL)        /*!< COMPLSPLT (Bitfield-Mask: 0x01)                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT4_SPLITEN_Pos (31UL)               /*!< SPLITEN (Bit 31)                                      */
#define OTG_HS_HOST_OTG_HS_HCSPLT4_SPLITEN_Msk (0x80000000UL)       /*!< SPLITEN (Bitfield-Mask: 0x01)                         */
/* ====================================================  OTG_HS_HCSPLT5  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCSPLT5_PRTADDR_Pos (0UL)                /*!< PRTADDR (Bit 0)                                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT5_PRTADDR_Msk (0x7fUL)             /*!< PRTADDR (Bitfield-Mask: 0x7f)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT5_HUBADDR_Pos (7UL)                /*!< HUBADDR (Bit 7)                                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT5_HUBADDR_Msk (0x3f80UL)           /*!< HUBADDR (Bitfield-Mask: 0x7f)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT5_XACTPOS_Pos (14UL)               /*!< XACTPOS (Bit 14)                                      */
#define OTG_HS_HOST_OTG_HS_HCSPLT5_XACTPOS_Msk (0xc000UL)           /*!< XACTPOS (Bitfield-Mask: 0x03)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT5_COMPLSPLT_Pos (16UL)             /*!< COMPLSPLT (Bit 16)                                    */
#define OTG_HS_HOST_OTG_HS_HCSPLT5_COMPLSPLT_Msk (0x10000UL)        /*!< COMPLSPLT (Bitfield-Mask: 0x01)                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT5_SPLITEN_Pos (31UL)               /*!< SPLITEN (Bit 31)                                      */
#define OTG_HS_HOST_OTG_HS_HCSPLT5_SPLITEN_Msk (0x80000000UL)       /*!< SPLITEN (Bitfield-Mask: 0x01)                         */
/* ====================================================  OTG_HS_HCSPLT6  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCSPLT6_PRTADDR_Pos (0UL)                /*!< PRTADDR (Bit 0)                                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT6_PRTADDR_Msk (0x7fUL)             /*!< PRTADDR (Bitfield-Mask: 0x7f)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT6_HUBADDR_Pos (7UL)                /*!< HUBADDR (Bit 7)                                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT6_HUBADDR_Msk (0x3f80UL)           /*!< HUBADDR (Bitfield-Mask: 0x7f)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT6_XACTPOS_Pos (14UL)               /*!< XACTPOS (Bit 14)                                      */
#define OTG_HS_HOST_OTG_HS_HCSPLT6_XACTPOS_Msk (0xc000UL)           /*!< XACTPOS (Bitfield-Mask: 0x03)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT6_COMPLSPLT_Pos (16UL)             /*!< COMPLSPLT (Bit 16)                                    */
#define OTG_HS_HOST_OTG_HS_HCSPLT6_COMPLSPLT_Msk (0x10000UL)        /*!< COMPLSPLT (Bitfield-Mask: 0x01)                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT6_SPLITEN_Pos (31UL)               /*!< SPLITEN (Bit 31)                                      */
#define OTG_HS_HOST_OTG_HS_HCSPLT6_SPLITEN_Msk (0x80000000UL)       /*!< SPLITEN (Bitfield-Mask: 0x01)                         */
/* ====================================================  OTG_HS_HCSPLT7  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCSPLT7_PRTADDR_Pos (0UL)                /*!< PRTADDR (Bit 0)                                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT7_PRTADDR_Msk (0x7fUL)             /*!< PRTADDR (Bitfield-Mask: 0x7f)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT7_HUBADDR_Pos (7UL)                /*!< HUBADDR (Bit 7)                                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT7_HUBADDR_Msk (0x3f80UL)           /*!< HUBADDR (Bitfield-Mask: 0x7f)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT7_XACTPOS_Pos (14UL)               /*!< XACTPOS (Bit 14)                                      */
#define OTG_HS_HOST_OTG_HS_HCSPLT7_XACTPOS_Msk (0xc000UL)           /*!< XACTPOS (Bitfield-Mask: 0x03)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT7_COMPLSPLT_Pos (16UL)             /*!< COMPLSPLT (Bit 16)                                    */
#define OTG_HS_HOST_OTG_HS_HCSPLT7_COMPLSPLT_Msk (0x10000UL)        /*!< COMPLSPLT (Bitfield-Mask: 0x01)                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT7_SPLITEN_Pos (31UL)               /*!< SPLITEN (Bit 31)                                      */
#define OTG_HS_HOST_OTG_HS_HCSPLT7_SPLITEN_Msk (0x80000000UL)       /*!< SPLITEN (Bitfield-Mask: 0x01)                         */
/* ====================================================  OTG_HS_HCSPLT8  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCSPLT8_PRTADDR_Pos (0UL)                /*!< PRTADDR (Bit 0)                                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT8_PRTADDR_Msk (0x7fUL)             /*!< PRTADDR (Bitfield-Mask: 0x7f)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT8_HUBADDR_Pos (7UL)                /*!< HUBADDR (Bit 7)                                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT8_HUBADDR_Msk (0x3f80UL)           /*!< HUBADDR (Bitfield-Mask: 0x7f)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT8_XACTPOS_Pos (14UL)               /*!< XACTPOS (Bit 14)                                      */
#define OTG_HS_HOST_OTG_HS_HCSPLT8_XACTPOS_Msk (0xc000UL)           /*!< XACTPOS (Bitfield-Mask: 0x03)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT8_COMPLSPLT_Pos (16UL)             /*!< COMPLSPLT (Bit 16)                                    */
#define OTG_HS_HOST_OTG_HS_HCSPLT8_COMPLSPLT_Msk (0x10000UL)        /*!< COMPLSPLT (Bitfield-Mask: 0x01)                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT8_SPLITEN_Pos (31UL)               /*!< SPLITEN (Bit 31)                                      */
#define OTG_HS_HOST_OTG_HS_HCSPLT8_SPLITEN_Msk (0x80000000UL)       /*!< SPLITEN (Bitfield-Mask: 0x01)                         */
/* ====================================================  OTG_HS_HCSPLT9  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCSPLT9_PRTADDR_Pos (0UL)                /*!< PRTADDR (Bit 0)                                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT9_PRTADDR_Msk (0x7fUL)             /*!< PRTADDR (Bitfield-Mask: 0x7f)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT9_HUBADDR_Pos (7UL)                /*!< HUBADDR (Bit 7)                                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT9_HUBADDR_Msk (0x3f80UL)           /*!< HUBADDR (Bitfield-Mask: 0x7f)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT9_XACTPOS_Pos (14UL)               /*!< XACTPOS (Bit 14)                                      */
#define OTG_HS_HOST_OTG_HS_HCSPLT9_XACTPOS_Msk (0xc000UL)           /*!< XACTPOS (Bitfield-Mask: 0x03)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT9_COMPLSPLT_Pos (16UL)             /*!< COMPLSPLT (Bit 16)                                    */
#define OTG_HS_HOST_OTG_HS_HCSPLT9_COMPLSPLT_Msk (0x10000UL)        /*!< COMPLSPLT (Bitfield-Mask: 0x01)                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT9_SPLITEN_Pos (31UL)               /*!< SPLITEN (Bit 31)                                      */
#define OTG_HS_HOST_OTG_HS_HCSPLT9_SPLITEN_Msk (0x80000000UL)       /*!< SPLITEN (Bitfield-Mask: 0x01)                         */
/* ====================================================  OTG_HS_HCSPLT10  ==================================================== */
#define OTG_HS_HOST_OTG_HS_HCSPLT10_PRTADDR_Pos (0UL)               /*!< PRTADDR (Bit 0)                                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT10_PRTADDR_Msk (0x7fUL)            /*!< PRTADDR (Bitfield-Mask: 0x7f)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT10_HUBADDR_Pos (7UL)               /*!< HUBADDR (Bit 7)                                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT10_HUBADDR_Msk (0x3f80UL)          /*!< HUBADDR (Bitfield-Mask: 0x7f)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT10_XACTPOS_Pos (14UL)              /*!< XACTPOS (Bit 14)                                      */
#define OTG_HS_HOST_OTG_HS_HCSPLT10_XACTPOS_Msk (0xc000UL)          /*!< XACTPOS (Bitfield-Mask: 0x03)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT10_COMPLSPLT_Pos (16UL)            /*!< COMPLSPLT (Bit 16)                                    */
#define OTG_HS_HOST_OTG_HS_HCSPLT10_COMPLSPLT_Msk (0x10000UL)       /*!< COMPLSPLT (Bitfield-Mask: 0x01)                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT10_SPLITEN_Pos (31UL)              /*!< SPLITEN (Bit 31)                                      */
#define OTG_HS_HOST_OTG_HS_HCSPLT10_SPLITEN_Msk (0x80000000UL)      /*!< SPLITEN (Bitfield-Mask: 0x01)                         */
/* ====================================================  OTG_HS_HCSPLT11  ==================================================== */
#define OTG_HS_HOST_OTG_HS_HCSPLT11_PRTADDR_Pos (0UL)               /*!< PRTADDR (Bit 0)                                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT11_PRTADDR_Msk (0x7fUL)            /*!< PRTADDR (Bitfield-Mask: 0x7f)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT11_HUBADDR_Pos (7UL)               /*!< HUBADDR (Bit 7)                                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT11_HUBADDR_Msk (0x3f80UL)          /*!< HUBADDR (Bitfield-Mask: 0x7f)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT11_XACTPOS_Pos (14UL)              /*!< XACTPOS (Bit 14)                                      */
#define OTG_HS_HOST_OTG_HS_HCSPLT11_XACTPOS_Msk (0xc000UL)          /*!< XACTPOS (Bitfield-Mask: 0x03)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT11_COMPLSPLT_Pos (16UL)            /*!< COMPLSPLT (Bit 16)                                    */
#define OTG_HS_HOST_OTG_HS_HCSPLT11_COMPLSPLT_Msk (0x10000UL)       /*!< COMPLSPLT (Bitfield-Mask: 0x01)                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT11_SPLITEN_Pos (31UL)              /*!< SPLITEN (Bit 31)                                      */
#define OTG_HS_HOST_OTG_HS_HCSPLT11_SPLITEN_Msk (0x80000000UL)      /*!< SPLITEN (Bitfield-Mask: 0x01)                         */
/* =====================================================  OTG_HS_HCINT0  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCINT0_XFRC_Pos (0UL)                    /*!< XFRC (Bit 0)                                          */
#define OTG_HS_HOST_OTG_HS_HCINT0_XFRC_Msk (0x1UL)                  /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINT0_CHH_Pos (1UL)                     /*!< CHH (Bit 1)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT0_CHH_Msk (0x2UL)                   /*!< CHH (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT0_AHBERR_Pos (2UL)                  /*!< AHBERR (Bit 2)                                        */
#define OTG_HS_HOST_OTG_HS_HCINT0_AHBERR_Msk (0x4UL)                /*!< AHBERR (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINT0_STALL_Pos (3UL)                   /*!< STALL (Bit 3)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT0_STALL_Msk (0x8UL)                 /*!< STALL (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT0_NAK_Pos (4UL)                     /*!< NAK (Bit 4)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT0_NAK_Msk (0x10UL)                  /*!< NAK (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT0_ACK_Pos (5UL)                     /*!< ACK (Bit 5)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT0_ACK_Msk (0x20UL)                  /*!< ACK (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT0_NYET_Pos (6UL)                    /*!< NYET (Bit 6)                                          */
#define OTG_HS_HOST_OTG_HS_HCINT0_NYET_Msk (0x40UL)                 /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINT0_TXERR_Pos (7UL)                   /*!< TXERR (Bit 7)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT0_TXERR_Msk (0x80UL)                /*!< TXERR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT0_BBERR_Pos (8UL)                   /*!< BBERR (Bit 8)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT0_BBERR_Msk (0x100UL)               /*!< BBERR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT0_FRMOR_Pos (9UL)                   /*!< FRMOR (Bit 9)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT0_FRMOR_Msk (0x200UL)               /*!< FRMOR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT0_DTERR_Pos (10UL)                  /*!< DTERR (Bit 10)                                        */
#define OTG_HS_HOST_OTG_HS_HCINT0_DTERR_Msk (0x400UL)               /*!< DTERR (Bitfield-Mask: 0x01)                           */
/* =====================================================  OTG_HS_HCINT1  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCINT1_XFRC_Pos (0UL)                    /*!< XFRC (Bit 0)                                          */
#define OTG_HS_HOST_OTG_HS_HCINT1_XFRC_Msk (0x1UL)                  /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINT1_CHH_Pos (1UL)                     /*!< CHH (Bit 1)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT1_CHH_Msk (0x2UL)                   /*!< CHH (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT1_AHBERR_Pos (2UL)                  /*!< AHBERR (Bit 2)                                        */
#define OTG_HS_HOST_OTG_HS_HCINT1_AHBERR_Msk (0x4UL)                /*!< AHBERR (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINT1_STALL_Pos (3UL)                   /*!< STALL (Bit 3)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT1_STALL_Msk (0x8UL)                 /*!< STALL (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT1_NAK_Pos (4UL)                     /*!< NAK (Bit 4)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT1_NAK_Msk (0x10UL)                  /*!< NAK (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT1_ACK_Pos (5UL)                     /*!< ACK (Bit 5)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT1_ACK_Msk (0x20UL)                  /*!< ACK (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT1_NYET_Pos (6UL)                    /*!< NYET (Bit 6)                                          */
#define OTG_HS_HOST_OTG_HS_HCINT1_NYET_Msk (0x40UL)                 /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINT1_TXERR_Pos (7UL)                   /*!< TXERR (Bit 7)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT1_TXERR_Msk (0x80UL)                /*!< TXERR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT1_BBERR_Pos (8UL)                   /*!< BBERR (Bit 8)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT1_BBERR_Msk (0x100UL)               /*!< BBERR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT1_FRMOR_Pos (9UL)                   /*!< FRMOR (Bit 9)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT1_FRMOR_Msk (0x200UL)               /*!< FRMOR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT1_DTERR_Pos (10UL)                  /*!< DTERR (Bit 10)                                        */
#define OTG_HS_HOST_OTG_HS_HCINT1_DTERR_Msk (0x400UL)               /*!< DTERR (Bitfield-Mask: 0x01)                           */
/* =====================================================  OTG_HS_HCINT2  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCINT2_XFRC_Pos (0UL)                    /*!< XFRC (Bit 0)                                          */
#define OTG_HS_HOST_OTG_HS_HCINT2_XFRC_Msk (0x1UL)                  /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINT2_CHH_Pos (1UL)                     /*!< CHH (Bit 1)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT2_CHH_Msk (0x2UL)                   /*!< CHH (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT2_AHBERR_Pos (2UL)                  /*!< AHBERR (Bit 2)                                        */
#define OTG_HS_HOST_OTG_HS_HCINT2_AHBERR_Msk (0x4UL)                /*!< AHBERR (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINT2_STALL_Pos (3UL)                   /*!< STALL (Bit 3)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT2_STALL_Msk (0x8UL)                 /*!< STALL (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT2_NAK_Pos (4UL)                     /*!< NAK (Bit 4)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT2_NAK_Msk (0x10UL)                  /*!< NAK (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT2_ACK_Pos (5UL)                     /*!< ACK (Bit 5)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT2_ACK_Msk (0x20UL)                  /*!< ACK (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT2_NYET_Pos (6UL)                    /*!< NYET (Bit 6)                                          */
#define OTG_HS_HOST_OTG_HS_HCINT2_NYET_Msk (0x40UL)                 /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINT2_TXERR_Pos (7UL)                   /*!< TXERR (Bit 7)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT2_TXERR_Msk (0x80UL)                /*!< TXERR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT2_BBERR_Pos (8UL)                   /*!< BBERR (Bit 8)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT2_BBERR_Msk (0x100UL)               /*!< BBERR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT2_FRMOR_Pos (9UL)                   /*!< FRMOR (Bit 9)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT2_FRMOR_Msk (0x200UL)               /*!< FRMOR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT2_DTERR_Pos (10UL)                  /*!< DTERR (Bit 10)                                        */
#define OTG_HS_HOST_OTG_HS_HCINT2_DTERR_Msk (0x400UL)               /*!< DTERR (Bitfield-Mask: 0x01)                           */
/* =====================================================  OTG_HS_HCINT3  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCINT3_XFRC_Pos (0UL)                    /*!< XFRC (Bit 0)                                          */
#define OTG_HS_HOST_OTG_HS_HCINT3_XFRC_Msk (0x1UL)                  /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINT3_CHH_Pos (1UL)                     /*!< CHH (Bit 1)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT3_CHH_Msk (0x2UL)                   /*!< CHH (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT3_AHBERR_Pos (2UL)                  /*!< AHBERR (Bit 2)                                        */
#define OTG_HS_HOST_OTG_HS_HCINT3_AHBERR_Msk (0x4UL)                /*!< AHBERR (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINT3_STALL_Pos (3UL)                   /*!< STALL (Bit 3)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT3_STALL_Msk (0x8UL)                 /*!< STALL (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT3_NAK_Pos (4UL)                     /*!< NAK (Bit 4)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT3_NAK_Msk (0x10UL)                  /*!< NAK (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT3_ACK_Pos (5UL)                     /*!< ACK (Bit 5)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT3_ACK_Msk (0x20UL)                  /*!< ACK (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT3_NYET_Pos (6UL)                    /*!< NYET (Bit 6)                                          */
#define OTG_HS_HOST_OTG_HS_HCINT3_NYET_Msk (0x40UL)                 /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINT3_TXERR_Pos (7UL)                   /*!< TXERR (Bit 7)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT3_TXERR_Msk (0x80UL)                /*!< TXERR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT3_BBERR_Pos (8UL)                   /*!< BBERR (Bit 8)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT3_BBERR_Msk (0x100UL)               /*!< BBERR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT3_FRMOR_Pos (9UL)                   /*!< FRMOR (Bit 9)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT3_FRMOR_Msk (0x200UL)               /*!< FRMOR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT3_DTERR_Pos (10UL)                  /*!< DTERR (Bit 10)                                        */
#define OTG_HS_HOST_OTG_HS_HCINT3_DTERR_Msk (0x400UL)               /*!< DTERR (Bitfield-Mask: 0x01)                           */
/* =====================================================  OTG_HS_HCINT4  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCINT4_XFRC_Pos (0UL)                    /*!< XFRC (Bit 0)                                          */
#define OTG_HS_HOST_OTG_HS_HCINT4_XFRC_Msk (0x1UL)                  /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINT4_CHH_Pos (1UL)                     /*!< CHH (Bit 1)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT4_CHH_Msk (0x2UL)                   /*!< CHH (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT4_AHBERR_Pos (2UL)                  /*!< AHBERR (Bit 2)                                        */
#define OTG_HS_HOST_OTG_HS_HCINT4_AHBERR_Msk (0x4UL)                /*!< AHBERR (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINT4_STALL_Pos (3UL)                   /*!< STALL (Bit 3)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT4_STALL_Msk (0x8UL)                 /*!< STALL (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT4_NAK_Pos (4UL)                     /*!< NAK (Bit 4)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT4_NAK_Msk (0x10UL)                  /*!< NAK (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT4_ACK_Pos (5UL)                     /*!< ACK (Bit 5)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT4_ACK_Msk (0x20UL)                  /*!< ACK (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT4_NYET_Pos (6UL)                    /*!< NYET (Bit 6)                                          */
#define OTG_HS_HOST_OTG_HS_HCINT4_NYET_Msk (0x40UL)                 /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINT4_TXERR_Pos (7UL)                   /*!< TXERR (Bit 7)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT4_TXERR_Msk (0x80UL)                /*!< TXERR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT4_BBERR_Pos (8UL)                   /*!< BBERR (Bit 8)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT4_BBERR_Msk (0x100UL)               /*!< BBERR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT4_FRMOR_Pos (9UL)                   /*!< FRMOR (Bit 9)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT4_FRMOR_Msk (0x200UL)               /*!< FRMOR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT4_DTERR_Pos (10UL)                  /*!< DTERR (Bit 10)                                        */
#define OTG_HS_HOST_OTG_HS_HCINT4_DTERR_Msk (0x400UL)               /*!< DTERR (Bitfield-Mask: 0x01)                           */
/* =====================================================  OTG_HS_HCINT5  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCINT5_XFRC_Pos (0UL)                    /*!< XFRC (Bit 0)                                          */
#define OTG_HS_HOST_OTG_HS_HCINT5_XFRC_Msk (0x1UL)                  /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINT5_CHH_Pos (1UL)                     /*!< CHH (Bit 1)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT5_CHH_Msk (0x2UL)                   /*!< CHH (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT5_AHBERR_Pos (2UL)                  /*!< AHBERR (Bit 2)                                        */
#define OTG_HS_HOST_OTG_HS_HCINT5_AHBERR_Msk (0x4UL)                /*!< AHBERR (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINT5_STALL_Pos (3UL)                   /*!< STALL (Bit 3)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT5_STALL_Msk (0x8UL)                 /*!< STALL (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT5_NAK_Pos (4UL)                     /*!< NAK (Bit 4)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT5_NAK_Msk (0x10UL)                  /*!< NAK (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT5_ACK_Pos (5UL)                     /*!< ACK (Bit 5)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT5_ACK_Msk (0x20UL)                  /*!< ACK (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT5_NYET_Pos (6UL)                    /*!< NYET (Bit 6)                                          */
#define OTG_HS_HOST_OTG_HS_HCINT5_NYET_Msk (0x40UL)                 /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINT5_TXERR_Pos (7UL)                   /*!< TXERR (Bit 7)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT5_TXERR_Msk (0x80UL)                /*!< TXERR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT5_BBERR_Pos (8UL)                   /*!< BBERR (Bit 8)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT5_BBERR_Msk (0x100UL)               /*!< BBERR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT5_FRMOR_Pos (9UL)                   /*!< FRMOR (Bit 9)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT5_FRMOR_Msk (0x200UL)               /*!< FRMOR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT5_DTERR_Pos (10UL)                  /*!< DTERR (Bit 10)                                        */
#define OTG_HS_HOST_OTG_HS_HCINT5_DTERR_Msk (0x400UL)               /*!< DTERR (Bitfield-Mask: 0x01)                           */
/* =====================================================  OTG_HS_HCINT6  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCINT6_XFRC_Pos (0UL)                    /*!< XFRC (Bit 0)                                          */
#define OTG_HS_HOST_OTG_HS_HCINT6_XFRC_Msk (0x1UL)                  /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINT6_CHH_Pos (1UL)                     /*!< CHH (Bit 1)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT6_CHH_Msk (0x2UL)                   /*!< CHH (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT6_AHBERR_Pos (2UL)                  /*!< AHBERR (Bit 2)                                        */
#define OTG_HS_HOST_OTG_HS_HCINT6_AHBERR_Msk (0x4UL)                /*!< AHBERR (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINT6_STALL_Pos (3UL)                   /*!< STALL (Bit 3)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT6_STALL_Msk (0x8UL)                 /*!< STALL (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT6_NAK_Pos (4UL)                     /*!< NAK (Bit 4)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT6_NAK_Msk (0x10UL)                  /*!< NAK (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT6_ACK_Pos (5UL)                     /*!< ACK (Bit 5)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT6_ACK_Msk (0x20UL)                  /*!< ACK (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT6_NYET_Pos (6UL)                    /*!< NYET (Bit 6)                                          */
#define OTG_HS_HOST_OTG_HS_HCINT6_NYET_Msk (0x40UL)                 /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINT6_TXERR_Pos (7UL)                   /*!< TXERR (Bit 7)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT6_TXERR_Msk (0x80UL)                /*!< TXERR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT6_BBERR_Pos (8UL)                   /*!< BBERR (Bit 8)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT6_BBERR_Msk (0x100UL)               /*!< BBERR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT6_FRMOR_Pos (9UL)                   /*!< FRMOR (Bit 9)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT6_FRMOR_Msk (0x200UL)               /*!< FRMOR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT6_DTERR_Pos (10UL)                  /*!< DTERR (Bit 10)                                        */
#define OTG_HS_HOST_OTG_HS_HCINT6_DTERR_Msk (0x400UL)               /*!< DTERR (Bitfield-Mask: 0x01)                           */
/* =====================================================  OTG_HS_HCINT7  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCINT7_XFRC_Pos (0UL)                    /*!< XFRC (Bit 0)                                          */
#define OTG_HS_HOST_OTG_HS_HCINT7_XFRC_Msk (0x1UL)                  /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINT7_CHH_Pos (1UL)                     /*!< CHH (Bit 1)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT7_CHH_Msk (0x2UL)                   /*!< CHH (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT7_AHBERR_Pos (2UL)                  /*!< AHBERR (Bit 2)                                        */
#define OTG_HS_HOST_OTG_HS_HCINT7_AHBERR_Msk (0x4UL)                /*!< AHBERR (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINT7_STALL_Pos (3UL)                   /*!< STALL (Bit 3)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT7_STALL_Msk (0x8UL)                 /*!< STALL (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT7_NAK_Pos (4UL)                     /*!< NAK (Bit 4)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT7_NAK_Msk (0x10UL)                  /*!< NAK (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT7_ACK_Pos (5UL)                     /*!< ACK (Bit 5)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT7_ACK_Msk (0x20UL)                  /*!< ACK (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT7_NYET_Pos (6UL)                    /*!< NYET (Bit 6)                                          */
#define OTG_HS_HOST_OTG_HS_HCINT7_NYET_Msk (0x40UL)                 /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINT7_TXERR_Pos (7UL)                   /*!< TXERR (Bit 7)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT7_TXERR_Msk (0x80UL)                /*!< TXERR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT7_BBERR_Pos (8UL)                   /*!< BBERR (Bit 8)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT7_BBERR_Msk (0x100UL)               /*!< BBERR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT7_FRMOR_Pos (9UL)                   /*!< FRMOR (Bit 9)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT7_FRMOR_Msk (0x200UL)               /*!< FRMOR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT7_DTERR_Pos (10UL)                  /*!< DTERR (Bit 10)                                        */
#define OTG_HS_HOST_OTG_HS_HCINT7_DTERR_Msk (0x400UL)               /*!< DTERR (Bitfield-Mask: 0x01)                           */
/* =====================================================  OTG_HS_HCINT8  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCINT8_XFRC_Pos (0UL)                    /*!< XFRC (Bit 0)                                          */
#define OTG_HS_HOST_OTG_HS_HCINT8_XFRC_Msk (0x1UL)                  /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINT8_CHH_Pos (1UL)                     /*!< CHH (Bit 1)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT8_CHH_Msk (0x2UL)                   /*!< CHH (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT8_AHBERR_Pos (2UL)                  /*!< AHBERR (Bit 2)                                        */
#define OTG_HS_HOST_OTG_HS_HCINT8_AHBERR_Msk (0x4UL)                /*!< AHBERR (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINT8_STALL_Pos (3UL)                   /*!< STALL (Bit 3)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT8_STALL_Msk (0x8UL)                 /*!< STALL (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT8_NAK_Pos (4UL)                     /*!< NAK (Bit 4)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT8_NAK_Msk (0x10UL)                  /*!< NAK (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT8_ACK_Pos (5UL)                     /*!< ACK (Bit 5)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT8_ACK_Msk (0x20UL)                  /*!< ACK (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT8_NYET_Pos (6UL)                    /*!< NYET (Bit 6)                                          */
#define OTG_HS_HOST_OTG_HS_HCINT8_NYET_Msk (0x40UL)                 /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINT8_TXERR_Pos (7UL)                   /*!< TXERR (Bit 7)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT8_TXERR_Msk (0x80UL)                /*!< TXERR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT8_BBERR_Pos (8UL)                   /*!< BBERR (Bit 8)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT8_BBERR_Msk (0x100UL)               /*!< BBERR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT8_FRMOR_Pos (9UL)                   /*!< FRMOR (Bit 9)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT8_FRMOR_Msk (0x200UL)               /*!< FRMOR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT8_DTERR_Pos (10UL)                  /*!< DTERR (Bit 10)                                        */
#define OTG_HS_HOST_OTG_HS_HCINT8_DTERR_Msk (0x400UL)               /*!< DTERR (Bitfield-Mask: 0x01)                           */
/* =====================================================  OTG_HS_HCINT9  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCINT9_XFRC_Pos (0UL)                    /*!< XFRC (Bit 0)                                          */
#define OTG_HS_HOST_OTG_HS_HCINT9_XFRC_Msk (0x1UL)                  /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINT9_CHH_Pos (1UL)                     /*!< CHH (Bit 1)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT9_CHH_Msk (0x2UL)                   /*!< CHH (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT9_AHBERR_Pos (2UL)                  /*!< AHBERR (Bit 2)                                        */
#define OTG_HS_HOST_OTG_HS_HCINT9_AHBERR_Msk (0x4UL)                /*!< AHBERR (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINT9_STALL_Pos (3UL)                   /*!< STALL (Bit 3)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT9_STALL_Msk (0x8UL)                 /*!< STALL (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT9_NAK_Pos (4UL)                     /*!< NAK (Bit 4)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT9_NAK_Msk (0x10UL)                  /*!< NAK (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT9_ACK_Pos (5UL)                     /*!< ACK (Bit 5)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT9_ACK_Msk (0x20UL)                  /*!< ACK (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT9_NYET_Pos (6UL)                    /*!< NYET (Bit 6)                                          */
#define OTG_HS_HOST_OTG_HS_HCINT9_NYET_Msk (0x40UL)                 /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINT9_TXERR_Pos (7UL)                   /*!< TXERR (Bit 7)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT9_TXERR_Msk (0x80UL)                /*!< TXERR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT9_BBERR_Pos (8UL)                   /*!< BBERR (Bit 8)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT9_BBERR_Msk (0x100UL)               /*!< BBERR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT9_FRMOR_Pos (9UL)                   /*!< FRMOR (Bit 9)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT9_FRMOR_Msk (0x200UL)               /*!< FRMOR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT9_DTERR_Pos (10UL)                  /*!< DTERR (Bit 10)                                        */
#define OTG_HS_HOST_OTG_HS_HCINT9_DTERR_Msk (0x400UL)               /*!< DTERR (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_HS_HCINT10  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCINT10_XFRC_Pos (0UL)                   /*!< XFRC (Bit 0)                                          */
#define OTG_HS_HOST_OTG_HS_HCINT10_XFRC_Msk (0x1UL)                 /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINT10_CHH_Pos (1UL)                    /*!< CHH (Bit 1)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT10_CHH_Msk (0x2UL)                  /*!< CHH (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT10_AHBERR_Pos (2UL)                 /*!< AHBERR (Bit 2)                                        */
#define OTG_HS_HOST_OTG_HS_HCINT10_AHBERR_Msk (0x4UL)               /*!< AHBERR (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINT10_STALL_Pos (3UL)                  /*!< STALL (Bit 3)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT10_STALL_Msk (0x8UL)                /*!< STALL (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT10_NAK_Pos (4UL)                    /*!< NAK (Bit 4)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT10_NAK_Msk (0x10UL)                 /*!< NAK (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT10_ACK_Pos (5UL)                    /*!< ACK (Bit 5)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT10_ACK_Msk (0x20UL)                 /*!< ACK (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT10_NYET_Pos (6UL)                   /*!< NYET (Bit 6)                                          */
#define OTG_HS_HOST_OTG_HS_HCINT10_NYET_Msk (0x40UL)                /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINT10_TXERR_Pos (7UL)                  /*!< TXERR (Bit 7)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT10_TXERR_Msk (0x80UL)               /*!< TXERR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT10_BBERR_Pos (8UL)                  /*!< BBERR (Bit 8)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT10_BBERR_Msk (0x100UL)              /*!< BBERR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT10_FRMOR_Pos (9UL)                  /*!< FRMOR (Bit 9)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT10_FRMOR_Msk (0x200UL)              /*!< FRMOR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT10_DTERR_Pos (10UL)                 /*!< DTERR (Bit 10)                                        */
#define OTG_HS_HOST_OTG_HS_HCINT10_DTERR_Msk (0x400UL)              /*!< DTERR (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_HS_HCINT11  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCINT11_XFRC_Pos (0UL)                   /*!< XFRC (Bit 0)                                          */
#define OTG_HS_HOST_OTG_HS_HCINT11_XFRC_Msk (0x1UL)                 /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINT11_CHH_Pos (1UL)                    /*!< CHH (Bit 1)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT11_CHH_Msk (0x2UL)                  /*!< CHH (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT11_AHBERR_Pos (2UL)                 /*!< AHBERR (Bit 2)                                        */
#define OTG_HS_HOST_OTG_HS_HCINT11_AHBERR_Msk (0x4UL)               /*!< AHBERR (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINT11_STALL_Pos (3UL)                  /*!< STALL (Bit 3)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT11_STALL_Msk (0x8UL)                /*!< STALL (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT11_NAK_Pos (4UL)                    /*!< NAK (Bit 4)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT11_NAK_Msk (0x10UL)                 /*!< NAK (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT11_ACK_Pos (5UL)                    /*!< ACK (Bit 5)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT11_ACK_Msk (0x20UL)                 /*!< ACK (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT11_NYET_Pos (6UL)                   /*!< NYET (Bit 6)                                          */
#define OTG_HS_HOST_OTG_HS_HCINT11_NYET_Msk (0x40UL)                /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINT11_TXERR_Pos (7UL)                  /*!< TXERR (Bit 7)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT11_TXERR_Msk (0x80UL)               /*!< TXERR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT11_BBERR_Pos (8UL)                  /*!< BBERR (Bit 8)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT11_BBERR_Msk (0x100UL)              /*!< BBERR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT11_FRMOR_Pos (9UL)                  /*!< FRMOR (Bit 9)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT11_FRMOR_Msk (0x200UL)              /*!< FRMOR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT11_DTERR_Pos (10UL)                 /*!< DTERR (Bit 10)                                        */
#define OTG_HS_HOST_OTG_HS_HCINT11_DTERR_Msk (0x400UL)              /*!< DTERR (Bitfield-Mask: 0x01)                           */
/* ===================================================  OTG_HS_HCINTMSK0  ==================================================== */
#define OTG_HS_HOST_OTG_HS_HCINTMSK0_XFRCM_Pos (0UL)                /*!< XFRCM (Bit 0)                                         */
#define OTG_HS_HOST_OTG_HS_HCINTMSK0_XFRCM_Msk (0x1UL)              /*!< XFRCM (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINTMSK0_CHHM_Pos (1UL)                 /*!< CHHM (Bit 1)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK0_CHHM_Msk (0x2UL)               /*!< CHHM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK0_AHBERR_Pos (2UL)               /*!< AHBERR (Bit 2)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK0_AHBERR_Msk (0x4UL)             /*!< AHBERR (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK0_STALLM_Pos (3UL)               /*!< STALLM (Bit 3)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK0_STALLM_Msk (0x8UL)             /*!< STALLM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK0_NAKM_Pos (4UL)                 /*!< NAKM (Bit 4)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK0_NAKM_Msk (0x10UL)              /*!< NAKM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK0_ACKM_Pos (5UL)                 /*!< ACKM (Bit 5)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK0_ACKM_Msk (0x20UL)              /*!< ACKM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK0_NYET_Pos (6UL)                 /*!< NYET (Bit 6)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK0_NYET_Msk (0x40UL)              /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK0_TXERRM_Pos (7UL)               /*!< TXERRM (Bit 7)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK0_TXERRM_Msk (0x80UL)            /*!< TXERRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK0_BBERRM_Pos (8UL)               /*!< BBERRM (Bit 8)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK0_BBERRM_Msk (0x100UL)           /*!< BBERRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK0_FRMORM_Pos (9UL)               /*!< FRMORM (Bit 9)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK0_FRMORM_Msk (0x200UL)           /*!< FRMORM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK0_DTERRM_Pos (10UL)              /*!< DTERRM (Bit 10)                                       */
#define OTG_HS_HOST_OTG_HS_HCINTMSK0_DTERRM_Msk (0x400UL)           /*!< DTERRM (Bitfield-Mask: 0x01)                          */
/* ===================================================  OTG_HS_HCINTMSK1  ==================================================== */
#define OTG_HS_HOST_OTG_HS_HCINTMSK1_XFRCM_Pos (0UL)                /*!< XFRCM (Bit 0)                                         */
#define OTG_HS_HOST_OTG_HS_HCINTMSK1_XFRCM_Msk (0x1UL)              /*!< XFRCM (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINTMSK1_CHHM_Pos (1UL)                 /*!< CHHM (Bit 1)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK1_CHHM_Msk (0x2UL)               /*!< CHHM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK1_AHBERR_Pos (2UL)               /*!< AHBERR (Bit 2)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK1_AHBERR_Msk (0x4UL)             /*!< AHBERR (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK1_STALLM_Pos (3UL)               /*!< STALLM (Bit 3)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK1_STALLM_Msk (0x8UL)             /*!< STALLM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK1_NAKM_Pos (4UL)                 /*!< NAKM (Bit 4)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK1_NAKM_Msk (0x10UL)              /*!< NAKM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK1_ACKM_Pos (5UL)                 /*!< ACKM (Bit 5)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK1_ACKM_Msk (0x20UL)              /*!< ACKM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK1_NYET_Pos (6UL)                 /*!< NYET (Bit 6)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK1_NYET_Msk (0x40UL)              /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK1_TXERRM_Pos (7UL)               /*!< TXERRM (Bit 7)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK1_TXERRM_Msk (0x80UL)            /*!< TXERRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK1_BBERRM_Pos (8UL)               /*!< BBERRM (Bit 8)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK1_BBERRM_Msk (0x100UL)           /*!< BBERRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK1_FRMORM_Pos (9UL)               /*!< FRMORM (Bit 9)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK1_FRMORM_Msk (0x200UL)           /*!< FRMORM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK1_DTERRM_Pos (10UL)              /*!< DTERRM (Bit 10)                                       */
#define OTG_HS_HOST_OTG_HS_HCINTMSK1_DTERRM_Msk (0x400UL)           /*!< DTERRM (Bitfield-Mask: 0x01)                          */
/* ===================================================  OTG_HS_HCINTMSK2  ==================================================== */
#define OTG_HS_HOST_OTG_HS_HCINTMSK2_XFRCM_Pos (0UL)                /*!< XFRCM (Bit 0)                                         */
#define OTG_HS_HOST_OTG_HS_HCINTMSK2_XFRCM_Msk (0x1UL)              /*!< XFRCM (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINTMSK2_CHHM_Pos (1UL)                 /*!< CHHM (Bit 1)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK2_CHHM_Msk (0x2UL)               /*!< CHHM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK2_AHBERR_Pos (2UL)               /*!< AHBERR (Bit 2)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK2_AHBERR_Msk (0x4UL)             /*!< AHBERR (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK2_STALLM_Pos (3UL)               /*!< STALLM (Bit 3)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK2_STALLM_Msk (0x8UL)             /*!< STALLM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK2_NAKM_Pos (4UL)                 /*!< NAKM (Bit 4)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK2_NAKM_Msk (0x10UL)              /*!< NAKM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK2_ACKM_Pos (5UL)                 /*!< ACKM (Bit 5)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK2_ACKM_Msk (0x20UL)              /*!< ACKM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK2_NYET_Pos (6UL)                 /*!< NYET (Bit 6)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK2_NYET_Msk (0x40UL)              /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK2_TXERRM_Pos (7UL)               /*!< TXERRM (Bit 7)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK2_TXERRM_Msk (0x80UL)            /*!< TXERRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK2_BBERRM_Pos (8UL)               /*!< BBERRM (Bit 8)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK2_BBERRM_Msk (0x100UL)           /*!< BBERRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK2_FRMORM_Pos (9UL)               /*!< FRMORM (Bit 9)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK2_FRMORM_Msk (0x200UL)           /*!< FRMORM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK2_DTERRM_Pos (10UL)              /*!< DTERRM (Bit 10)                                       */
#define OTG_HS_HOST_OTG_HS_HCINTMSK2_DTERRM_Msk (0x400UL)           /*!< DTERRM (Bitfield-Mask: 0x01)                          */
/* ===================================================  OTG_HS_HCINTMSK3  ==================================================== */
#define OTG_HS_HOST_OTG_HS_HCINTMSK3_XFRCM_Pos (0UL)                /*!< XFRCM (Bit 0)                                         */
#define OTG_HS_HOST_OTG_HS_HCINTMSK3_XFRCM_Msk (0x1UL)              /*!< XFRCM (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINTMSK3_CHHM_Pos (1UL)                 /*!< CHHM (Bit 1)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK3_CHHM_Msk (0x2UL)               /*!< CHHM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK3_AHBERR_Pos (2UL)               /*!< AHBERR (Bit 2)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK3_AHBERR_Msk (0x4UL)             /*!< AHBERR (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK3_STALLM_Pos (3UL)               /*!< STALLM (Bit 3)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK3_STALLM_Msk (0x8UL)             /*!< STALLM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK3_NAKM_Pos (4UL)                 /*!< NAKM (Bit 4)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK3_NAKM_Msk (0x10UL)              /*!< NAKM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK3_ACKM_Pos (5UL)                 /*!< ACKM (Bit 5)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK3_ACKM_Msk (0x20UL)              /*!< ACKM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK3_NYET_Pos (6UL)                 /*!< NYET (Bit 6)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK3_NYET_Msk (0x40UL)              /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK3_TXERRM_Pos (7UL)               /*!< TXERRM (Bit 7)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK3_TXERRM_Msk (0x80UL)            /*!< TXERRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK3_BBERRM_Pos (8UL)               /*!< BBERRM (Bit 8)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK3_BBERRM_Msk (0x100UL)           /*!< BBERRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK3_FRMORM_Pos (9UL)               /*!< FRMORM (Bit 9)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK3_FRMORM_Msk (0x200UL)           /*!< FRMORM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK3_DTERRM_Pos (10UL)              /*!< DTERRM (Bit 10)                                       */
#define OTG_HS_HOST_OTG_HS_HCINTMSK3_DTERRM_Msk (0x400UL)           /*!< DTERRM (Bitfield-Mask: 0x01)                          */
/* ===================================================  OTG_HS_HCINTMSK4  ==================================================== */
#define OTG_HS_HOST_OTG_HS_HCINTMSK4_XFRCM_Pos (0UL)                /*!< XFRCM (Bit 0)                                         */
#define OTG_HS_HOST_OTG_HS_HCINTMSK4_XFRCM_Msk (0x1UL)              /*!< XFRCM (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINTMSK4_CHHM_Pos (1UL)                 /*!< CHHM (Bit 1)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK4_CHHM_Msk (0x2UL)               /*!< CHHM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK4_AHBERR_Pos (2UL)               /*!< AHBERR (Bit 2)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK4_AHBERR_Msk (0x4UL)             /*!< AHBERR (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK4_STALLM_Pos (3UL)               /*!< STALLM (Bit 3)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK4_STALLM_Msk (0x8UL)             /*!< STALLM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK4_NAKM_Pos (4UL)                 /*!< NAKM (Bit 4)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK4_NAKM_Msk (0x10UL)              /*!< NAKM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK4_ACKM_Pos (5UL)                 /*!< ACKM (Bit 5)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK4_ACKM_Msk (0x20UL)              /*!< ACKM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK4_NYET_Pos (6UL)                 /*!< NYET (Bit 6)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK4_NYET_Msk (0x40UL)              /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK4_TXERRM_Pos (7UL)               /*!< TXERRM (Bit 7)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK4_TXERRM_Msk (0x80UL)            /*!< TXERRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK4_BBERRM_Pos (8UL)               /*!< BBERRM (Bit 8)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK4_BBERRM_Msk (0x100UL)           /*!< BBERRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK4_FRMORM_Pos (9UL)               /*!< FRMORM (Bit 9)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK4_FRMORM_Msk (0x200UL)           /*!< FRMORM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK4_DTERRM_Pos (10UL)              /*!< DTERRM (Bit 10)                                       */
#define OTG_HS_HOST_OTG_HS_HCINTMSK4_DTERRM_Msk (0x400UL)           /*!< DTERRM (Bitfield-Mask: 0x01)                          */
/* ===================================================  OTG_HS_HCINTMSK5  ==================================================== */
#define OTG_HS_HOST_OTG_HS_HCINTMSK5_XFRCM_Pos (0UL)                /*!< XFRCM (Bit 0)                                         */
#define OTG_HS_HOST_OTG_HS_HCINTMSK5_XFRCM_Msk (0x1UL)              /*!< XFRCM (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINTMSK5_CHHM_Pos (1UL)                 /*!< CHHM (Bit 1)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK5_CHHM_Msk (0x2UL)               /*!< CHHM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK5_AHBERR_Pos (2UL)               /*!< AHBERR (Bit 2)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK5_AHBERR_Msk (0x4UL)             /*!< AHBERR (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK5_STALLM_Pos (3UL)               /*!< STALLM (Bit 3)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK5_STALLM_Msk (0x8UL)             /*!< STALLM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK5_NAKM_Pos (4UL)                 /*!< NAKM (Bit 4)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK5_NAKM_Msk (0x10UL)              /*!< NAKM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK5_ACKM_Pos (5UL)                 /*!< ACKM (Bit 5)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK5_ACKM_Msk (0x20UL)              /*!< ACKM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK5_NYET_Pos (6UL)                 /*!< NYET (Bit 6)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK5_NYET_Msk (0x40UL)              /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK5_TXERRM_Pos (7UL)               /*!< TXERRM (Bit 7)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK5_TXERRM_Msk (0x80UL)            /*!< TXERRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK5_BBERRM_Pos (8UL)               /*!< BBERRM (Bit 8)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK5_BBERRM_Msk (0x100UL)           /*!< BBERRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK5_FRMORM_Pos (9UL)               /*!< FRMORM (Bit 9)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK5_FRMORM_Msk (0x200UL)           /*!< FRMORM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK5_DTERRM_Pos (10UL)              /*!< DTERRM (Bit 10)                                       */
#define OTG_HS_HOST_OTG_HS_HCINTMSK5_DTERRM_Msk (0x400UL)           /*!< DTERRM (Bitfield-Mask: 0x01)                          */
/* ===================================================  OTG_HS_HCINTMSK6  ==================================================== */
#define OTG_HS_HOST_OTG_HS_HCINTMSK6_XFRCM_Pos (0UL)                /*!< XFRCM (Bit 0)                                         */
#define OTG_HS_HOST_OTG_HS_HCINTMSK6_XFRCM_Msk (0x1UL)              /*!< XFRCM (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINTMSK6_CHHM_Pos (1UL)                 /*!< CHHM (Bit 1)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK6_CHHM_Msk (0x2UL)               /*!< CHHM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK6_AHBERR_Pos (2UL)               /*!< AHBERR (Bit 2)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK6_AHBERR_Msk (0x4UL)             /*!< AHBERR (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK6_STALLM_Pos (3UL)               /*!< STALLM (Bit 3)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK6_STALLM_Msk (0x8UL)             /*!< STALLM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK6_NAKM_Pos (4UL)                 /*!< NAKM (Bit 4)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK6_NAKM_Msk (0x10UL)              /*!< NAKM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK6_ACKM_Pos (5UL)                 /*!< ACKM (Bit 5)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK6_ACKM_Msk (0x20UL)              /*!< ACKM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK6_NYET_Pos (6UL)                 /*!< NYET (Bit 6)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK6_NYET_Msk (0x40UL)              /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK6_TXERRM_Pos (7UL)               /*!< TXERRM (Bit 7)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK6_TXERRM_Msk (0x80UL)            /*!< TXERRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK6_BBERRM_Pos (8UL)               /*!< BBERRM (Bit 8)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK6_BBERRM_Msk (0x100UL)           /*!< BBERRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK6_FRMORM_Pos (9UL)               /*!< FRMORM (Bit 9)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK6_FRMORM_Msk (0x200UL)           /*!< FRMORM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK6_DTERRM_Pos (10UL)              /*!< DTERRM (Bit 10)                                       */
#define OTG_HS_HOST_OTG_HS_HCINTMSK6_DTERRM_Msk (0x400UL)           /*!< DTERRM (Bitfield-Mask: 0x01)                          */
/* ===================================================  OTG_HS_HCINTMSK7  ==================================================== */
#define OTG_HS_HOST_OTG_HS_HCINTMSK7_XFRCM_Pos (0UL)                /*!< XFRCM (Bit 0)                                         */
#define OTG_HS_HOST_OTG_HS_HCINTMSK7_XFRCM_Msk (0x1UL)              /*!< XFRCM (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINTMSK7_CHHM_Pos (1UL)                 /*!< CHHM (Bit 1)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK7_CHHM_Msk (0x2UL)               /*!< CHHM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK7_AHBERR_Pos (2UL)               /*!< AHBERR (Bit 2)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK7_AHBERR_Msk (0x4UL)             /*!< AHBERR (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK7_STALLM_Pos (3UL)               /*!< STALLM (Bit 3)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK7_STALLM_Msk (0x8UL)             /*!< STALLM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK7_NAKM_Pos (4UL)                 /*!< NAKM (Bit 4)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK7_NAKM_Msk (0x10UL)              /*!< NAKM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK7_ACKM_Pos (5UL)                 /*!< ACKM (Bit 5)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK7_ACKM_Msk (0x20UL)              /*!< ACKM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK7_NYET_Pos (6UL)                 /*!< NYET (Bit 6)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK7_NYET_Msk (0x40UL)              /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK7_TXERRM_Pos (7UL)               /*!< TXERRM (Bit 7)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK7_TXERRM_Msk (0x80UL)            /*!< TXERRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK7_BBERRM_Pos (8UL)               /*!< BBERRM (Bit 8)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK7_BBERRM_Msk (0x100UL)           /*!< BBERRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK7_FRMORM_Pos (9UL)               /*!< FRMORM (Bit 9)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK7_FRMORM_Msk (0x200UL)           /*!< FRMORM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK7_DTERRM_Pos (10UL)              /*!< DTERRM (Bit 10)                                       */
#define OTG_HS_HOST_OTG_HS_HCINTMSK7_DTERRM_Msk (0x400UL)           /*!< DTERRM (Bitfield-Mask: 0x01)                          */
/* ===================================================  OTG_HS_HCINTMSK8  ==================================================== */
#define OTG_HS_HOST_OTG_HS_HCINTMSK8_XFRCM_Pos (0UL)                /*!< XFRCM (Bit 0)                                         */
#define OTG_HS_HOST_OTG_HS_HCINTMSK8_XFRCM_Msk (0x1UL)              /*!< XFRCM (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINTMSK8_CHHM_Pos (1UL)                 /*!< CHHM (Bit 1)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK8_CHHM_Msk (0x2UL)               /*!< CHHM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK8_AHBERR_Pos (2UL)               /*!< AHBERR (Bit 2)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK8_AHBERR_Msk (0x4UL)             /*!< AHBERR (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK8_STALLM_Pos (3UL)               /*!< STALLM (Bit 3)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK8_STALLM_Msk (0x8UL)             /*!< STALLM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK8_NAKM_Pos (4UL)                 /*!< NAKM (Bit 4)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK8_NAKM_Msk (0x10UL)              /*!< NAKM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK8_ACKM_Pos (5UL)                 /*!< ACKM (Bit 5)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK8_ACKM_Msk (0x20UL)              /*!< ACKM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK8_NYET_Pos (6UL)                 /*!< NYET (Bit 6)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK8_NYET_Msk (0x40UL)              /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK8_TXERRM_Pos (7UL)               /*!< TXERRM (Bit 7)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK8_TXERRM_Msk (0x80UL)            /*!< TXERRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK8_BBERRM_Pos (8UL)               /*!< BBERRM (Bit 8)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK8_BBERRM_Msk (0x100UL)           /*!< BBERRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK8_FRMORM_Pos (9UL)               /*!< FRMORM (Bit 9)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK8_FRMORM_Msk (0x200UL)           /*!< FRMORM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK8_DTERRM_Pos (10UL)              /*!< DTERRM (Bit 10)                                       */
#define OTG_HS_HOST_OTG_HS_HCINTMSK8_DTERRM_Msk (0x400UL)           /*!< DTERRM (Bitfield-Mask: 0x01)                          */
/* ===================================================  OTG_HS_HCINTMSK9  ==================================================== */
#define OTG_HS_HOST_OTG_HS_HCINTMSK9_XFRCM_Pos (0UL)                /*!< XFRCM (Bit 0)                                         */
#define OTG_HS_HOST_OTG_HS_HCINTMSK9_XFRCM_Msk (0x1UL)              /*!< XFRCM (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINTMSK9_CHHM_Pos (1UL)                 /*!< CHHM (Bit 1)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK9_CHHM_Msk (0x2UL)               /*!< CHHM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK9_AHBERR_Pos (2UL)               /*!< AHBERR (Bit 2)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK9_AHBERR_Msk (0x4UL)             /*!< AHBERR (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK9_STALLM_Pos (3UL)               /*!< STALLM (Bit 3)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK9_STALLM_Msk (0x8UL)             /*!< STALLM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK9_NAKM_Pos (4UL)                 /*!< NAKM (Bit 4)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK9_NAKM_Msk (0x10UL)              /*!< NAKM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK9_ACKM_Pos (5UL)                 /*!< ACKM (Bit 5)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK9_ACKM_Msk (0x20UL)              /*!< ACKM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK9_NYET_Pos (6UL)                 /*!< NYET (Bit 6)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK9_NYET_Msk (0x40UL)              /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK9_TXERRM_Pos (7UL)               /*!< TXERRM (Bit 7)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK9_TXERRM_Msk (0x80UL)            /*!< TXERRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK9_BBERRM_Pos (8UL)               /*!< BBERRM (Bit 8)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK9_BBERRM_Msk (0x100UL)           /*!< BBERRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK9_FRMORM_Pos (9UL)               /*!< FRMORM (Bit 9)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK9_FRMORM_Msk (0x200UL)           /*!< FRMORM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK9_DTERRM_Pos (10UL)              /*!< DTERRM (Bit 10)                                       */
#define OTG_HS_HOST_OTG_HS_HCINTMSK9_DTERRM_Msk (0x400UL)           /*!< DTERRM (Bitfield-Mask: 0x01)                          */
/* ===================================================  OTG_HS_HCINTMSK10  =================================================== */
#define OTG_HS_HOST_OTG_HS_HCINTMSK10_XFRCM_Pos (0UL)               /*!< XFRCM (Bit 0)                                         */
#define OTG_HS_HOST_OTG_HS_HCINTMSK10_XFRCM_Msk (0x1UL)             /*!< XFRCM (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINTMSK10_CHHM_Pos (1UL)                /*!< CHHM (Bit 1)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK10_CHHM_Msk (0x2UL)              /*!< CHHM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK10_AHBERR_Pos (2UL)              /*!< AHBERR (Bit 2)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK10_AHBERR_Msk (0x4UL)            /*!< AHBERR (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK10_STALLM_Pos (3UL)              /*!< STALLM (Bit 3)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK10_STALLM_Msk (0x8UL)            /*!< STALLM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK10_NAKM_Pos (4UL)                /*!< NAKM (Bit 4)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK10_NAKM_Msk (0x10UL)             /*!< NAKM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK10_ACKM_Pos (5UL)                /*!< ACKM (Bit 5)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK10_ACKM_Msk (0x20UL)             /*!< ACKM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK10_NYET_Pos (6UL)                /*!< NYET (Bit 6)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK10_NYET_Msk (0x40UL)             /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK10_TXERRM_Pos (7UL)              /*!< TXERRM (Bit 7)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK10_TXERRM_Msk (0x80UL)           /*!< TXERRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK10_BBERRM_Pos (8UL)              /*!< BBERRM (Bit 8)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK10_BBERRM_Msk (0x100UL)          /*!< BBERRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK10_FRMORM_Pos (9UL)              /*!< FRMORM (Bit 9)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK10_FRMORM_Msk (0x200UL)          /*!< FRMORM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK10_DTERRM_Pos (10UL)             /*!< DTERRM (Bit 10)                                       */
#define OTG_HS_HOST_OTG_HS_HCINTMSK10_DTERRM_Msk (0x400UL)          /*!< DTERRM (Bitfield-Mask: 0x01)                          */
/* ===================================================  OTG_HS_HCINTMSK11  =================================================== */
#define OTG_HS_HOST_OTG_HS_HCINTMSK11_XFRCM_Pos (0UL)               /*!< XFRCM (Bit 0)                                         */
#define OTG_HS_HOST_OTG_HS_HCINTMSK11_XFRCM_Msk (0x1UL)             /*!< XFRCM (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINTMSK11_CHHM_Pos (1UL)                /*!< CHHM (Bit 1)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK11_CHHM_Msk (0x2UL)              /*!< CHHM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK11_AHBERR_Pos (2UL)              /*!< AHBERR (Bit 2)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK11_AHBERR_Msk (0x4UL)            /*!< AHBERR (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK11_STALLM_Pos (3UL)              /*!< STALLM (Bit 3)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK11_STALLM_Msk (0x8UL)            /*!< STALLM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK11_NAKM_Pos (4UL)                /*!< NAKM (Bit 4)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK11_NAKM_Msk (0x10UL)             /*!< NAKM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK11_ACKM_Pos (5UL)                /*!< ACKM (Bit 5)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK11_ACKM_Msk (0x20UL)             /*!< ACKM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK11_NYET_Pos (6UL)                /*!< NYET (Bit 6)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK11_NYET_Msk (0x40UL)             /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK11_TXERRM_Pos (7UL)              /*!< TXERRM (Bit 7)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK11_TXERRM_Msk (0x80UL)           /*!< TXERRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK11_BBERRM_Pos (8UL)              /*!< BBERRM (Bit 8)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK11_BBERRM_Msk (0x100UL)          /*!< BBERRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK11_FRMORM_Pos (9UL)              /*!< FRMORM (Bit 9)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK11_FRMORM_Msk (0x200UL)          /*!< FRMORM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK11_DTERRM_Pos (10UL)             /*!< DTERRM (Bit 10)                                       */
#define OTG_HS_HOST_OTG_HS_HCINTMSK11_DTERRM_Msk (0x400UL)          /*!< DTERRM (Bitfield-Mask: 0x01)                          */
/* ====================================================  OTG_HS_HCTSIZ0  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCTSIZ0_XFRSIZ_Pos (0UL)                 /*!< XFRSIZ (Bit 0)                                        */
#define OTG_HS_HOST_OTG_HS_HCTSIZ0_XFRSIZ_Msk (0x7ffffUL)           /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_HS_HOST_OTG_HS_HCTSIZ0_PKTCNT_Pos (19UL)                /*!< PKTCNT (Bit 19)                                       */
#define OTG_HS_HOST_OTG_HS_HCTSIZ0_PKTCNT_Msk (0x1ff80000UL)        /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_HS_HOST_OTG_HS_HCTSIZ0_DPID_Pos (29UL)                  /*!< DPID (Bit 29)                                         */
#define OTG_HS_HOST_OTG_HS_HCTSIZ0_DPID_Msk (0x60000000UL)          /*!< DPID (Bitfield-Mask: 0x03)                            */
/* ====================================================  OTG_HS_HCTSIZ1  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCTSIZ1_XFRSIZ_Pos (0UL)                 /*!< XFRSIZ (Bit 0)                                        */
#define OTG_HS_HOST_OTG_HS_HCTSIZ1_XFRSIZ_Msk (0x7ffffUL)           /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_HS_HOST_OTG_HS_HCTSIZ1_PKTCNT_Pos (19UL)                /*!< PKTCNT (Bit 19)                                       */
#define OTG_HS_HOST_OTG_HS_HCTSIZ1_PKTCNT_Msk (0x1ff80000UL)        /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_HS_HOST_OTG_HS_HCTSIZ1_DPID_Pos (29UL)                  /*!< DPID (Bit 29)                                         */
#define OTG_HS_HOST_OTG_HS_HCTSIZ1_DPID_Msk (0x60000000UL)          /*!< DPID (Bitfield-Mask: 0x03)                            */
/* ====================================================  OTG_HS_HCTSIZ2  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCTSIZ2_XFRSIZ_Pos (0UL)                 /*!< XFRSIZ (Bit 0)                                        */
#define OTG_HS_HOST_OTG_HS_HCTSIZ2_XFRSIZ_Msk (0x7ffffUL)           /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_HS_HOST_OTG_HS_HCTSIZ2_PKTCNT_Pos (19UL)                /*!< PKTCNT (Bit 19)                                       */
#define OTG_HS_HOST_OTG_HS_HCTSIZ2_PKTCNT_Msk (0x1ff80000UL)        /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_HS_HOST_OTG_HS_HCTSIZ2_DPID_Pos (29UL)                  /*!< DPID (Bit 29)                                         */
#define OTG_HS_HOST_OTG_HS_HCTSIZ2_DPID_Msk (0x60000000UL)          /*!< DPID (Bitfield-Mask: 0x03)                            */
/* ====================================================  OTG_HS_HCTSIZ3  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCTSIZ3_XFRSIZ_Pos (0UL)                 /*!< XFRSIZ (Bit 0)                                        */
#define OTG_HS_HOST_OTG_HS_HCTSIZ3_XFRSIZ_Msk (0x7ffffUL)           /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_HS_HOST_OTG_HS_HCTSIZ3_PKTCNT_Pos (19UL)                /*!< PKTCNT (Bit 19)                                       */
#define OTG_HS_HOST_OTG_HS_HCTSIZ3_PKTCNT_Msk (0x1ff80000UL)        /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_HS_HOST_OTG_HS_HCTSIZ3_DPID_Pos (29UL)                  /*!< DPID (Bit 29)                                         */
#define OTG_HS_HOST_OTG_HS_HCTSIZ3_DPID_Msk (0x60000000UL)          /*!< DPID (Bitfield-Mask: 0x03)                            */
/* ====================================================  OTG_HS_HCTSIZ4  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCTSIZ4_XFRSIZ_Pos (0UL)                 /*!< XFRSIZ (Bit 0)                                        */
#define OTG_HS_HOST_OTG_HS_HCTSIZ4_XFRSIZ_Msk (0x7ffffUL)           /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_HS_HOST_OTG_HS_HCTSIZ4_PKTCNT_Pos (19UL)                /*!< PKTCNT (Bit 19)                                       */
#define OTG_HS_HOST_OTG_HS_HCTSIZ4_PKTCNT_Msk (0x1ff80000UL)        /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_HS_HOST_OTG_HS_HCTSIZ4_DPID_Pos (29UL)                  /*!< DPID (Bit 29)                                         */
#define OTG_HS_HOST_OTG_HS_HCTSIZ4_DPID_Msk (0x60000000UL)          /*!< DPID (Bitfield-Mask: 0x03)                            */
/* ====================================================  OTG_HS_HCTSIZ5  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCTSIZ5_XFRSIZ_Pos (0UL)                 /*!< XFRSIZ (Bit 0)                                        */
#define OTG_HS_HOST_OTG_HS_HCTSIZ5_XFRSIZ_Msk (0x7ffffUL)           /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_HS_HOST_OTG_HS_HCTSIZ5_PKTCNT_Pos (19UL)                /*!< PKTCNT (Bit 19)                                       */
#define OTG_HS_HOST_OTG_HS_HCTSIZ5_PKTCNT_Msk (0x1ff80000UL)        /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_HS_HOST_OTG_HS_HCTSIZ5_DPID_Pos (29UL)                  /*!< DPID (Bit 29)                                         */
#define OTG_HS_HOST_OTG_HS_HCTSIZ5_DPID_Msk (0x60000000UL)          /*!< DPID (Bitfield-Mask: 0x03)                            */
/* ====================================================  OTG_HS_HCTSIZ6  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCTSIZ6_XFRSIZ_Pos (0UL)                 /*!< XFRSIZ (Bit 0)                                        */
#define OTG_HS_HOST_OTG_HS_HCTSIZ6_XFRSIZ_Msk (0x7ffffUL)           /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_HS_HOST_OTG_HS_HCTSIZ6_PKTCNT_Pos (19UL)                /*!< PKTCNT (Bit 19)                                       */
#define OTG_HS_HOST_OTG_HS_HCTSIZ6_PKTCNT_Msk (0x1ff80000UL)        /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_HS_HOST_OTG_HS_HCTSIZ6_DPID_Pos (29UL)                  /*!< DPID (Bit 29)                                         */
#define OTG_HS_HOST_OTG_HS_HCTSIZ6_DPID_Msk (0x60000000UL)          /*!< DPID (Bitfield-Mask: 0x03)                            */
/* ====================================================  OTG_HS_HCTSIZ7  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCTSIZ7_XFRSIZ_Pos (0UL)                 /*!< XFRSIZ (Bit 0)                                        */
#define OTG_HS_HOST_OTG_HS_HCTSIZ7_XFRSIZ_Msk (0x7ffffUL)           /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_HS_HOST_OTG_HS_HCTSIZ7_PKTCNT_Pos (19UL)                /*!< PKTCNT (Bit 19)                                       */
#define OTG_HS_HOST_OTG_HS_HCTSIZ7_PKTCNT_Msk (0x1ff80000UL)        /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_HS_HOST_OTG_HS_HCTSIZ7_DPID_Pos (29UL)                  /*!< DPID (Bit 29)                                         */
#define OTG_HS_HOST_OTG_HS_HCTSIZ7_DPID_Msk (0x60000000UL)          /*!< DPID (Bitfield-Mask: 0x03)                            */
/* ====================================================  OTG_HS_HCTSIZ8  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCTSIZ8_XFRSIZ_Pos (0UL)                 /*!< XFRSIZ (Bit 0)                                        */
#define OTG_HS_HOST_OTG_HS_HCTSIZ8_XFRSIZ_Msk (0x7ffffUL)           /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_HS_HOST_OTG_HS_HCTSIZ8_PKTCNT_Pos (19UL)                /*!< PKTCNT (Bit 19)                                       */
#define OTG_HS_HOST_OTG_HS_HCTSIZ8_PKTCNT_Msk (0x1ff80000UL)        /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_HS_HOST_OTG_HS_HCTSIZ8_DPID_Pos (29UL)                  /*!< DPID (Bit 29)                                         */
#define OTG_HS_HOST_OTG_HS_HCTSIZ8_DPID_Msk (0x60000000UL)          /*!< DPID (Bitfield-Mask: 0x03)                            */
/* ====================================================  OTG_HS_HCTSIZ9  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCTSIZ9_XFRSIZ_Pos (0UL)                 /*!< XFRSIZ (Bit 0)                                        */
#define OTG_HS_HOST_OTG_HS_HCTSIZ9_XFRSIZ_Msk (0x7ffffUL)           /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_HS_HOST_OTG_HS_HCTSIZ9_PKTCNT_Pos (19UL)                /*!< PKTCNT (Bit 19)                                       */
#define OTG_HS_HOST_OTG_HS_HCTSIZ9_PKTCNT_Msk (0x1ff80000UL)        /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_HS_HOST_OTG_HS_HCTSIZ9_DPID_Pos (29UL)                  /*!< DPID (Bit 29)                                         */
#define OTG_HS_HOST_OTG_HS_HCTSIZ9_DPID_Msk (0x60000000UL)          /*!< DPID (Bitfield-Mask: 0x03)                            */
/* ====================================================  OTG_HS_HCTSIZ10  ==================================================== */
#define OTG_HS_HOST_OTG_HS_HCTSIZ10_XFRSIZ_Pos (0UL)                /*!< XFRSIZ (Bit 0)                                        */
#define OTG_HS_HOST_OTG_HS_HCTSIZ10_XFRSIZ_Msk (0x7ffffUL)          /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_HS_HOST_OTG_HS_HCTSIZ10_PKTCNT_Pos (19UL)               /*!< PKTCNT (Bit 19)                                       */
#define OTG_HS_HOST_OTG_HS_HCTSIZ10_PKTCNT_Msk (0x1ff80000UL)       /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_HS_HOST_OTG_HS_HCTSIZ10_DPID_Pos (29UL)                 /*!< DPID (Bit 29)                                         */
#define OTG_HS_HOST_OTG_HS_HCTSIZ10_DPID_Msk (0x60000000UL)         /*!< DPID (Bitfield-Mask: 0x03)                            */
/* ====================================================  OTG_HS_HCTSIZ11  ==================================================== */
#define OTG_HS_HOST_OTG_HS_HCTSIZ11_XFRSIZ_Pos (0UL)                /*!< XFRSIZ (Bit 0)                                        */
#define OTG_HS_HOST_OTG_HS_HCTSIZ11_XFRSIZ_Msk (0x7ffffUL)          /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_HS_HOST_OTG_HS_HCTSIZ11_PKTCNT_Pos (19UL)               /*!< PKTCNT (Bit 19)                                       */
#define OTG_HS_HOST_OTG_HS_HCTSIZ11_PKTCNT_Msk (0x1ff80000UL)       /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_HS_HOST_OTG_HS_HCTSIZ11_DPID_Pos (29UL)                 /*!< DPID (Bit 29)                                         */
#define OTG_HS_HOST_OTG_HS_HCTSIZ11_DPID_Msk (0x60000000UL)         /*!< DPID (Bitfield-Mask: 0x03)                            */
/* =====================================================  OTG_HS_HCDMA0  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCDMA0_DMAADDR_Pos (0UL)                 /*!< DMAADDR (Bit 0)                                       */
#define OTG_HS_HOST_OTG_HS_HCDMA0_DMAADDR_Msk (0xffffffffUL)        /*!< DMAADDR (Bitfield-Mask: 0xffffffff)                   */
/* =====================================================  OTG_HS_HCDMA1  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCDMA1_DMAADDR_Pos (0UL)                 /*!< DMAADDR (Bit 0)                                       */
#define OTG_HS_HOST_OTG_HS_HCDMA1_DMAADDR_Msk (0xffffffffUL)        /*!< DMAADDR (Bitfield-Mask: 0xffffffff)                   */
/* =====================================================  OTG_HS_HCDMA2  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCDMA2_DMAADDR_Pos (0UL)                 /*!< DMAADDR (Bit 0)                                       */
#define OTG_HS_HOST_OTG_HS_HCDMA2_DMAADDR_Msk (0xffffffffUL)        /*!< DMAADDR (Bitfield-Mask: 0xffffffff)                   */
/* =====================================================  OTG_HS_HCDMA3  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCDMA3_DMAADDR_Pos (0UL)                 /*!< DMAADDR (Bit 0)                                       */
#define OTG_HS_HOST_OTG_HS_HCDMA3_DMAADDR_Msk (0xffffffffUL)        /*!< DMAADDR (Bitfield-Mask: 0xffffffff)                   */
/* =====================================================  OTG_HS_HCDMA4  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCDMA4_DMAADDR_Pos (0UL)                 /*!< DMAADDR (Bit 0)                                       */
#define OTG_HS_HOST_OTG_HS_HCDMA4_DMAADDR_Msk (0xffffffffUL)        /*!< DMAADDR (Bitfield-Mask: 0xffffffff)                   */
/* =====================================================  OTG_HS_HCDMA5  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCDMA5_DMAADDR_Pos (0UL)                 /*!< DMAADDR (Bit 0)                                       */
#define OTG_HS_HOST_OTG_HS_HCDMA5_DMAADDR_Msk (0xffffffffUL)        /*!< DMAADDR (Bitfield-Mask: 0xffffffff)                   */
/* =====================================================  OTG_HS_HCDMA6  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCDMA6_DMAADDR_Pos (0UL)                 /*!< DMAADDR (Bit 0)                                       */
#define OTG_HS_HOST_OTG_HS_HCDMA6_DMAADDR_Msk (0xffffffffUL)        /*!< DMAADDR (Bitfield-Mask: 0xffffffff)                   */
/* =====================================================  OTG_HS_HCDMA7  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCDMA7_DMAADDR_Pos (0UL)                 /*!< DMAADDR (Bit 0)                                       */
#define OTG_HS_HOST_OTG_HS_HCDMA7_DMAADDR_Msk (0xffffffffUL)        /*!< DMAADDR (Bitfield-Mask: 0xffffffff)                   */
/* =====================================================  OTG_HS_HCDMA8  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCDMA8_DMAADDR_Pos (0UL)                 /*!< DMAADDR (Bit 0)                                       */
#define OTG_HS_HOST_OTG_HS_HCDMA8_DMAADDR_Msk (0xffffffffUL)        /*!< DMAADDR (Bitfield-Mask: 0xffffffff)                   */
/* =====================================================  OTG_HS_HCDMA9  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCDMA9_DMAADDR_Pos (0UL)                 /*!< DMAADDR (Bit 0)                                       */
#define OTG_HS_HOST_OTG_HS_HCDMA9_DMAADDR_Msk (0xffffffffUL)        /*!< DMAADDR (Bitfield-Mask: 0xffffffff)                   */
/* ====================================================  OTG_HS_HCDMA10  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCDMA10_DMAADDR_Pos (0UL)                /*!< DMAADDR (Bit 0)                                       */
#define OTG_HS_HOST_OTG_HS_HCDMA10_DMAADDR_Msk (0xffffffffUL)       /*!< DMAADDR (Bitfield-Mask: 0xffffffff)                   */
/* ====================================================  OTG_HS_HCDMA11  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCDMA11_DMAADDR_Pos (0UL)                /*!< DMAADDR (Bit 0)                                       */
#define OTG_HS_HOST_OTG_HS_HCDMA11_DMAADDR_Msk (0xffffffffUL)       /*!< DMAADDR (Bitfield-Mask: 0xffffffff)                   */
/* ====================================================  OTG_HS_HCCHAR12  ==================================================== */
#define OTG_HS_HOST_OTG_HS_HCCHAR12_MPSIZ_Pos (0UL)                 /*!< MPSIZ (Bit 0)                                         */
#define OTG_HS_HOST_OTG_HS_HCCHAR12_MPSIZ_Msk (0x7ffUL)             /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR12_EPNUM_Pos (11UL)                /*!< EPNUM (Bit 11)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR12_EPNUM_Msk (0x7800UL)            /*!< EPNUM (Bitfield-Mask: 0x0f)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR12_EPDIR_Pos (15UL)                /*!< EPDIR (Bit 15)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR12_EPDIR_Msk (0x8000UL)            /*!< EPDIR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR12_LSDEV_Pos (17UL)                /*!< LSDEV (Bit 17)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR12_LSDEV_Msk (0x20000UL)           /*!< LSDEV (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR12_EPTYP_Pos (18UL)                /*!< EPTYP (Bit 18)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR12_EPTYP_Msk (0xc0000UL)           /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR12_MC_Pos (20UL)                   /*!< MC (Bit 20)                                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR12_MC_Msk (0x300000UL)             /*!< MC (Bitfield-Mask: 0x03)                              */
#define OTG_HS_HOST_OTG_HS_HCCHAR12_DAD_Pos (22UL)                  /*!< DAD (Bit 22)                                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR12_DAD_Msk (0x1fc00000UL)          /*!< DAD (Bitfield-Mask: 0x7f)                             */
#define OTG_HS_HOST_OTG_HS_HCCHAR12_ODDFRM_Pos (29UL)               /*!< ODDFRM (Bit 29)                                       */
#define OTG_HS_HOST_OTG_HS_HCCHAR12_ODDFRM_Msk (0x20000000UL)       /*!< ODDFRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR12_CHDIS_Pos (30UL)                /*!< CHDIS (Bit 30)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR12_CHDIS_Msk (0x40000000UL)        /*!< CHDIS (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR12_CHENA_Pos (31UL)                /*!< CHENA (Bit 31)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR12_CHENA_Msk (0x80000000UL)        /*!< CHENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_HS_HCSPLT12  ==================================================== */
#define OTG_HS_HOST_OTG_HS_HCSPLT12_PRTADDR_Pos (0UL)               /*!< PRTADDR (Bit 0)                                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT12_PRTADDR_Msk (0x7fUL)            /*!< PRTADDR (Bitfield-Mask: 0x7f)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT12_HUBADDR_Pos (7UL)               /*!< HUBADDR (Bit 7)                                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT12_HUBADDR_Msk (0x3f80UL)          /*!< HUBADDR (Bitfield-Mask: 0x7f)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT12_XACTPOS_Pos (14UL)              /*!< XACTPOS (Bit 14)                                      */
#define OTG_HS_HOST_OTG_HS_HCSPLT12_XACTPOS_Msk (0xc000UL)          /*!< XACTPOS (Bitfield-Mask: 0x03)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT12_COMPLSPLT_Pos (16UL)            /*!< COMPLSPLT (Bit 16)                                    */
#define OTG_HS_HOST_OTG_HS_HCSPLT12_COMPLSPLT_Msk (0x10000UL)       /*!< COMPLSPLT (Bitfield-Mask: 0x01)                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT12_SPLITEN_Pos (31UL)              /*!< SPLITEN (Bit 31)                                      */
#define OTG_HS_HOST_OTG_HS_HCSPLT12_SPLITEN_Msk (0x80000000UL)      /*!< SPLITEN (Bitfield-Mask: 0x01)                         */
/* ====================================================  OTG_HS_HCINT12  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCINT12_XFRC_Pos (0UL)                   /*!< XFRC (Bit 0)                                          */
#define OTG_HS_HOST_OTG_HS_HCINT12_XFRC_Msk (0x1UL)                 /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINT12_CHH_Pos (1UL)                    /*!< CHH (Bit 1)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT12_CHH_Msk (0x2UL)                  /*!< CHH (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT12_AHBERR_Pos (2UL)                 /*!< AHBERR (Bit 2)                                        */
#define OTG_HS_HOST_OTG_HS_HCINT12_AHBERR_Msk (0x4UL)               /*!< AHBERR (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINT12_STALL_Pos (3UL)                  /*!< STALL (Bit 3)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT12_STALL_Msk (0x8UL)                /*!< STALL (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT12_NAK_Pos (4UL)                    /*!< NAK (Bit 4)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT12_NAK_Msk (0x10UL)                 /*!< NAK (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT12_ACK_Pos (5UL)                    /*!< ACK (Bit 5)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT12_ACK_Msk (0x20UL)                 /*!< ACK (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT12_NYET_Pos (6UL)                   /*!< NYET (Bit 6)                                          */
#define OTG_HS_HOST_OTG_HS_HCINT12_NYET_Msk (0x40UL)                /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINT12_TXERR_Pos (7UL)                  /*!< TXERR (Bit 7)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT12_TXERR_Msk (0x80UL)               /*!< TXERR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT12_BBERR_Pos (8UL)                  /*!< BBERR (Bit 8)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT12_BBERR_Msk (0x100UL)              /*!< BBERR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT12_FRMOR_Pos (9UL)                  /*!< FRMOR (Bit 9)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT12_FRMOR_Msk (0x200UL)              /*!< FRMOR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT12_DTERR_Pos (10UL)                 /*!< DTERR (Bit 10)                                        */
#define OTG_HS_HOST_OTG_HS_HCINT12_DTERR_Msk (0x400UL)              /*!< DTERR (Bitfield-Mask: 0x01)                           */
/* ===================================================  OTG_HS_HCINTMSK12  =================================================== */
#define OTG_HS_HOST_OTG_HS_HCINTMSK12_XFRCM_Pos (0UL)               /*!< XFRCM (Bit 0)                                         */
#define OTG_HS_HOST_OTG_HS_HCINTMSK12_XFRCM_Msk (0x1UL)             /*!< XFRCM (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINTMSK12_CHHM_Pos (1UL)                /*!< CHHM (Bit 1)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK12_CHHM_Msk (0x2UL)              /*!< CHHM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK12_AHBERR_Pos (2UL)              /*!< AHBERR (Bit 2)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK12_AHBERR_Msk (0x4UL)            /*!< AHBERR (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK12_STALLM_Pos (3UL)              /*!< STALLM (Bit 3)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK12_STALLM_Msk (0x8UL)            /*!< STALLM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK12_NAKM_Pos (4UL)                /*!< NAKM (Bit 4)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK12_NAKM_Msk (0x10UL)             /*!< NAKM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK12_ACKM_Pos (5UL)                /*!< ACKM (Bit 5)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK12_ACKM_Msk (0x20UL)             /*!< ACKM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK12_NYET_Pos (6UL)                /*!< NYET (Bit 6)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK12_NYET_Msk (0x40UL)             /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK12_TXERRM_Pos (7UL)              /*!< TXERRM (Bit 7)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK12_TXERRM_Msk (0x80UL)           /*!< TXERRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK12_BBERRM_Pos (8UL)              /*!< BBERRM (Bit 8)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK12_BBERRM_Msk (0x100UL)          /*!< BBERRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK12_FRMORM_Pos (9UL)              /*!< FRMORM (Bit 9)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK12_FRMORM_Msk (0x200UL)          /*!< FRMORM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK12_DTERRM_Pos (10UL)             /*!< DTERRM (Bit 10)                                       */
#define OTG_HS_HOST_OTG_HS_HCINTMSK12_DTERRM_Msk (0x400UL)          /*!< DTERRM (Bitfield-Mask: 0x01)                          */
/* ====================================================  OTG_HS_HCTSIZ12  ==================================================== */
#define OTG_HS_HOST_OTG_HS_HCTSIZ12_XFRSIZ_Pos (0UL)                /*!< XFRSIZ (Bit 0)                                        */
#define OTG_HS_HOST_OTG_HS_HCTSIZ12_XFRSIZ_Msk (0x7ffffUL)          /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_HS_HOST_OTG_HS_HCTSIZ12_PKTCNT_Pos (19UL)               /*!< PKTCNT (Bit 19)                                       */
#define OTG_HS_HOST_OTG_HS_HCTSIZ12_PKTCNT_Msk (0x1ff80000UL)       /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_HS_HOST_OTG_HS_HCTSIZ12_DPID_Pos (29UL)                 /*!< DPID (Bit 29)                                         */
#define OTG_HS_HOST_OTG_HS_HCTSIZ12_DPID_Msk (0x60000000UL)         /*!< DPID (Bitfield-Mask: 0x03)                            */
/* ====================================================  OTG_HS_HCDMA12  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCDMA12_DMAADDR_Pos (0UL)                /*!< DMAADDR (Bit 0)                                       */
#define OTG_HS_HOST_OTG_HS_HCDMA12_DMAADDR_Msk (0xffffffffUL)       /*!< DMAADDR (Bitfield-Mask: 0xffffffff)                   */
/* ====================================================  OTG_HS_HCCHAR13  ==================================================== */
#define OTG_HS_HOST_OTG_HS_HCCHAR13_MPSIZ_Pos (0UL)                 /*!< MPSIZ (Bit 0)                                         */
#define OTG_HS_HOST_OTG_HS_HCCHAR13_MPSIZ_Msk (0x7ffUL)             /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR13_EPNUM_Pos (11UL)                /*!< EPNUM (Bit 11)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR13_EPNUM_Msk (0x7800UL)            /*!< EPNUM (Bitfield-Mask: 0x0f)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR13_EPDIR_Pos (15UL)                /*!< EPDIR (Bit 15)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR13_EPDIR_Msk (0x8000UL)            /*!< EPDIR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR13_LSDEV_Pos (17UL)                /*!< LSDEV (Bit 17)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR13_LSDEV_Msk (0x20000UL)           /*!< LSDEV (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR13_EPTYP_Pos (18UL)                /*!< EPTYP (Bit 18)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR13_EPTYP_Msk (0xc0000UL)           /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR13_MC_Pos (20UL)                   /*!< MC (Bit 20)                                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR13_MC_Msk (0x300000UL)             /*!< MC (Bitfield-Mask: 0x03)                              */
#define OTG_HS_HOST_OTG_HS_HCCHAR13_DAD_Pos (22UL)                  /*!< DAD (Bit 22)                                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR13_DAD_Msk (0x1fc00000UL)          /*!< DAD (Bitfield-Mask: 0x7f)                             */
#define OTG_HS_HOST_OTG_HS_HCCHAR13_ODDFRM_Pos (29UL)               /*!< ODDFRM (Bit 29)                                       */
#define OTG_HS_HOST_OTG_HS_HCCHAR13_ODDFRM_Msk (0x20000000UL)       /*!< ODDFRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR13_CHDIS_Pos (30UL)                /*!< CHDIS (Bit 30)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR13_CHDIS_Msk (0x40000000UL)        /*!< CHDIS (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR13_CHENA_Pos (31UL)                /*!< CHENA (Bit 31)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR13_CHENA_Msk (0x80000000UL)        /*!< CHENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_HS_HCSPLT13  ==================================================== */
#define OTG_HS_HOST_OTG_HS_HCSPLT13_PRTADDR_Pos (0UL)               /*!< PRTADDR (Bit 0)                                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT13_PRTADDR_Msk (0x7fUL)            /*!< PRTADDR (Bitfield-Mask: 0x7f)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT13_HUBADDR_Pos (7UL)               /*!< HUBADDR (Bit 7)                                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT13_HUBADDR_Msk (0x3f80UL)          /*!< HUBADDR (Bitfield-Mask: 0x7f)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT13_XACTPOS_Pos (14UL)              /*!< XACTPOS (Bit 14)                                      */
#define OTG_HS_HOST_OTG_HS_HCSPLT13_XACTPOS_Msk (0xc000UL)          /*!< XACTPOS (Bitfield-Mask: 0x03)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT13_COMPLSPLT_Pos (16UL)            /*!< COMPLSPLT (Bit 16)                                    */
#define OTG_HS_HOST_OTG_HS_HCSPLT13_COMPLSPLT_Msk (0x10000UL)       /*!< COMPLSPLT (Bitfield-Mask: 0x01)                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT13_SPLITEN_Pos (31UL)              /*!< SPLITEN (Bit 31)                                      */
#define OTG_HS_HOST_OTG_HS_HCSPLT13_SPLITEN_Msk (0x80000000UL)      /*!< SPLITEN (Bitfield-Mask: 0x01)                         */
/* ====================================================  OTG_HS_HCINT13  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCINT13_XFRC_Pos (0UL)                   /*!< XFRC (Bit 0)                                          */
#define OTG_HS_HOST_OTG_HS_HCINT13_XFRC_Msk (0x1UL)                 /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINT13_CHH_Pos (1UL)                    /*!< CHH (Bit 1)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT13_CHH_Msk (0x2UL)                  /*!< CHH (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT13_AHBERR_Pos (2UL)                 /*!< AHBERR (Bit 2)                                        */
#define OTG_HS_HOST_OTG_HS_HCINT13_AHBERR_Msk (0x4UL)               /*!< AHBERR (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINT13_STALL_Pos (3UL)                  /*!< STALL (Bit 3)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT13_STALL_Msk (0x8UL)                /*!< STALL (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT13_NAK_Pos (4UL)                    /*!< NAK (Bit 4)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT13_NAK_Msk (0x10UL)                 /*!< NAK (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT13_ACK_Pos (5UL)                    /*!< ACK (Bit 5)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT13_ACK_Msk (0x20UL)                 /*!< ACK (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT13_NYET_Pos (6UL)                   /*!< NYET (Bit 6)                                          */
#define OTG_HS_HOST_OTG_HS_HCINT13_NYET_Msk (0x40UL)                /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINT13_TXERR_Pos (7UL)                  /*!< TXERR (Bit 7)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT13_TXERR_Msk (0x80UL)               /*!< TXERR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT13_BBERR_Pos (8UL)                  /*!< BBERR (Bit 8)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT13_BBERR_Msk (0x100UL)              /*!< BBERR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT13_FRMOR_Pos (9UL)                  /*!< FRMOR (Bit 9)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT13_FRMOR_Msk (0x200UL)              /*!< FRMOR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT13_DTERR_Pos (10UL)                 /*!< DTERR (Bit 10)                                        */
#define OTG_HS_HOST_OTG_HS_HCINT13_DTERR_Msk (0x400UL)              /*!< DTERR (Bitfield-Mask: 0x01)                           */
/* ===================================================  OTG_HS_HCINTMSK13  =================================================== */
#define OTG_HS_HOST_OTG_HS_HCINTMSK13_XFRCM_Pos (0UL)               /*!< XFRCM (Bit 0)                                         */
#define OTG_HS_HOST_OTG_HS_HCINTMSK13_XFRCM_Msk (0x1UL)             /*!< XFRCM (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINTMSK13_CHHM_Pos (1UL)                /*!< CHHM (Bit 1)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK13_CHHM_Msk (0x2UL)              /*!< CHHM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK13_AHBERR_Pos (2UL)              /*!< AHBERR (Bit 2)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK13_AHBERR_Msk (0x4UL)            /*!< AHBERR (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK13_STALLM_Pos (3UL)              /*!< STALLM (Bit 3)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK13_STALLM_Msk (0x8UL)            /*!< STALLM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK13_NAKM_Pos (4UL)                /*!< NAKM (Bit 4)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK13_NAKM_Msk (0x10UL)             /*!< NAKM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK13_ACKM_Pos (5UL)                /*!< ACKM (Bit 5)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK13_ACKM_Msk (0x20UL)             /*!< ACKM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK13_NYET_Pos (6UL)                /*!< NYET (Bit 6)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK13_NYET_Msk (0x40UL)             /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK13_TXERRM_Pos (7UL)              /*!< TXERRM (Bit 7)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK13_TXERRM_Msk (0x80UL)           /*!< TXERRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK13_BBERRM_Pos (8UL)              /*!< BBERRM (Bit 8)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK13_BBERRM_Msk (0x100UL)          /*!< BBERRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK13_FRMORM_Pos (9UL)              /*!< FRMORM (Bit 9)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK13_FRMORM_Msk (0x200UL)          /*!< FRMORM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK13_DTERRM_Pos (10UL)             /*!< DTERRM (Bit 10)                                       */
#define OTG_HS_HOST_OTG_HS_HCINTMSK13_DTERRM_Msk (0x400UL)          /*!< DTERRM (Bitfield-Mask: 0x01)                          */
/* ====================================================  OTG_HS_HCTSIZ13  ==================================================== */
#define OTG_HS_HOST_OTG_HS_HCTSIZ13_XFRSIZ_Pos (0UL)                /*!< XFRSIZ (Bit 0)                                        */
#define OTG_HS_HOST_OTG_HS_HCTSIZ13_XFRSIZ_Msk (0x7ffffUL)          /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_HS_HOST_OTG_HS_HCTSIZ13_PKTCNT_Pos (19UL)               /*!< PKTCNT (Bit 19)                                       */
#define OTG_HS_HOST_OTG_HS_HCTSIZ13_PKTCNT_Msk (0x1ff80000UL)       /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_HS_HOST_OTG_HS_HCTSIZ13_DPID_Pos (29UL)                 /*!< DPID (Bit 29)                                         */
#define OTG_HS_HOST_OTG_HS_HCTSIZ13_DPID_Msk (0x60000000UL)         /*!< DPID (Bitfield-Mask: 0x03)                            */
/* ====================================================  OTG_HS_HCDMA13  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCDMA13_DMAADDR_Pos (0UL)                /*!< DMAADDR (Bit 0)                                       */
#define OTG_HS_HOST_OTG_HS_HCDMA13_DMAADDR_Msk (0xffffffffUL)       /*!< DMAADDR (Bitfield-Mask: 0xffffffff)                   */
/* ====================================================  OTG_HS_HCCHAR14  ==================================================== */
#define OTG_HS_HOST_OTG_HS_HCCHAR14_MPSIZ_Pos (0UL)                 /*!< MPSIZ (Bit 0)                                         */
#define OTG_HS_HOST_OTG_HS_HCCHAR14_MPSIZ_Msk (0x7ffUL)             /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR14_EPNUM_Pos (11UL)                /*!< EPNUM (Bit 11)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR14_EPNUM_Msk (0x7800UL)            /*!< EPNUM (Bitfield-Mask: 0x0f)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR14_EPDIR_Pos (15UL)                /*!< EPDIR (Bit 15)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR14_EPDIR_Msk (0x8000UL)            /*!< EPDIR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR14_LSDEV_Pos (17UL)                /*!< LSDEV (Bit 17)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR14_LSDEV_Msk (0x20000UL)           /*!< LSDEV (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR14_EPTYP_Pos (18UL)                /*!< EPTYP (Bit 18)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR14_EPTYP_Msk (0xc0000UL)           /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR14_MC_Pos (20UL)                   /*!< MC (Bit 20)                                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR14_MC_Msk (0x300000UL)             /*!< MC (Bitfield-Mask: 0x03)                              */
#define OTG_HS_HOST_OTG_HS_HCCHAR14_DAD_Pos (22UL)                  /*!< DAD (Bit 22)                                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR14_DAD_Msk (0x1fc00000UL)          /*!< DAD (Bitfield-Mask: 0x7f)                             */
#define OTG_HS_HOST_OTG_HS_HCCHAR14_ODDFRM_Pos (29UL)               /*!< ODDFRM (Bit 29)                                       */
#define OTG_HS_HOST_OTG_HS_HCCHAR14_ODDFRM_Msk (0x20000000UL)       /*!< ODDFRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR14_CHDIS_Pos (30UL)                /*!< CHDIS (Bit 30)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR14_CHDIS_Msk (0x40000000UL)        /*!< CHDIS (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR14_CHENA_Pos (31UL)                /*!< CHENA (Bit 31)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR14_CHENA_Msk (0x80000000UL)        /*!< CHENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_HS_HCSPLT14  ==================================================== */
#define OTG_HS_HOST_OTG_HS_HCSPLT14_PRTADDR_Pos (0UL)               /*!< PRTADDR (Bit 0)                                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT14_PRTADDR_Msk (0x7fUL)            /*!< PRTADDR (Bitfield-Mask: 0x7f)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT14_HUBADDR_Pos (7UL)               /*!< HUBADDR (Bit 7)                                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT14_HUBADDR_Msk (0x3f80UL)          /*!< HUBADDR (Bitfield-Mask: 0x7f)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT14_XACTPOS_Pos (14UL)              /*!< XACTPOS (Bit 14)                                      */
#define OTG_HS_HOST_OTG_HS_HCSPLT14_XACTPOS_Msk (0xc000UL)          /*!< XACTPOS (Bitfield-Mask: 0x03)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT14_COMPLSPLT_Pos (16UL)            /*!< COMPLSPLT (Bit 16)                                    */
#define OTG_HS_HOST_OTG_HS_HCSPLT14_COMPLSPLT_Msk (0x10000UL)       /*!< COMPLSPLT (Bitfield-Mask: 0x01)                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT14_SPLITEN_Pos (31UL)              /*!< SPLITEN (Bit 31)                                      */
#define OTG_HS_HOST_OTG_HS_HCSPLT14_SPLITEN_Msk (0x80000000UL)      /*!< SPLITEN (Bitfield-Mask: 0x01)                         */
/* ====================================================  OTG_HS_HCINT14  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCINT14_XFRC_Pos (0UL)                   /*!< XFRC (Bit 0)                                          */
#define OTG_HS_HOST_OTG_HS_HCINT14_XFRC_Msk (0x1UL)                 /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINT14_CHH_Pos (1UL)                    /*!< CHH (Bit 1)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT14_CHH_Msk (0x2UL)                  /*!< CHH (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT14_AHBERR_Pos (2UL)                 /*!< AHBERR (Bit 2)                                        */
#define OTG_HS_HOST_OTG_HS_HCINT14_AHBERR_Msk (0x4UL)               /*!< AHBERR (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINT14_STALL_Pos (3UL)                  /*!< STALL (Bit 3)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT14_STALL_Msk (0x8UL)                /*!< STALL (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT14_NAK_Pos (4UL)                    /*!< NAK (Bit 4)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT14_NAK_Msk (0x10UL)                 /*!< NAK (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT14_ACK_Pos (5UL)                    /*!< ACK (Bit 5)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT14_ACK_Msk (0x20UL)                 /*!< ACK (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT14_NYET_Pos (6UL)                   /*!< NYET (Bit 6)                                          */
#define OTG_HS_HOST_OTG_HS_HCINT14_NYET_Msk (0x40UL)                /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINT14_TXERR_Pos (7UL)                  /*!< TXERR (Bit 7)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT14_TXERR_Msk (0x80UL)               /*!< TXERR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT14_BBERR_Pos (8UL)                  /*!< BBERR (Bit 8)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT14_BBERR_Msk (0x100UL)              /*!< BBERR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT14_FRMOR_Pos (9UL)                  /*!< FRMOR (Bit 9)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT14_FRMOR_Msk (0x200UL)              /*!< FRMOR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT14_DTERR_Pos (10UL)                 /*!< DTERR (Bit 10)                                        */
#define OTG_HS_HOST_OTG_HS_HCINT14_DTERR_Msk (0x400UL)              /*!< DTERR (Bitfield-Mask: 0x01)                           */
/* ===================================================  OTG_HS_HCINTMSK14  =================================================== */
#define OTG_HS_HOST_OTG_HS_HCINTMSK14_XFRCM_Pos (0UL)               /*!< XFRCM (Bit 0)                                         */
#define OTG_HS_HOST_OTG_HS_HCINTMSK14_XFRCM_Msk (0x1UL)             /*!< XFRCM (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINTMSK14_CHHM_Pos (1UL)                /*!< CHHM (Bit 1)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK14_CHHM_Msk (0x2UL)              /*!< CHHM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK14_AHBERR_Pos (2UL)              /*!< AHBERR (Bit 2)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK14_AHBERR_Msk (0x4UL)            /*!< AHBERR (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK14_STALLM_Pos (3UL)              /*!< STALLM (Bit 3)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK14_STALLM_Msk (0x8UL)            /*!< STALLM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK14_NAKM_Pos (4UL)                /*!< NAKM (Bit 4)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK14_NAKM_Msk (0x10UL)             /*!< NAKM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK14_ACKM_Pos (5UL)                /*!< ACKM (Bit 5)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK14_ACKM_Msk (0x20UL)             /*!< ACKM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK14_NYET_Pos (6UL)                /*!< NYET (Bit 6)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK14_NYET_Msk (0x40UL)             /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK14_TXERRM_Pos (7UL)              /*!< TXERRM (Bit 7)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK14_TXERRM_Msk (0x80UL)           /*!< TXERRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK14_BBERRM_Pos (8UL)              /*!< BBERRM (Bit 8)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK14_BBERRM_Msk (0x100UL)          /*!< BBERRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK14_FRMORM_Pos (9UL)              /*!< FRMORM (Bit 9)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK14_FRMORM_Msk (0x200UL)          /*!< FRMORM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK14_DTERRM_Pos (10UL)             /*!< DTERRM (Bit 10)                                       */
#define OTG_HS_HOST_OTG_HS_HCINTMSK14_DTERRM_Msk (0x400UL)          /*!< DTERRM (Bitfield-Mask: 0x01)                          */
/* ====================================================  OTG_HS_HCTSIZ14  ==================================================== */
#define OTG_HS_HOST_OTG_HS_HCTSIZ14_XFRSIZ_Pos (0UL)                /*!< XFRSIZ (Bit 0)                                        */
#define OTG_HS_HOST_OTG_HS_HCTSIZ14_XFRSIZ_Msk (0x7ffffUL)          /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_HS_HOST_OTG_HS_HCTSIZ14_PKTCNT_Pos (19UL)               /*!< PKTCNT (Bit 19)                                       */
#define OTG_HS_HOST_OTG_HS_HCTSIZ14_PKTCNT_Msk (0x1ff80000UL)       /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_HS_HOST_OTG_HS_HCTSIZ14_DPID_Pos (29UL)                 /*!< DPID (Bit 29)                                         */
#define OTG_HS_HOST_OTG_HS_HCTSIZ14_DPID_Msk (0x60000000UL)         /*!< DPID (Bitfield-Mask: 0x03)                            */
/* ====================================================  OTG_HS_HCDMA14  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCDMA14_DMAADDR_Pos (0UL)                /*!< DMAADDR (Bit 0)                                       */
#define OTG_HS_HOST_OTG_HS_HCDMA14_DMAADDR_Msk (0xffffffffUL)       /*!< DMAADDR (Bitfield-Mask: 0xffffffff)                   */
/* ====================================================  OTG_HS_HCCHAR15  ==================================================== */
#define OTG_HS_HOST_OTG_HS_HCCHAR15_MPSIZ_Pos (0UL)                 /*!< MPSIZ (Bit 0)                                         */
#define OTG_HS_HOST_OTG_HS_HCCHAR15_MPSIZ_Msk (0x7ffUL)             /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR15_EPNUM_Pos (11UL)                /*!< EPNUM (Bit 11)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR15_EPNUM_Msk (0x7800UL)            /*!< EPNUM (Bitfield-Mask: 0x0f)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR15_EPDIR_Pos (15UL)                /*!< EPDIR (Bit 15)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR15_EPDIR_Msk (0x8000UL)            /*!< EPDIR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR15_LSDEV_Pos (17UL)                /*!< LSDEV (Bit 17)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR15_LSDEV_Msk (0x20000UL)           /*!< LSDEV (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR15_EPTYP_Pos (18UL)                /*!< EPTYP (Bit 18)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR15_EPTYP_Msk (0xc0000UL)           /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR15_MC_Pos (20UL)                   /*!< MC (Bit 20)                                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR15_MC_Msk (0x300000UL)             /*!< MC (Bitfield-Mask: 0x03)                              */
#define OTG_HS_HOST_OTG_HS_HCCHAR15_DAD_Pos (22UL)                  /*!< DAD (Bit 22)                                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR15_DAD_Msk (0x1fc00000UL)          /*!< DAD (Bitfield-Mask: 0x7f)                             */
#define OTG_HS_HOST_OTG_HS_HCCHAR15_ODDFRM_Pos (29UL)               /*!< ODDFRM (Bit 29)                                       */
#define OTG_HS_HOST_OTG_HS_HCCHAR15_ODDFRM_Msk (0x20000000UL)       /*!< ODDFRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCCHAR15_CHDIS_Pos (30UL)                /*!< CHDIS (Bit 30)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR15_CHDIS_Msk (0x40000000UL)        /*!< CHDIS (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCCHAR15_CHENA_Pos (31UL)                /*!< CHENA (Bit 31)                                        */
#define OTG_HS_HOST_OTG_HS_HCCHAR15_CHENA_Msk (0x80000000UL)        /*!< CHENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_HS_HCSPLT15  ==================================================== */
#define OTG_HS_HOST_OTG_HS_HCSPLT15_PRTADDR_Pos (0UL)               /*!< PRTADDR (Bit 0)                                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT15_PRTADDR_Msk (0x7fUL)            /*!< PRTADDR (Bitfield-Mask: 0x7f)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT15_HUBADDR_Pos (7UL)               /*!< HUBADDR (Bit 7)                                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT15_HUBADDR_Msk (0x3f80UL)          /*!< HUBADDR (Bitfield-Mask: 0x7f)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT15_XACTPOS_Pos (14UL)              /*!< XACTPOS (Bit 14)                                      */
#define OTG_HS_HOST_OTG_HS_HCSPLT15_XACTPOS_Msk (0xc000UL)          /*!< XACTPOS (Bitfield-Mask: 0x03)                         */
#define OTG_HS_HOST_OTG_HS_HCSPLT15_COMPLSPLT_Pos (16UL)            /*!< COMPLSPLT (Bit 16)                                    */
#define OTG_HS_HOST_OTG_HS_HCSPLT15_COMPLSPLT_Msk (0x10000UL)       /*!< COMPLSPLT (Bitfield-Mask: 0x01)                       */
#define OTG_HS_HOST_OTG_HS_HCSPLT15_SPLITEN_Pos (31UL)              /*!< SPLITEN (Bit 31)                                      */
#define OTG_HS_HOST_OTG_HS_HCSPLT15_SPLITEN_Msk (0x80000000UL)      /*!< SPLITEN (Bitfield-Mask: 0x01)                         */
/* ====================================================  OTG_HS_HCINT15  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCINT15_XFRC_Pos (0UL)                   /*!< XFRC (Bit 0)                                          */
#define OTG_HS_HOST_OTG_HS_HCINT15_XFRC_Msk (0x1UL)                 /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINT15_CHH_Pos (1UL)                    /*!< CHH (Bit 1)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT15_CHH_Msk (0x2UL)                  /*!< CHH (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT15_AHBERR_Pos (2UL)                 /*!< AHBERR (Bit 2)                                        */
#define OTG_HS_HOST_OTG_HS_HCINT15_AHBERR_Msk (0x4UL)               /*!< AHBERR (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINT15_STALL_Pos (3UL)                  /*!< STALL (Bit 3)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT15_STALL_Msk (0x8UL)                /*!< STALL (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT15_NAK_Pos (4UL)                    /*!< NAK (Bit 4)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT15_NAK_Msk (0x10UL)                 /*!< NAK (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT15_ACK_Pos (5UL)                    /*!< ACK (Bit 5)                                           */
#define OTG_HS_HOST_OTG_HS_HCINT15_ACK_Msk (0x20UL)                 /*!< ACK (Bitfield-Mask: 0x01)                             */
#define OTG_HS_HOST_OTG_HS_HCINT15_NYET_Pos (6UL)                   /*!< NYET (Bit 6)                                          */
#define OTG_HS_HOST_OTG_HS_HCINT15_NYET_Msk (0x40UL)                /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINT15_TXERR_Pos (7UL)                  /*!< TXERR (Bit 7)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT15_TXERR_Msk (0x80UL)               /*!< TXERR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT15_BBERR_Pos (8UL)                  /*!< BBERR (Bit 8)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT15_BBERR_Msk (0x100UL)              /*!< BBERR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT15_FRMOR_Pos (9UL)                  /*!< FRMOR (Bit 9)                                         */
#define OTG_HS_HOST_OTG_HS_HCINT15_FRMOR_Msk (0x200UL)              /*!< FRMOR (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINT15_DTERR_Pos (10UL)                 /*!< DTERR (Bit 10)                                        */
#define OTG_HS_HOST_OTG_HS_HCINT15_DTERR_Msk (0x400UL)              /*!< DTERR (Bitfield-Mask: 0x01)                           */
/* ===================================================  OTG_HS_HCINTMSK15  =================================================== */
#define OTG_HS_HOST_OTG_HS_HCINTMSK15_XFRCM_Pos (0UL)               /*!< XFRCM (Bit 0)                                         */
#define OTG_HS_HOST_OTG_HS_HCINTMSK15_XFRCM_Msk (0x1UL)             /*!< XFRCM (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINTMSK15_CHHM_Pos (1UL)                /*!< CHHM (Bit 1)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK15_CHHM_Msk (0x2UL)              /*!< CHHM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK15_AHBERR_Pos (2UL)              /*!< AHBERR (Bit 2)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK15_AHBERR_Msk (0x4UL)            /*!< AHBERR (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK15_STALL_Pos (3UL)               /*!< STALL (Bit 3)                                         */
#define OTG_HS_HOST_OTG_HS_HCINTMSK15_STALL_Msk (0x8UL)             /*!< STALL (Bitfield-Mask: 0x01)                           */
#define OTG_HS_HOST_OTG_HS_HCINTMSK15_NAKM_Pos (4UL)                /*!< NAKM (Bit 4)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK15_NAKM_Msk (0x10UL)             /*!< NAKM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK15_ACKM_Pos (5UL)                /*!< ACKM (Bit 5)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK15_ACKM_Msk (0x20UL)             /*!< ACKM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK15_NYET_Pos (6UL)                /*!< NYET (Bit 6)                                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK15_NYET_Msk (0x40UL)             /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_HS_HOST_OTG_HS_HCINTMSK15_TXERRM_Pos (7UL)              /*!< TXERRM (Bit 7)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK15_TXERRM_Msk (0x80UL)           /*!< TXERRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK15_BBERRM_Pos (8UL)              /*!< BBERRM (Bit 8)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK15_BBERRM_Msk (0x100UL)          /*!< BBERRM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK15_FRMORM_Pos (9UL)              /*!< FRMORM (Bit 9)                                        */
#define OTG_HS_HOST_OTG_HS_HCINTMSK15_FRMORM_Msk (0x200UL)          /*!< FRMORM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_HOST_OTG_HS_HCINTMSK15_DTERRM_Pos (10UL)             /*!< DTERRM (Bit 10)                                       */
#define OTG_HS_HOST_OTG_HS_HCINTMSK15_DTERRM_Msk (0x400UL)          /*!< DTERRM (Bitfield-Mask: 0x01)                          */
/* ====================================================  OTG_HS_HCTSIZ15  ==================================================== */
#define OTG_HS_HOST_OTG_HS_HCTSIZ15_XFRSIZ_Pos (0UL)                /*!< XFRSIZ (Bit 0)                                        */
#define OTG_HS_HOST_OTG_HS_HCTSIZ15_XFRSIZ_Msk (0x7ffffUL)          /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_HS_HOST_OTG_HS_HCTSIZ15_PKTCNT_Pos (19UL)               /*!< PKTCNT (Bit 19)                                       */
#define OTG_HS_HOST_OTG_HS_HCTSIZ15_PKTCNT_Msk (0x1ff80000UL)       /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_HS_HOST_OTG_HS_HCTSIZ15_DPID_Pos (29UL)                 /*!< DPID (Bit 29)                                         */
#define OTG_HS_HOST_OTG_HS_HCTSIZ15_DPID_Msk (0x60000000UL)         /*!< DPID (Bitfield-Mask: 0x03)                            */
/* ====================================================  OTG_HS_HCDMA15  ===================================================== */
#define OTG_HS_HOST_OTG_HS_HCDMA15_DMAADDR_Pos (0UL)                /*!< DMAADDR (Bit 0)                                       */
#define OTG_HS_HOST_OTG_HS_HCDMA15_DMAADDR_Msk (0xffffffffUL)       /*!< DMAADDR (Bitfield-Mask: 0xffffffff)                   */


/* =========================================================================================================================== */
/* ================                                       OTG_FS_PWRCLK                                       ================ */
/* =========================================================================================================================== */

/* ====================================================  OTG_FS_PCGCCTL  ===================================================== */
#define OTG_FS_PWRCLK_OTG_FS_PCGCCTL_STPPCLK_Pos (0UL)              /*!< STPPCLK (Bit 0)                                       */
#define OTG_FS_PWRCLK_OTG_FS_PCGCCTL_STPPCLK_Msk (0x1UL)            /*!< STPPCLK (Bitfield-Mask: 0x01)                         */
#define OTG_FS_PWRCLK_OTG_FS_PCGCCTL_GATEHCLK_Pos (1UL)             /*!< GATEHCLK (Bit 1)                                      */
#define OTG_FS_PWRCLK_OTG_FS_PCGCCTL_GATEHCLK_Msk (0x2UL)           /*!< GATEHCLK (Bitfield-Mask: 0x01)                        */
#define OTG_FS_PWRCLK_OTG_FS_PCGCCTL_PHYSUSP_Pos (4UL)              /*!< PHYSUSP (Bit 4)                                       */
#define OTG_FS_PWRCLK_OTG_FS_PCGCCTL_PHYSUSP_Msk (0x10UL)           /*!< PHYSUSP (Bitfield-Mask: 0x01)                         */


/* =========================================================================================================================== */
/* ================                                       OTG_FS_DEVICE                                       ================ */
/* =========================================================================================================================== */

/* ======================================================  OTG_FS_DCFG  ====================================================== */
#define OTG_FS_DEVICE_OTG_FS_DCFG_DSPD_Pos (0UL)                    /*!< DSPD (Bit 0)                                          */
#define OTG_FS_DEVICE_OTG_FS_DCFG_DSPD_Msk (0x3UL)                  /*!< DSPD (Bitfield-Mask: 0x03)                            */
#define OTG_FS_DEVICE_OTG_FS_DCFG_NZLSOHSK_Pos (2UL)                /*!< NZLSOHSK (Bit 2)                                      */
#define OTG_FS_DEVICE_OTG_FS_DCFG_NZLSOHSK_Msk (0x4UL)              /*!< NZLSOHSK (Bitfield-Mask: 0x01)                        */
#define OTG_FS_DEVICE_OTG_FS_DCFG_DAD_Pos (4UL)                     /*!< DAD (Bit 4)                                           */
#define OTG_FS_DEVICE_OTG_FS_DCFG_DAD_Msk (0x7f0UL)                 /*!< DAD (Bitfield-Mask: 0x7f)                             */
#define OTG_FS_DEVICE_OTG_FS_DCFG_PFIVL_Pos (11UL)                  /*!< PFIVL (Bit 11)                                        */
#define OTG_FS_DEVICE_OTG_FS_DCFG_PFIVL_Msk (0x1800UL)              /*!< PFIVL (Bitfield-Mask: 0x03)                           */
/* ======================================================  OTG_FS_DCTL  ====================================================== */
#define OTG_FS_DEVICE_OTG_FS_DCTL_RWUSIG_Pos (0UL)                  /*!< RWUSIG (Bit 0)                                        */
#define OTG_FS_DEVICE_OTG_FS_DCTL_RWUSIG_Msk (0x1UL)                /*!< RWUSIG (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DCTL_SDIS_Pos (1UL)                    /*!< SDIS (Bit 1)                                          */
#define OTG_FS_DEVICE_OTG_FS_DCTL_SDIS_Msk (0x2UL)                  /*!< SDIS (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DCTL_GINSTS_Pos (2UL)                  /*!< GINSTS (Bit 2)                                        */
#define OTG_FS_DEVICE_OTG_FS_DCTL_GINSTS_Msk (0x4UL)                /*!< GINSTS (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DCTL_GONSTS_Pos (3UL)                  /*!< GONSTS (Bit 3)                                        */
#define OTG_FS_DEVICE_OTG_FS_DCTL_GONSTS_Msk (0x8UL)                /*!< GONSTS (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DCTL_TCTL_Pos (4UL)                    /*!< TCTL (Bit 4)                                          */
#define OTG_FS_DEVICE_OTG_FS_DCTL_TCTL_Msk (0x70UL)                 /*!< TCTL (Bitfield-Mask: 0x07)                            */
#define OTG_FS_DEVICE_OTG_FS_DCTL_SGINAK_Pos (7UL)                  /*!< SGINAK (Bit 7)                                        */
#define OTG_FS_DEVICE_OTG_FS_DCTL_SGINAK_Msk (0x80UL)               /*!< SGINAK (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DCTL_CGINAK_Pos (8UL)                  /*!< CGINAK (Bit 8)                                        */
#define OTG_FS_DEVICE_OTG_FS_DCTL_CGINAK_Msk (0x100UL)              /*!< CGINAK (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DCTL_SGONAK_Pos (9UL)                  /*!< SGONAK (Bit 9)                                        */
#define OTG_FS_DEVICE_OTG_FS_DCTL_SGONAK_Msk (0x200UL)              /*!< SGONAK (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DCTL_CGONAK_Pos (10UL)                 /*!< CGONAK (Bit 10)                                       */
#define OTG_FS_DEVICE_OTG_FS_DCTL_CGONAK_Msk (0x400UL)              /*!< CGONAK (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DCTL_POPRGDNE_Pos (11UL)               /*!< POPRGDNE (Bit 11)                                     */
#define OTG_FS_DEVICE_OTG_FS_DCTL_POPRGDNE_Msk (0x800UL)            /*!< POPRGDNE (Bitfield-Mask: 0x01)                        */
/* ======================================================  OTG_FS_DSTS  ====================================================== */
#define OTG_FS_DEVICE_OTG_FS_DSTS_SUSPSTS_Pos (0UL)                 /*!< SUSPSTS (Bit 0)                                       */
#define OTG_FS_DEVICE_OTG_FS_DSTS_SUSPSTS_Msk (0x1UL)               /*!< SUSPSTS (Bitfield-Mask: 0x01)                         */
#define OTG_FS_DEVICE_OTG_FS_DSTS_ENUMSPD_Pos (1UL)                 /*!< ENUMSPD (Bit 1)                                       */
#define OTG_FS_DEVICE_OTG_FS_DSTS_ENUMSPD_Msk (0x6UL)               /*!< ENUMSPD (Bitfield-Mask: 0x03)                         */
#define OTG_FS_DEVICE_OTG_FS_DSTS_EERR_Pos (3UL)                    /*!< EERR (Bit 3)                                          */
#define OTG_FS_DEVICE_OTG_FS_DSTS_EERR_Msk (0x8UL)                  /*!< EERR (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DSTS_FNSOF_Pos (8UL)                   /*!< FNSOF (Bit 8)                                         */
#define OTG_FS_DEVICE_OTG_FS_DSTS_FNSOF_Msk (0x3fff00UL)            /*!< FNSOF (Bitfield-Mask: 0x3fff)                         */
/* ====================================================  OTG_FS_DIEPMSK  ===================================================== */
#define OTG_FS_DEVICE_OTG_FS_DIEPMSK_XFRCM_Pos (0UL)                /*!< XFRCM (Bit 0)                                         */
#define OTG_FS_DEVICE_OTG_FS_DIEPMSK_XFRCM_Msk (0x1UL)              /*!< XFRCM (Bitfield-Mask: 0x01)                           */
#define OTG_FS_DEVICE_OTG_FS_DIEPMSK_EPDM_Pos (1UL)                 /*!< EPDM (Bit 1)                                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPMSK_EPDM_Msk (0x2UL)               /*!< EPDM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DIEPMSK_TOM_Pos (3UL)                  /*!< TOM (Bit 3)                                           */
#define OTG_FS_DEVICE_OTG_FS_DIEPMSK_TOM_Msk (0x8UL)                /*!< TOM (Bitfield-Mask: 0x01)                             */
#define OTG_FS_DEVICE_OTG_FS_DIEPMSK_ITTXFEMSK_Pos (4UL)            /*!< ITTXFEMSK (Bit 4)                                     */
#define OTG_FS_DEVICE_OTG_FS_DIEPMSK_ITTXFEMSK_Msk (0x10UL)         /*!< ITTXFEMSK (Bitfield-Mask: 0x01)                       */
#define OTG_FS_DEVICE_OTG_FS_DIEPMSK_INEPNMM_Pos (5UL)              /*!< INEPNMM (Bit 5)                                       */
#define OTG_FS_DEVICE_OTG_FS_DIEPMSK_INEPNMM_Msk (0x20UL)           /*!< INEPNMM (Bitfield-Mask: 0x01)                         */
#define OTG_FS_DEVICE_OTG_FS_DIEPMSK_INEPNEM_Pos (6UL)              /*!< INEPNEM (Bit 6)                                       */
#define OTG_FS_DEVICE_OTG_FS_DIEPMSK_INEPNEM_Msk (0x40UL)           /*!< INEPNEM (Bitfield-Mask: 0x01)                         */
/* ====================================================  OTG_FS_DOEPMSK  ===================================================== */
#define OTG_FS_DEVICE_OTG_FS_DOEPMSK_XFRCM_Pos (0UL)                /*!< XFRCM (Bit 0)                                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPMSK_XFRCM_Msk (0x1UL)              /*!< XFRCM (Bitfield-Mask: 0x01)                           */
#define OTG_FS_DEVICE_OTG_FS_DOEPMSK_EPDM_Pos (1UL)                 /*!< EPDM (Bit 1)                                          */
#define OTG_FS_DEVICE_OTG_FS_DOEPMSK_EPDM_Msk (0x2UL)               /*!< EPDM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DOEPMSK_STUPM_Pos (3UL)                /*!< STUPM (Bit 3)                                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPMSK_STUPM_Msk (0x8UL)              /*!< STUPM (Bitfield-Mask: 0x01)                           */
#define OTG_FS_DEVICE_OTG_FS_DOEPMSK_OTEPDM_Pos (4UL)               /*!< OTEPDM (Bit 4)                                        */
#define OTG_FS_DEVICE_OTG_FS_DOEPMSK_OTEPDM_Msk (0x10UL)            /*!< OTEPDM (Bitfield-Mask: 0x01)                          */
/* =====================================================  OTG_FS_DAINT  ====================================================== */
#define OTG_FS_DEVICE_OTG_FS_DAINT_IEPINT_Pos (0UL)                 /*!< IEPINT (Bit 0)                                        */
#define OTG_FS_DEVICE_OTG_FS_DAINT_IEPINT_Msk (0xffffUL)            /*!< IEPINT (Bitfield-Mask: 0xffff)                        */
#define OTG_FS_DEVICE_OTG_FS_DAINT_OEPINT_Pos (16UL)                /*!< OEPINT (Bit 16)                                       */
#define OTG_FS_DEVICE_OTG_FS_DAINT_OEPINT_Msk (0xffff0000UL)        /*!< OEPINT (Bitfield-Mask: 0xffff)                        */
/* ====================================================  OTG_FS_DAINTMSK  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DAINTMSK_IEPM_Pos (0UL)                /*!< IEPM (Bit 0)                                          */
#define OTG_FS_DEVICE_OTG_FS_DAINTMSK_IEPM_Msk (0xffffUL)           /*!< IEPM (Bitfield-Mask: 0xffff)                          */
#define OTG_FS_DEVICE_OTG_FS_DAINTMSK_OEPINT_Pos (16UL)             /*!< OEPINT (Bit 16)                                       */
#define OTG_FS_DEVICE_OTG_FS_DAINTMSK_OEPINT_Msk (0xffff0000UL)     /*!< OEPINT (Bitfield-Mask: 0xffff)                        */
/* ====================================================  OTG_FS_DVBUSDIS  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DVBUSDIS_VBUSDT_Pos (0UL)              /*!< VBUSDT (Bit 0)                                        */
#define OTG_FS_DEVICE_OTG_FS_DVBUSDIS_VBUSDT_Msk (0xffffUL)         /*!< VBUSDT (Bitfield-Mask: 0xffff)                        */
/* ===================================================  OTG_FS_DVBUSPULSE  =================================================== */
#define OTG_FS_DEVICE_OTG_FS_DVBUSPULSE_DVBUSP_Pos (0UL)            /*!< DVBUSP (Bit 0)                                        */
#define OTG_FS_DEVICE_OTG_FS_DVBUSPULSE_DVBUSP_Msk (0xfffUL)        /*!< DVBUSP (Bitfield-Mask: 0xfff)                         */
/* ===================================================  OTG_FS_DIEPEMPMSK  =================================================== */
#define OTG_FS_DEVICE_OTG_FS_DIEPEMPMSK_INEPTXFEM_Pos (0UL)         /*!< INEPTXFEM (Bit 0)                                     */
#define OTG_FS_DEVICE_OTG_FS_DIEPEMPMSK_INEPTXFEM_Msk (0xffffUL)    /*!< INEPTXFEM (Bitfield-Mask: 0xffff)                     */
/* ====================================================  OTG_FS_DIEPCTL0  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL0_MPSIZ_Pos (0UL)               /*!< MPSIZ (Bit 0)                                         */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL0_MPSIZ_Msk (0x3UL)             /*!< MPSIZ (Bitfield-Mask: 0x03)                           */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL0_USBAEP_Pos (15UL)             /*!< USBAEP (Bit 15)                                       */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL0_USBAEP_Msk (0x8000UL)         /*!< USBAEP (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL0_NAKSTS_Pos (17UL)             /*!< NAKSTS (Bit 17)                                       */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL0_NAKSTS_Msk (0x20000UL)        /*!< NAKSTS (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL0_EPTYP_Pos (18UL)              /*!< EPTYP (Bit 18)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL0_EPTYP_Msk (0xc0000UL)         /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL0_STALL_Pos (21UL)              /*!< STALL (Bit 21)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL0_STALL_Msk (0x200000UL)        /*!< STALL (Bitfield-Mask: 0x01)                           */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL0_TXFNUM_Pos (22UL)             /*!< TXFNUM (Bit 22)                                       */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL0_TXFNUM_Msk (0x3c00000UL)      /*!< TXFNUM (Bitfield-Mask: 0x0f)                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL0_CNAK_Pos (26UL)               /*!< CNAK (Bit 26)                                         */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL0_CNAK_Msk (0x4000000UL)        /*!< CNAK (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL0_SNAK_Pos (27UL)               /*!< SNAK (Bit 27)                                         */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL0_SNAK_Msk (0x8000000UL)        /*!< SNAK (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL0_EPDIS_Pos (30UL)              /*!< EPDIS (Bit 30)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL0_EPDIS_Msk (0x40000000UL)      /*!< EPDIS (Bitfield-Mask: 0x01)                           */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL0_EPENA_Pos (31UL)              /*!< EPENA (Bit 31)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL0_EPENA_Msk (0x80000000UL)      /*!< EPENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_FS_DIEPCTL1  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL1_EPENA_Pos (31UL)              /*!< EPENA (Bit 31)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL1_EPENA_Msk (0x80000000UL)      /*!< EPENA (Bitfield-Mask: 0x01)                           */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL1_EPDIS_Pos (30UL)              /*!< EPDIS (Bit 30)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL1_EPDIS_Msk (0x40000000UL)      /*!< EPDIS (Bitfield-Mask: 0x01)                           */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL1_SODDFRM_SD1PID_Pos (29UL)     /*!< SODDFRM_SD1PID (Bit 29)                               */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL1_SODDFRM_SD1PID_Msk (0x20000000UL) /*!< SODDFRM_SD1PID (Bitfield-Mask: 0x01)              */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL1_SD0PID_SEVNFRM_Pos (28UL)     /*!< SD0PID_SEVNFRM (Bit 28)                               */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL1_SD0PID_SEVNFRM_Msk (0x10000000UL) /*!< SD0PID_SEVNFRM (Bitfield-Mask: 0x01)              */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL1_SNAK_Pos (27UL)               /*!< SNAK (Bit 27)                                         */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL1_SNAK_Msk (0x8000000UL)        /*!< SNAK (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL1_CNAK_Pos (26UL)               /*!< CNAK (Bit 26)                                         */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL1_CNAK_Msk (0x4000000UL)        /*!< CNAK (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL1_TXFNUM_Pos (22UL)             /*!< TXFNUM (Bit 22)                                       */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL1_TXFNUM_Msk (0x3c00000UL)      /*!< TXFNUM (Bitfield-Mask: 0x0f)                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL1_Stall_Pos (21UL)              /*!< Stall (Bit 21)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL1_Stall_Msk (0x200000UL)        /*!< Stall (Bitfield-Mask: 0x01)                           */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL1_EPTYP_Pos (18UL)              /*!< EPTYP (Bit 18)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL1_EPTYP_Msk (0xc0000UL)         /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL1_NAKSTS_Pos (17UL)             /*!< NAKSTS (Bit 17)                                       */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL1_NAKSTS_Msk (0x20000UL)        /*!< NAKSTS (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL1_EONUM_DPID_Pos (16UL)         /*!< EONUM_DPID (Bit 16)                                   */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL1_EONUM_DPID_Msk (0x10000UL)    /*!< EONUM_DPID (Bitfield-Mask: 0x01)                      */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL1_USBAEP_Pos (15UL)             /*!< USBAEP (Bit 15)                                       */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL1_USBAEP_Msk (0x8000UL)         /*!< USBAEP (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL1_MPSIZ_Pos (0UL)               /*!< MPSIZ (Bit 0)                                         */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL1_MPSIZ_Msk (0x7ffUL)           /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
/* ====================================================  OTG_FS_DIEPCTL2  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL2_EPENA_Pos (31UL)              /*!< EPENA (Bit 31)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL2_EPENA_Msk (0x80000000UL)      /*!< EPENA (Bitfield-Mask: 0x01)                           */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL2_EPDIS_Pos (30UL)              /*!< EPDIS (Bit 30)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL2_EPDIS_Msk (0x40000000UL)      /*!< EPDIS (Bitfield-Mask: 0x01)                           */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL2_SODDFRM_Pos (29UL)            /*!< SODDFRM (Bit 29)                                      */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL2_SODDFRM_Msk (0x20000000UL)    /*!< SODDFRM (Bitfield-Mask: 0x01)                         */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL2_SD0PID_SEVNFRM_Pos (28UL)     /*!< SD0PID_SEVNFRM (Bit 28)                               */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL2_SD0PID_SEVNFRM_Msk (0x10000000UL) /*!< SD0PID_SEVNFRM (Bitfield-Mask: 0x01)              */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL2_SNAK_Pos (27UL)               /*!< SNAK (Bit 27)                                         */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL2_SNAK_Msk (0x8000000UL)        /*!< SNAK (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL2_CNAK_Pos (26UL)               /*!< CNAK (Bit 26)                                         */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL2_CNAK_Msk (0x4000000UL)        /*!< CNAK (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL2_TXFNUM_Pos (22UL)             /*!< TXFNUM (Bit 22)                                       */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL2_TXFNUM_Msk (0x3c00000UL)      /*!< TXFNUM (Bitfield-Mask: 0x0f)                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL2_Stall_Pos (21UL)              /*!< Stall (Bit 21)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL2_Stall_Msk (0x200000UL)        /*!< Stall (Bitfield-Mask: 0x01)                           */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL2_EPTYP_Pos (18UL)              /*!< EPTYP (Bit 18)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL2_EPTYP_Msk (0xc0000UL)         /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL2_NAKSTS_Pos (17UL)             /*!< NAKSTS (Bit 17)                                       */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL2_NAKSTS_Msk (0x20000UL)        /*!< NAKSTS (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL2_EONUM_DPID_Pos (16UL)         /*!< EONUM_DPID (Bit 16)                                   */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL2_EONUM_DPID_Msk (0x10000UL)    /*!< EONUM_DPID (Bitfield-Mask: 0x01)                      */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL2_USBAEP_Pos (15UL)             /*!< USBAEP (Bit 15)                                       */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL2_USBAEP_Msk (0x8000UL)         /*!< USBAEP (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL2_MPSIZ_Pos (0UL)               /*!< MPSIZ (Bit 0)                                         */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL2_MPSIZ_Msk (0x7ffUL)           /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
/* ====================================================  OTG_FS_DIEPCTL3  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL3_EPENA_Pos (31UL)              /*!< EPENA (Bit 31)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL3_EPENA_Msk (0x80000000UL)      /*!< EPENA (Bitfield-Mask: 0x01)                           */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL3_EPDIS_Pos (30UL)              /*!< EPDIS (Bit 30)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL3_EPDIS_Msk (0x40000000UL)      /*!< EPDIS (Bitfield-Mask: 0x01)                           */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL3_SODDFRM_Pos (29UL)            /*!< SODDFRM (Bit 29)                                      */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL3_SODDFRM_Msk (0x20000000UL)    /*!< SODDFRM (Bitfield-Mask: 0x01)                         */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL3_SD0PID_SEVNFRM_Pos (28UL)     /*!< SD0PID_SEVNFRM (Bit 28)                               */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL3_SD0PID_SEVNFRM_Msk (0x10000000UL) /*!< SD0PID_SEVNFRM (Bitfield-Mask: 0x01)              */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL3_SNAK_Pos (27UL)               /*!< SNAK (Bit 27)                                         */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL3_SNAK_Msk (0x8000000UL)        /*!< SNAK (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL3_CNAK_Pos (26UL)               /*!< CNAK (Bit 26)                                         */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL3_CNAK_Msk (0x4000000UL)        /*!< CNAK (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL3_TXFNUM_Pos (22UL)             /*!< TXFNUM (Bit 22)                                       */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL3_TXFNUM_Msk (0x3c00000UL)      /*!< TXFNUM (Bitfield-Mask: 0x0f)                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL3_Stall_Pos (21UL)              /*!< Stall (Bit 21)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL3_Stall_Msk (0x200000UL)        /*!< Stall (Bitfield-Mask: 0x01)                           */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL3_EPTYP_Pos (18UL)              /*!< EPTYP (Bit 18)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL3_EPTYP_Msk (0xc0000UL)         /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL3_NAKSTS_Pos (17UL)             /*!< NAKSTS (Bit 17)                                       */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL3_NAKSTS_Msk (0x20000UL)        /*!< NAKSTS (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL3_EONUM_DPID_Pos (16UL)         /*!< EONUM_DPID (Bit 16)                                   */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL3_EONUM_DPID_Msk (0x10000UL)    /*!< EONUM_DPID (Bitfield-Mask: 0x01)                      */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL3_USBAEP_Pos (15UL)             /*!< USBAEP (Bit 15)                                       */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL3_USBAEP_Msk (0x8000UL)         /*!< USBAEP (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL3_MPSIZ_Pos (0UL)               /*!< MPSIZ (Bit 0)                                         */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL3_MPSIZ_Msk (0x7ffUL)           /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
/* ====================================================  OTG_FS_DOEPCTL0  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL0_EPENA_Pos (31UL)              /*!< EPENA (Bit 31)                                        */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL0_EPENA_Msk (0x80000000UL)      /*!< EPENA (Bitfield-Mask: 0x01)                           */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL0_EPDIS_Pos (30UL)              /*!< EPDIS (Bit 30)                                        */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL0_EPDIS_Msk (0x40000000UL)      /*!< EPDIS (Bitfield-Mask: 0x01)                           */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL0_SNAK_Pos (27UL)               /*!< SNAK (Bit 27)                                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL0_SNAK_Msk (0x8000000UL)        /*!< SNAK (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL0_CNAK_Pos (26UL)               /*!< CNAK (Bit 26)                                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL0_CNAK_Msk (0x4000000UL)        /*!< CNAK (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL0_Stall_Pos (21UL)              /*!< Stall (Bit 21)                                        */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL0_Stall_Msk (0x200000UL)        /*!< Stall (Bitfield-Mask: 0x01)                           */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL0_SNPM_Pos (20UL)               /*!< SNPM (Bit 20)                                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL0_SNPM_Msk (0x100000UL)         /*!< SNPM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL0_EPTYP_Pos (18UL)              /*!< EPTYP (Bit 18)                                        */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL0_EPTYP_Msk (0xc0000UL)         /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL0_NAKSTS_Pos (17UL)             /*!< NAKSTS (Bit 17)                                       */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL0_NAKSTS_Msk (0x20000UL)        /*!< NAKSTS (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL0_USBAEP_Pos (15UL)             /*!< USBAEP (Bit 15)                                       */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL0_USBAEP_Msk (0x8000UL)         /*!< USBAEP (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL0_MPSIZ_Pos (0UL)               /*!< MPSIZ (Bit 0)                                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL0_MPSIZ_Msk (0x3UL)             /*!< MPSIZ (Bitfield-Mask: 0x03)                           */
/* ====================================================  OTG_FS_DOEPCTL1  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL1_EPENA_Pos (31UL)              /*!< EPENA (Bit 31)                                        */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL1_EPENA_Msk (0x80000000UL)      /*!< EPENA (Bitfield-Mask: 0x01)                           */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL1_EPDIS_Pos (30UL)              /*!< EPDIS (Bit 30)                                        */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL1_EPDIS_Msk (0x40000000UL)      /*!< EPDIS (Bitfield-Mask: 0x01)                           */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL1_SODDFRM_Pos (29UL)            /*!< SODDFRM (Bit 29)                                      */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL1_SODDFRM_Msk (0x20000000UL)    /*!< SODDFRM (Bitfield-Mask: 0x01)                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL1_SD0PID_SEVNFRM_Pos (28UL)     /*!< SD0PID_SEVNFRM (Bit 28)                               */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL1_SD0PID_SEVNFRM_Msk (0x10000000UL) /*!< SD0PID_SEVNFRM (Bitfield-Mask: 0x01)              */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL1_SNAK_Pos (27UL)               /*!< SNAK (Bit 27)                                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL1_SNAK_Msk (0x8000000UL)        /*!< SNAK (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL1_CNAK_Pos (26UL)               /*!< CNAK (Bit 26)                                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL1_CNAK_Msk (0x4000000UL)        /*!< CNAK (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL1_Stall_Pos (21UL)              /*!< Stall (Bit 21)                                        */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL1_Stall_Msk (0x200000UL)        /*!< Stall (Bitfield-Mask: 0x01)                           */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL1_SNPM_Pos (20UL)               /*!< SNPM (Bit 20)                                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL1_SNPM_Msk (0x100000UL)         /*!< SNPM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL1_EPTYP_Pos (18UL)              /*!< EPTYP (Bit 18)                                        */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL1_EPTYP_Msk (0xc0000UL)         /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL1_NAKSTS_Pos (17UL)             /*!< NAKSTS (Bit 17)                                       */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL1_NAKSTS_Msk (0x20000UL)        /*!< NAKSTS (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL1_EONUM_DPID_Pos (16UL)         /*!< EONUM_DPID (Bit 16)                                   */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL1_EONUM_DPID_Msk (0x10000UL)    /*!< EONUM_DPID (Bitfield-Mask: 0x01)                      */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL1_USBAEP_Pos (15UL)             /*!< USBAEP (Bit 15)                                       */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL1_USBAEP_Msk (0x8000UL)         /*!< USBAEP (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL1_MPSIZ_Pos (0UL)               /*!< MPSIZ (Bit 0)                                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL1_MPSIZ_Msk (0x7ffUL)           /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
/* ====================================================  OTG_FS_DOEPCTL2  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL2_EPENA_Pos (31UL)              /*!< EPENA (Bit 31)                                        */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL2_EPENA_Msk (0x80000000UL)      /*!< EPENA (Bitfield-Mask: 0x01)                           */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL2_EPDIS_Pos (30UL)              /*!< EPDIS (Bit 30)                                        */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL2_EPDIS_Msk (0x40000000UL)      /*!< EPDIS (Bitfield-Mask: 0x01)                           */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL2_SODDFRM_Pos (29UL)            /*!< SODDFRM (Bit 29)                                      */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL2_SODDFRM_Msk (0x20000000UL)    /*!< SODDFRM (Bitfield-Mask: 0x01)                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL2_SD0PID_SEVNFRM_Pos (28UL)     /*!< SD0PID_SEVNFRM (Bit 28)                               */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL2_SD0PID_SEVNFRM_Msk (0x10000000UL) /*!< SD0PID_SEVNFRM (Bitfield-Mask: 0x01)              */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL2_SNAK_Pos (27UL)               /*!< SNAK (Bit 27)                                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL2_SNAK_Msk (0x8000000UL)        /*!< SNAK (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL2_CNAK_Pos (26UL)               /*!< CNAK (Bit 26)                                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL2_CNAK_Msk (0x4000000UL)        /*!< CNAK (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL2_Stall_Pos (21UL)              /*!< Stall (Bit 21)                                        */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL2_Stall_Msk (0x200000UL)        /*!< Stall (Bitfield-Mask: 0x01)                           */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL2_SNPM_Pos (20UL)               /*!< SNPM (Bit 20)                                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL2_SNPM_Msk (0x100000UL)         /*!< SNPM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL2_EPTYP_Pos (18UL)              /*!< EPTYP (Bit 18)                                        */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL2_EPTYP_Msk (0xc0000UL)         /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL2_NAKSTS_Pos (17UL)             /*!< NAKSTS (Bit 17)                                       */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL2_NAKSTS_Msk (0x20000UL)        /*!< NAKSTS (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL2_EONUM_DPID_Pos (16UL)         /*!< EONUM_DPID (Bit 16)                                   */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL2_EONUM_DPID_Msk (0x10000UL)    /*!< EONUM_DPID (Bitfield-Mask: 0x01)                      */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL2_USBAEP_Pos (15UL)             /*!< USBAEP (Bit 15)                                       */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL2_USBAEP_Msk (0x8000UL)         /*!< USBAEP (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL2_MPSIZ_Pos (0UL)               /*!< MPSIZ (Bit 0)                                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL2_MPSIZ_Msk (0x7ffUL)           /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
/* ====================================================  OTG_FS_DOEPCTL3  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL3_EPENA_Pos (31UL)              /*!< EPENA (Bit 31)                                        */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL3_EPENA_Msk (0x80000000UL)      /*!< EPENA (Bitfield-Mask: 0x01)                           */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL3_EPDIS_Pos (30UL)              /*!< EPDIS (Bit 30)                                        */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL3_EPDIS_Msk (0x40000000UL)      /*!< EPDIS (Bitfield-Mask: 0x01)                           */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL3_SODDFRM_Pos (29UL)            /*!< SODDFRM (Bit 29)                                      */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL3_SODDFRM_Msk (0x20000000UL)    /*!< SODDFRM (Bitfield-Mask: 0x01)                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL3_SD0PID_SEVNFRM_Pos (28UL)     /*!< SD0PID_SEVNFRM (Bit 28)                               */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL3_SD0PID_SEVNFRM_Msk (0x10000000UL) /*!< SD0PID_SEVNFRM (Bitfield-Mask: 0x01)              */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL3_SNAK_Pos (27UL)               /*!< SNAK (Bit 27)                                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL3_SNAK_Msk (0x8000000UL)        /*!< SNAK (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL3_CNAK_Pos (26UL)               /*!< CNAK (Bit 26)                                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL3_CNAK_Msk (0x4000000UL)        /*!< CNAK (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL3_Stall_Pos (21UL)              /*!< Stall (Bit 21)                                        */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL3_Stall_Msk (0x200000UL)        /*!< Stall (Bitfield-Mask: 0x01)                           */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL3_SNPM_Pos (20UL)               /*!< SNPM (Bit 20)                                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL3_SNPM_Msk (0x100000UL)         /*!< SNPM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL3_EPTYP_Pos (18UL)              /*!< EPTYP (Bit 18)                                        */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL3_EPTYP_Msk (0xc0000UL)         /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL3_NAKSTS_Pos (17UL)             /*!< NAKSTS (Bit 17)                                       */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL3_NAKSTS_Msk (0x20000UL)        /*!< NAKSTS (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL3_EONUM_DPID_Pos (16UL)         /*!< EONUM_DPID (Bit 16)                                   */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL3_EONUM_DPID_Msk (0x10000UL)    /*!< EONUM_DPID (Bitfield-Mask: 0x01)                      */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL3_USBAEP_Pos (15UL)             /*!< USBAEP (Bit 15)                                       */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL3_USBAEP_Msk (0x8000UL)         /*!< USBAEP (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL3_MPSIZ_Pos (0UL)               /*!< MPSIZ (Bit 0)                                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL3_MPSIZ_Msk (0x7ffUL)           /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
/* ====================================================  OTG_FS_DIEPINT0  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT0_TXFE_Pos (7UL)                /*!< TXFE (Bit 7)                                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT0_TXFE_Msk (0x80UL)             /*!< TXFE (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT0_INEPNE_Pos (6UL)              /*!< INEPNE (Bit 6)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT0_INEPNE_Msk (0x40UL)           /*!< INEPNE (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT0_ITTXFE_Pos (4UL)              /*!< ITTXFE (Bit 4)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT0_ITTXFE_Msk (0x10UL)           /*!< ITTXFE (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT0_TOC_Pos (3UL)                 /*!< TOC (Bit 3)                                           */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT0_TOC_Msk (0x8UL)               /*!< TOC (Bitfield-Mask: 0x01)                             */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT0_EPDISD_Pos (1UL)              /*!< EPDISD (Bit 1)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT0_EPDISD_Msk (0x2UL)            /*!< EPDISD (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT0_XFRC_Pos (0UL)                /*!< XFRC (Bit 0)                                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT0_XFRC_Msk (0x1UL)              /*!< XFRC (Bitfield-Mask: 0x01)                            */
/* ====================================================  OTG_FS_DIEPINT1  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT1_TXFE_Pos (7UL)                /*!< TXFE (Bit 7)                                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT1_TXFE_Msk (0x80UL)             /*!< TXFE (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT1_INEPNE_Pos (6UL)              /*!< INEPNE (Bit 6)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT1_INEPNE_Msk (0x40UL)           /*!< INEPNE (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT1_ITTXFE_Pos (4UL)              /*!< ITTXFE (Bit 4)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT1_ITTXFE_Msk (0x10UL)           /*!< ITTXFE (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT1_TOC_Pos (3UL)                 /*!< TOC (Bit 3)                                           */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT1_TOC_Msk (0x8UL)               /*!< TOC (Bitfield-Mask: 0x01)                             */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT1_EPDISD_Pos (1UL)              /*!< EPDISD (Bit 1)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT1_EPDISD_Msk (0x2UL)            /*!< EPDISD (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT1_XFRC_Pos (0UL)                /*!< XFRC (Bit 0)                                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT1_XFRC_Msk (0x1UL)              /*!< XFRC (Bitfield-Mask: 0x01)                            */
/* ====================================================  OTG_FS_DIEPINT2  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT2_TXFE_Pos (7UL)                /*!< TXFE (Bit 7)                                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT2_TXFE_Msk (0x80UL)             /*!< TXFE (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT2_INEPNE_Pos (6UL)              /*!< INEPNE (Bit 6)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT2_INEPNE_Msk (0x40UL)           /*!< INEPNE (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT2_ITTXFE_Pos (4UL)              /*!< ITTXFE (Bit 4)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT2_ITTXFE_Msk (0x10UL)           /*!< ITTXFE (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT2_TOC_Pos (3UL)                 /*!< TOC (Bit 3)                                           */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT2_TOC_Msk (0x8UL)               /*!< TOC (Bitfield-Mask: 0x01)                             */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT2_EPDISD_Pos (1UL)              /*!< EPDISD (Bit 1)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT2_EPDISD_Msk (0x2UL)            /*!< EPDISD (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT2_XFRC_Pos (0UL)                /*!< XFRC (Bit 0)                                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT2_XFRC_Msk (0x1UL)              /*!< XFRC (Bitfield-Mask: 0x01)                            */
/* ====================================================  OTG_FS_DIEPINT3  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT3_TXFE_Pos (7UL)                /*!< TXFE (Bit 7)                                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT3_TXFE_Msk (0x80UL)             /*!< TXFE (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT3_INEPNE_Pos (6UL)              /*!< INEPNE (Bit 6)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT3_INEPNE_Msk (0x40UL)           /*!< INEPNE (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT3_ITTXFE_Pos (4UL)              /*!< ITTXFE (Bit 4)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT3_ITTXFE_Msk (0x10UL)           /*!< ITTXFE (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT3_TOC_Pos (3UL)                 /*!< TOC (Bit 3)                                           */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT3_TOC_Msk (0x8UL)               /*!< TOC (Bitfield-Mask: 0x01)                             */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT3_EPDISD_Pos (1UL)              /*!< EPDISD (Bit 1)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT3_EPDISD_Msk (0x2UL)            /*!< EPDISD (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT3_XFRC_Pos (0UL)                /*!< XFRC (Bit 0)                                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT3_XFRC_Msk (0x1UL)              /*!< XFRC (Bitfield-Mask: 0x01)                            */
/* ====================================================  OTG_FS_DOEPINT0  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT0_B2BSTUP_Pos (6UL)             /*!< B2BSTUP (Bit 6)                                       */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT0_B2BSTUP_Msk (0x40UL)          /*!< B2BSTUP (Bitfield-Mask: 0x01)                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT0_OTEPDIS_Pos (4UL)             /*!< OTEPDIS (Bit 4)                                       */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT0_OTEPDIS_Msk (0x10UL)          /*!< OTEPDIS (Bitfield-Mask: 0x01)                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT0_STUP_Pos (3UL)                /*!< STUP (Bit 3)                                          */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT0_STUP_Msk (0x8UL)              /*!< STUP (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT0_EPDISD_Pos (1UL)              /*!< EPDISD (Bit 1)                                        */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT0_EPDISD_Msk (0x2UL)            /*!< EPDISD (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT0_XFRC_Pos (0UL)                /*!< XFRC (Bit 0)                                          */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT0_XFRC_Msk (0x1UL)              /*!< XFRC (Bitfield-Mask: 0x01)                            */
/* ====================================================  OTG_FS_DOEPINT1  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT1_B2BSTUP_Pos (6UL)             /*!< B2BSTUP (Bit 6)                                       */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT1_B2BSTUP_Msk (0x40UL)          /*!< B2BSTUP (Bitfield-Mask: 0x01)                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT1_OTEPDIS_Pos (4UL)             /*!< OTEPDIS (Bit 4)                                       */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT1_OTEPDIS_Msk (0x10UL)          /*!< OTEPDIS (Bitfield-Mask: 0x01)                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT1_STUP_Pos (3UL)                /*!< STUP (Bit 3)                                          */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT1_STUP_Msk (0x8UL)              /*!< STUP (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT1_EPDISD_Pos (1UL)              /*!< EPDISD (Bit 1)                                        */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT1_EPDISD_Msk (0x2UL)            /*!< EPDISD (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT1_XFRC_Pos (0UL)                /*!< XFRC (Bit 0)                                          */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT1_XFRC_Msk (0x1UL)              /*!< XFRC (Bitfield-Mask: 0x01)                            */
/* ====================================================  OTG_FS_DOEPINT2  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT2_B2BSTUP_Pos (6UL)             /*!< B2BSTUP (Bit 6)                                       */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT2_B2BSTUP_Msk (0x40UL)          /*!< B2BSTUP (Bitfield-Mask: 0x01)                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT2_OTEPDIS_Pos (4UL)             /*!< OTEPDIS (Bit 4)                                       */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT2_OTEPDIS_Msk (0x10UL)          /*!< OTEPDIS (Bitfield-Mask: 0x01)                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT2_STUP_Pos (3UL)                /*!< STUP (Bit 3)                                          */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT2_STUP_Msk (0x8UL)              /*!< STUP (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT2_EPDISD_Pos (1UL)              /*!< EPDISD (Bit 1)                                        */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT2_EPDISD_Msk (0x2UL)            /*!< EPDISD (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT2_XFRC_Pos (0UL)                /*!< XFRC (Bit 0)                                          */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT2_XFRC_Msk (0x1UL)              /*!< XFRC (Bitfield-Mask: 0x01)                            */
/* ====================================================  OTG_FS_DOEPINT3  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT3_B2BSTUP_Pos (6UL)             /*!< B2BSTUP (Bit 6)                                       */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT3_B2BSTUP_Msk (0x40UL)          /*!< B2BSTUP (Bitfield-Mask: 0x01)                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT3_OTEPDIS_Pos (4UL)             /*!< OTEPDIS (Bit 4)                                       */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT3_OTEPDIS_Msk (0x10UL)          /*!< OTEPDIS (Bitfield-Mask: 0x01)                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT3_STUP_Pos (3UL)                /*!< STUP (Bit 3)                                          */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT3_STUP_Msk (0x8UL)              /*!< STUP (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT3_EPDISD_Pos (1UL)              /*!< EPDISD (Bit 1)                                        */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT3_EPDISD_Msk (0x2UL)            /*!< EPDISD (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT3_XFRC_Pos (0UL)                /*!< XFRC (Bit 0)                                          */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT3_XFRC_Msk (0x1UL)              /*!< XFRC (Bitfield-Mask: 0x01)                            */
/* ===================================================  OTG_FS_DIEPTSIZ0  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DIEPTSIZ0_PKTCNT_Pos (19UL)            /*!< PKTCNT (Bit 19)                                       */
#define OTG_FS_DEVICE_OTG_FS_DIEPTSIZ0_PKTCNT_Msk (0x180000UL)      /*!< PKTCNT (Bitfield-Mask: 0x03)                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPTSIZ0_XFRSIZ_Pos (0UL)             /*!< XFRSIZ (Bit 0)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPTSIZ0_XFRSIZ_Msk (0x7fUL)          /*!< XFRSIZ (Bitfield-Mask: 0x7f)                          */
/* ===================================================  OTG_FS_DOEPTSIZ0  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DOEPTSIZ0_STUPCNT_Pos (29UL)           /*!< STUPCNT (Bit 29)                                      */
#define OTG_FS_DEVICE_OTG_FS_DOEPTSIZ0_STUPCNT_Msk (0x60000000UL)   /*!< STUPCNT (Bitfield-Mask: 0x03)                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPTSIZ0_PKTCNT_Pos (19UL)            /*!< PKTCNT (Bit 19)                                       */
#define OTG_FS_DEVICE_OTG_FS_DOEPTSIZ0_PKTCNT_Msk (0x80000UL)       /*!< PKTCNT (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DOEPTSIZ0_XFRSIZ_Pos (0UL)             /*!< XFRSIZ (Bit 0)                                        */
#define OTG_FS_DEVICE_OTG_FS_DOEPTSIZ0_XFRSIZ_Msk (0x7fUL)          /*!< XFRSIZ (Bitfield-Mask: 0x7f)                          */
/* ===================================================  OTG_FS_DIEPTSIZ1  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DIEPTSIZ1_MCNT_Pos (29UL)              /*!< MCNT (Bit 29)                                         */
#define OTG_FS_DEVICE_OTG_FS_DIEPTSIZ1_MCNT_Msk (0x60000000UL)      /*!< MCNT (Bitfield-Mask: 0x03)                            */
#define OTG_FS_DEVICE_OTG_FS_DIEPTSIZ1_PKTCNT_Pos (19UL)            /*!< PKTCNT (Bit 19)                                       */
#define OTG_FS_DEVICE_OTG_FS_DIEPTSIZ1_PKTCNT_Msk (0x1ff80000UL)    /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_FS_DEVICE_OTG_FS_DIEPTSIZ1_XFRSIZ_Pos (0UL)             /*!< XFRSIZ (Bit 0)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPTSIZ1_XFRSIZ_Msk (0x7ffffUL)       /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
/* ===================================================  OTG_FS_DIEPTSIZ2  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DIEPTSIZ2_MCNT_Pos (29UL)              /*!< MCNT (Bit 29)                                         */
#define OTG_FS_DEVICE_OTG_FS_DIEPTSIZ2_MCNT_Msk (0x60000000UL)      /*!< MCNT (Bitfield-Mask: 0x03)                            */
#define OTG_FS_DEVICE_OTG_FS_DIEPTSIZ2_PKTCNT_Pos (19UL)            /*!< PKTCNT (Bit 19)                                       */
#define OTG_FS_DEVICE_OTG_FS_DIEPTSIZ2_PKTCNT_Msk (0x1ff80000UL)    /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_FS_DEVICE_OTG_FS_DIEPTSIZ2_XFRSIZ_Pos (0UL)             /*!< XFRSIZ (Bit 0)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPTSIZ2_XFRSIZ_Msk (0x7ffffUL)       /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
/* ===================================================  OTG_FS_DIEPTSIZ3  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DIEPTSIZ3_MCNT_Pos (29UL)              /*!< MCNT (Bit 29)                                         */
#define OTG_FS_DEVICE_OTG_FS_DIEPTSIZ3_MCNT_Msk (0x60000000UL)      /*!< MCNT (Bitfield-Mask: 0x03)                            */
#define OTG_FS_DEVICE_OTG_FS_DIEPTSIZ3_PKTCNT_Pos (19UL)            /*!< PKTCNT (Bit 19)                                       */
#define OTG_FS_DEVICE_OTG_FS_DIEPTSIZ3_PKTCNT_Msk (0x1ff80000UL)    /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_FS_DEVICE_OTG_FS_DIEPTSIZ3_XFRSIZ_Pos (0UL)             /*!< XFRSIZ (Bit 0)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPTSIZ3_XFRSIZ_Msk (0x7ffffUL)       /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
/* ====================================================  OTG_FS_DTXFSTS0  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DTXFSTS0_INEPTFSAV_Pos (0UL)           /*!< INEPTFSAV (Bit 0)                                     */
#define OTG_FS_DEVICE_OTG_FS_DTXFSTS0_INEPTFSAV_Msk (0xffffUL)      /*!< INEPTFSAV (Bitfield-Mask: 0xffff)                     */
/* ====================================================  OTG_FS_DTXFSTS1  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DTXFSTS1_INEPTFSAV_Pos (0UL)           /*!< INEPTFSAV (Bit 0)                                     */
#define OTG_FS_DEVICE_OTG_FS_DTXFSTS1_INEPTFSAV_Msk (0xffffUL)      /*!< INEPTFSAV (Bitfield-Mask: 0xffff)                     */
/* ====================================================  OTG_FS_DTXFSTS2  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DTXFSTS2_INEPTFSAV_Pos (0UL)           /*!< INEPTFSAV (Bit 0)                                     */
#define OTG_FS_DEVICE_OTG_FS_DTXFSTS2_INEPTFSAV_Msk (0xffffUL)      /*!< INEPTFSAV (Bitfield-Mask: 0xffff)                     */
/* ====================================================  OTG_FS_DTXFSTS3  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DTXFSTS3_INEPTFSAV_Pos (0UL)           /*!< INEPTFSAV (Bit 0)                                     */
#define OTG_FS_DEVICE_OTG_FS_DTXFSTS3_INEPTFSAV_Msk (0xffffUL)      /*!< INEPTFSAV (Bitfield-Mask: 0xffff)                     */
/* ===================================================  OTG_FS_DOEPTSIZ1  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DOEPTSIZ1_RXDPID_STUPCNT_Pos (29UL)    /*!< RXDPID_STUPCNT (Bit 29)                               */
#define OTG_FS_DEVICE_OTG_FS_DOEPTSIZ1_RXDPID_STUPCNT_Msk (0x60000000UL) /*!< RXDPID_STUPCNT (Bitfield-Mask: 0x03)             */
#define OTG_FS_DEVICE_OTG_FS_DOEPTSIZ1_PKTCNT_Pos (19UL)            /*!< PKTCNT (Bit 19)                                       */
#define OTG_FS_DEVICE_OTG_FS_DOEPTSIZ1_PKTCNT_Msk (0x1ff80000UL)    /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPTSIZ1_XFRSIZ_Pos (0UL)             /*!< XFRSIZ (Bit 0)                                        */
#define OTG_FS_DEVICE_OTG_FS_DOEPTSIZ1_XFRSIZ_Msk (0x7ffffUL)       /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
/* ===================================================  OTG_FS_DOEPTSIZ2  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DOEPTSIZ2_RXDPID_STUPCNT_Pos (29UL)    /*!< RXDPID_STUPCNT (Bit 29)                               */
#define OTG_FS_DEVICE_OTG_FS_DOEPTSIZ2_RXDPID_STUPCNT_Msk (0x60000000UL) /*!< RXDPID_STUPCNT (Bitfield-Mask: 0x03)             */
#define OTG_FS_DEVICE_OTG_FS_DOEPTSIZ2_PKTCNT_Pos (19UL)            /*!< PKTCNT (Bit 19)                                       */
#define OTG_FS_DEVICE_OTG_FS_DOEPTSIZ2_PKTCNT_Msk (0x1ff80000UL)    /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPTSIZ2_XFRSIZ_Pos (0UL)             /*!< XFRSIZ (Bit 0)                                        */
#define OTG_FS_DEVICE_OTG_FS_DOEPTSIZ2_XFRSIZ_Msk (0x7ffffUL)       /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
/* ===================================================  OTG_FS_DOEPTSIZ3  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DOEPTSIZ3_RXDPID_STUPCNT_Pos (29UL)    /*!< RXDPID_STUPCNT (Bit 29)                               */
#define OTG_FS_DEVICE_OTG_FS_DOEPTSIZ3_RXDPID_STUPCNT_Msk (0x60000000UL) /*!< RXDPID_STUPCNT (Bitfield-Mask: 0x03)             */
#define OTG_FS_DEVICE_OTG_FS_DOEPTSIZ3_PKTCNT_Pos (19UL)            /*!< PKTCNT (Bit 19)                                       */
#define OTG_FS_DEVICE_OTG_FS_DOEPTSIZ3_PKTCNT_Msk (0x1ff80000UL)    /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPTSIZ3_XFRSIZ_Pos (0UL)             /*!< XFRSIZ (Bit 0)                                        */
#define OTG_FS_DEVICE_OTG_FS_DOEPTSIZ3_XFRSIZ_Msk (0x7ffffUL)       /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
/* ====================================================  OTG_FS_DIEPCTL4  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL4_EPENA_Pos (31UL)              /*!< EPENA (Bit 31)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL4_EPENA_Msk (0x80000000UL)      /*!< EPENA (Bitfield-Mask: 0x01)                           */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL4_EPDIS_Pos (30UL)              /*!< EPDIS (Bit 30)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL4_EPDIS_Msk (0x40000000UL)      /*!< EPDIS (Bitfield-Mask: 0x01)                           */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL4_SODDFRM_Pos (29UL)            /*!< SODDFRM (Bit 29)                                      */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL4_SODDFRM_Msk (0x20000000UL)    /*!< SODDFRM (Bitfield-Mask: 0x01)                         */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL4_SD0PID_SEVNFRM_Pos (28UL)     /*!< SD0PID_SEVNFRM (Bit 28)                               */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL4_SD0PID_SEVNFRM_Msk (0x10000000UL) /*!< SD0PID_SEVNFRM (Bitfield-Mask: 0x01)              */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL4_SNAK_Pos (27UL)               /*!< SNAK (Bit 27)                                         */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL4_SNAK_Msk (0x8000000UL)        /*!< SNAK (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL4_CNAK_Pos (26UL)               /*!< CNAK (Bit 26)                                         */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL4_CNAK_Msk (0x4000000UL)        /*!< CNAK (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL4_TXFNUM_Pos (22UL)             /*!< TXFNUM (Bit 22)                                       */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL4_TXFNUM_Msk (0x3c00000UL)      /*!< TXFNUM (Bitfield-Mask: 0x0f)                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL4_Stall_Pos (21UL)              /*!< Stall (Bit 21)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL4_Stall_Msk (0x200000UL)        /*!< Stall (Bitfield-Mask: 0x01)                           */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL4_EPTYP_Pos (18UL)              /*!< EPTYP (Bit 18)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL4_EPTYP_Msk (0xc0000UL)         /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL4_NAKSTS_Pos (17UL)             /*!< NAKSTS (Bit 17)                                       */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL4_NAKSTS_Msk (0x20000UL)        /*!< NAKSTS (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL4_EONUM_DPID_Pos (16UL)         /*!< EONUM_DPID (Bit 16)                                   */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL4_EONUM_DPID_Msk (0x10000UL)    /*!< EONUM_DPID (Bitfield-Mask: 0x01)                      */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL4_USBAEP_Pos (15UL)             /*!< USBAEP (Bit 15)                                       */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL4_USBAEP_Msk (0x8000UL)         /*!< USBAEP (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL4_MPSIZ_Pos (0UL)               /*!< MPSIZ (Bit 0)                                         */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL4_MPSIZ_Msk (0x7ffUL)           /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
/* ====================================================  OTG_FS_DIEPINT4  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT4_TXFE_Pos (7UL)                /*!< TXFE (Bit 7)                                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT4_TXFE_Msk (0x80UL)             /*!< TXFE (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT4_INEPNE_Pos (6UL)              /*!< INEPNE (Bit 6)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT4_INEPNE_Msk (0x40UL)           /*!< INEPNE (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT4_ITTXFE_Pos (4UL)              /*!< ITTXFE (Bit 4)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT4_ITTXFE_Msk (0x10UL)           /*!< ITTXFE (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT4_TOC_Pos (3UL)                 /*!< TOC (Bit 3)                                           */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT4_TOC_Msk (0x8UL)               /*!< TOC (Bitfield-Mask: 0x01)                             */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT4_EPDISD_Pos (1UL)              /*!< EPDISD (Bit 1)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT4_EPDISD_Msk (0x2UL)            /*!< EPDISD (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT4_XFRC_Pos (0UL)                /*!< XFRC (Bit 0)                                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT4_XFRC_Msk (0x1UL)              /*!< XFRC (Bitfield-Mask: 0x01)                            */
/* ===================================================  OTG_FS_DIEPTSIZ4  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DIEPTSIZ4_MCNT_Pos (29UL)              /*!< MCNT (Bit 29)                                         */
#define OTG_FS_DEVICE_OTG_FS_DIEPTSIZ4_MCNT_Msk (0x60000000UL)      /*!< MCNT (Bitfield-Mask: 0x03)                            */
#define OTG_FS_DEVICE_OTG_FS_DIEPTSIZ4_PKTCNT_Pos (19UL)            /*!< PKTCNT (Bit 19)                                       */
#define OTG_FS_DEVICE_OTG_FS_DIEPTSIZ4_PKTCNT_Msk (0x1ff80000UL)    /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_FS_DEVICE_OTG_FS_DIEPTSIZ4_XFRSIZ_Pos (0UL)             /*!< XFRSIZ (Bit 0)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPTSIZ4_XFRSIZ_Msk (0x7ffffUL)       /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
/* ====================================================  OTG_FS_DTXFSTS4  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DTXFSTS4_INEPTFSAV_Pos (0UL)           /*!< INEPTFSAV (Bit 0)                                     */
#define OTG_FS_DEVICE_OTG_FS_DTXFSTS4_INEPTFSAV_Msk (0xffffUL)      /*!< INEPTFSAV (Bitfield-Mask: 0xffff)                     */
/* ====================================================  OTG_FS_DIEPCTL5  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL5_EPENA_Pos (31UL)              /*!< EPENA (Bit 31)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL5_EPENA_Msk (0x80000000UL)      /*!< EPENA (Bitfield-Mask: 0x01)                           */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL5_EPDIS_Pos (30UL)              /*!< EPDIS (Bit 30)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL5_EPDIS_Msk (0x40000000UL)      /*!< EPDIS (Bitfield-Mask: 0x01)                           */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL5_SODDFRM_Pos (29UL)            /*!< SODDFRM (Bit 29)                                      */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL5_SODDFRM_Msk (0x20000000UL)    /*!< SODDFRM (Bitfield-Mask: 0x01)                         */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL5_SD0PID_SEVNFRM_Pos (28UL)     /*!< SD0PID_SEVNFRM (Bit 28)                               */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL5_SD0PID_SEVNFRM_Msk (0x10000000UL) /*!< SD0PID_SEVNFRM (Bitfield-Mask: 0x01)              */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL5_SNAK_Pos (27UL)               /*!< SNAK (Bit 27)                                         */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL5_SNAK_Msk (0x8000000UL)        /*!< SNAK (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL5_CNAK_Pos (26UL)               /*!< CNAK (Bit 26)                                         */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL5_CNAK_Msk (0x4000000UL)        /*!< CNAK (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL5_TXFNUM_Pos (22UL)             /*!< TXFNUM (Bit 22)                                       */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL5_TXFNUM_Msk (0x3c00000UL)      /*!< TXFNUM (Bitfield-Mask: 0x0f)                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL5_Stall_Pos (21UL)              /*!< Stall (Bit 21)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL5_Stall_Msk (0x200000UL)        /*!< Stall (Bitfield-Mask: 0x01)                           */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL5_EPTYP_Pos (18UL)              /*!< EPTYP (Bit 18)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL5_EPTYP_Msk (0xc0000UL)         /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL5_NAKSTS_Pos (17UL)             /*!< NAKSTS (Bit 17)                                       */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL5_NAKSTS_Msk (0x20000UL)        /*!< NAKSTS (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL5_EONUM_DPID_Pos (16UL)         /*!< EONUM_DPID (Bit 16)                                   */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL5_EONUM_DPID_Msk (0x10000UL)    /*!< EONUM_DPID (Bitfield-Mask: 0x01)                      */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL5_USBAEP_Pos (15UL)             /*!< USBAEP (Bit 15)                                       */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL5_USBAEP_Msk (0x8000UL)         /*!< USBAEP (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL5_MPSIZ_Pos (0UL)               /*!< MPSIZ (Bit 0)                                         */
#define OTG_FS_DEVICE_OTG_FS_DIEPCTL5_MPSIZ_Msk (0x7ffUL)           /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
/* ====================================================  OTG_FS_DIEPINT5  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT5_TXFE_Pos (7UL)                /*!< TXFE (Bit 7)                                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT5_TXFE_Msk (0x80UL)             /*!< TXFE (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT5_INEPNE_Pos (6UL)              /*!< INEPNE (Bit 6)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT5_INEPNE_Msk (0x40UL)           /*!< INEPNE (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT5_ITTXFE_Pos (4UL)              /*!< ITTXFE (Bit 4)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT5_ITTXFE_Msk (0x10UL)           /*!< ITTXFE (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT5_TOC_Pos (3UL)                 /*!< TOC (Bit 3)                                           */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT5_TOC_Msk (0x8UL)               /*!< TOC (Bitfield-Mask: 0x01)                             */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT5_EPDISD_Pos (1UL)              /*!< EPDISD (Bit 1)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT5_EPDISD_Msk (0x2UL)            /*!< EPDISD (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT5_XFRC_Pos (0UL)                /*!< XFRC (Bit 0)                                          */
#define OTG_FS_DEVICE_OTG_FS_DIEPINT5_XFRC_Msk (0x1UL)              /*!< XFRC (Bitfield-Mask: 0x01)                            */
/* ===================================================  OTG_FS_DIEPTSIZ55  =================================================== */
#define OTG_FS_DEVICE_OTG_FS_DIEPTSIZ55_MCNT_Pos (29UL)             /*!< MCNT (Bit 29)                                         */
#define OTG_FS_DEVICE_OTG_FS_DIEPTSIZ55_MCNT_Msk (0x60000000UL)     /*!< MCNT (Bitfield-Mask: 0x03)                            */
#define OTG_FS_DEVICE_OTG_FS_DIEPTSIZ55_PKTCNT_Pos (19UL)           /*!< PKTCNT (Bit 19)                                       */
#define OTG_FS_DEVICE_OTG_FS_DIEPTSIZ55_PKTCNT_Msk (0x1ff80000UL)   /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_FS_DEVICE_OTG_FS_DIEPTSIZ55_XFRSIZ_Pos (0UL)            /*!< XFRSIZ (Bit 0)                                        */
#define OTG_FS_DEVICE_OTG_FS_DIEPTSIZ55_XFRSIZ_Msk (0x7ffffUL)      /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
/* ===================================================  OTG_FS_DTXFSTS55  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DTXFSTS55_INEPTFSAV_Pos (0UL)          /*!< INEPTFSAV (Bit 0)                                     */
#define OTG_FS_DEVICE_OTG_FS_DTXFSTS55_INEPTFSAV_Msk (0xffffUL)     /*!< INEPTFSAV (Bitfield-Mask: 0xffff)                     */
/* ====================================================  OTG_FS_DOEPCTL4  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL4_EPENA_Pos (31UL)              /*!< EPENA (Bit 31)                                        */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL4_EPENA_Msk (0x80000000UL)      /*!< EPENA (Bitfield-Mask: 0x01)                           */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL4_EPDIS_Pos (30UL)              /*!< EPDIS (Bit 30)                                        */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL4_EPDIS_Msk (0x40000000UL)      /*!< EPDIS (Bitfield-Mask: 0x01)                           */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL4_SODDFRM_Pos (29UL)            /*!< SODDFRM (Bit 29)                                      */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL4_SODDFRM_Msk (0x20000000UL)    /*!< SODDFRM (Bitfield-Mask: 0x01)                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL4_SD0PID_SEVNFRM_Pos (28UL)     /*!< SD0PID_SEVNFRM (Bit 28)                               */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL4_SD0PID_SEVNFRM_Msk (0x10000000UL) /*!< SD0PID_SEVNFRM (Bitfield-Mask: 0x01)              */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL4_SNAK_Pos (27UL)               /*!< SNAK (Bit 27)                                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL4_SNAK_Msk (0x8000000UL)        /*!< SNAK (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL4_CNAK_Pos (26UL)               /*!< CNAK (Bit 26)                                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL4_CNAK_Msk (0x4000000UL)        /*!< CNAK (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL4_Stall_Pos (21UL)              /*!< Stall (Bit 21)                                        */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL4_Stall_Msk (0x200000UL)        /*!< Stall (Bitfield-Mask: 0x01)                           */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL4_SNPM_Pos (20UL)               /*!< SNPM (Bit 20)                                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL4_SNPM_Msk (0x100000UL)         /*!< SNPM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL4_EPTYP_Pos (18UL)              /*!< EPTYP (Bit 18)                                        */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL4_EPTYP_Msk (0xc0000UL)         /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL4_NAKSTS_Pos (17UL)             /*!< NAKSTS (Bit 17)                                       */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL4_NAKSTS_Msk (0x20000UL)        /*!< NAKSTS (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL4_EONUM_DPID_Pos (16UL)         /*!< EONUM_DPID (Bit 16)                                   */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL4_EONUM_DPID_Msk (0x10000UL)    /*!< EONUM_DPID (Bitfield-Mask: 0x01)                      */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL4_USBAEP_Pos (15UL)             /*!< USBAEP (Bit 15)                                       */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL4_USBAEP_Msk (0x8000UL)         /*!< USBAEP (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL4_MPSIZ_Pos (0UL)               /*!< MPSIZ (Bit 0)                                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL4_MPSIZ_Msk (0x7ffUL)           /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
/* ====================================================  OTG_FS_DOEPINT4  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT4_B2BSTUP_Pos (6UL)             /*!< B2BSTUP (Bit 6)                                       */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT4_B2BSTUP_Msk (0x40UL)          /*!< B2BSTUP (Bitfield-Mask: 0x01)                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT4_OTEPDIS_Pos (4UL)             /*!< OTEPDIS (Bit 4)                                       */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT4_OTEPDIS_Msk (0x10UL)          /*!< OTEPDIS (Bitfield-Mask: 0x01)                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT4_STUP_Pos (3UL)                /*!< STUP (Bit 3)                                          */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT4_STUP_Msk (0x8UL)              /*!< STUP (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT4_EPDISD_Pos (1UL)              /*!< EPDISD (Bit 1)                                        */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT4_EPDISD_Msk (0x2UL)            /*!< EPDISD (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT4_XFRC_Pos (0UL)                /*!< XFRC (Bit 0)                                          */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT4_XFRC_Msk (0x1UL)              /*!< XFRC (Bitfield-Mask: 0x01)                            */
/* ===================================================  OTG_FS_DOEPTSIZ4  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DOEPTSIZ4_RXDPID_STUPCNT_Pos (29UL)    /*!< RXDPID_STUPCNT (Bit 29)                               */
#define OTG_FS_DEVICE_OTG_FS_DOEPTSIZ4_RXDPID_STUPCNT_Msk (0x60000000UL) /*!< RXDPID_STUPCNT (Bitfield-Mask: 0x03)             */
#define OTG_FS_DEVICE_OTG_FS_DOEPTSIZ4_PKTCNT_Pos (19UL)            /*!< PKTCNT (Bit 19)                                       */
#define OTG_FS_DEVICE_OTG_FS_DOEPTSIZ4_PKTCNT_Msk (0x1ff80000UL)    /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPTSIZ4_XFRSIZ_Pos (0UL)             /*!< XFRSIZ (Bit 0)                                        */
#define OTG_FS_DEVICE_OTG_FS_DOEPTSIZ4_XFRSIZ_Msk (0x7ffffUL)       /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
/* ====================================================  OTG_FS_DOEPCTL5  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL5_EPENA_Pos (31UL)              /*!< EPENA (Bit 31)                                        */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL5_EPENA_Msk (0x80000000UL)      /*!< EPENA (Bitfield-Mask: 0x01)                           */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL5_EPDIS_Pos (30UL)              /*!< EPDIS (Bit 30)                                        */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL5_EPDIS_Msk (0x40000000UL)      /*!< EPDIS (Bitfield-Mask: 0x01)                           */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL5_SODDFRM_Pos (29UL)            /*!< SODDFRM (Bit 29)                                      */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL5_SODDFRM_Msk (0x20000000UL)    /*!< SODDFRM (Bitfield-Mask: 0x01)                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL5_SD0PID_SEVNFRM_Pos (28UL)     /*!< SD0PID_SEVNFRM (Bit 28)                               */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL5_SD0PID_SEVNFRM_Msk (0x10000000UL) /*!< SD0PID_SEVNFRM (Bitfield-Mask: 0x01)              */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL5_SNAK_Pos (27UL)               /*!< SNAK (Bit 27)                                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL5_SNAK_Msk (0x8000000UL)        /*!< SNAK (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL5_CNAK_Pos (26UL)               /*!< CNAK (Bit 26)                                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL5_CNAK_Msk (0x4000000UL)        /*!< CNAK (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL5_Stall_Pos (21UL)              /*!< Stall (Bit 21)                                        */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL5_Stall_Msk (0x200000UL)        /*!< Stall (Bitfield-Mask: 0x01)                           */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL5_SNPM_Pos (20UL)               /*!< SNPM (Bit 20)                                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL5_SNPM_Msk (0x100000UL)         /*!< SNPM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL5_EPTYP_Pos (18UL)              /*!< EPTYP (Bit 18)                                        */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL5_EPTYP_Msk (0xc0000UL)         /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL5_NAKSTS_Pos (17UL)             /*!< NAKSTS (Bit 17)                                       */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL5_NAKSTS_Msk (0x20000UL)        /*!< NAKSTS (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL5_EONUM_DPID_Pos (16UL)         /*!< EONUM_DPID (Bit 16)                                   */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL5_EONUM_DPID_Msk (0x10000UL)    /*!< EONUM_DPID (Bitfield-Mask: 0x01)                      */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL5_USBAEP_Pos (15UL)             /*!< USBAEP (Bit 15)                                       */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL5_USBAEP_Msk (0x8000UL)         /*!< USBAEP (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL5_MPSIZ_Pos (0UL)               /*!< MPSIZ (Bit 0)                                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPCTL5_MPSIZ_Msk (0x7ffUL)           /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
/* ====================================================  OTG_FS_DOEPINT5  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT5_B2BSTUP_Pos (6UL)             /*!< B2BSTUP (Bit 6)                                       */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT5_B2BSTUP_Msk (0x40UL)          /*!< B2BSTUP (Bitfield-Mask: 0x01)                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT5_OTEPDIS_Pos (4UL)             /*!< OTEPDIS (Bit 4)                                       */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT5_OTEPDIS_Msk (0x10UL)          /*!< OTEPDIS (Bitfield-Mask: 0x01)                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT5_STUP_Pos (3UL)                /*!< STUP (Bit 3)                                          */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT5_STUP_Msk (0x8UL)              /*!< STUP (Bitfield-Mask: 0x01)                            */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT5_EPDISD_Pos (1UL)              /*!< EPDISD (Bit 1)                                        */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT5_EPDISD_Msk (0x2UL)            /*!< EPDISD (Bitfield-Mask: 0x01)                          */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT5_XFRC_Pos (0UL)                /*!< XFRC (Bit 0)                                          */
#define OTG_FS_DEVICE_OTG_FS_DOEPINT5_XFRC_Msk (0x1UL)              /*!< XFRC (Bitfield-Mask: 0x01)                            */
/* ===================================================  OTG_FS_DOEPTSIZ5  ==================================================== */
#define OTG_FS_DEVICE_OTG_FS_DOEPTSIZ5_RXDPID_STUPCNT_Pos (29UL)    /*!< RXDPID_STUPCNT (Bit 29)                               */
#define OTG_FS_DEVICE_OTG_FS_DOEPTSIZ5_RXDPID_STUPCNT_Msk (0x60000000UL) /*!< RXDPID_STUPCNT (Bitfield-Mask: 0x03)             */
#define OTG_FS_DEVICE_OTG_FS_DOEPTSIZ5_PKTCNT_Pos (19UL)            /*!< PKTCNT (Bit 19)                                       */
#define OTG_FS_DEVICE_OTG_FS_DOEPTSIZ5_PKTCNT_Msk (0x1ff80000UL)    /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_FS_DEVICE_OTG_FS_DOEPTSIZ5_XFRSIZ_Pos (0UL)             /*!< XFRSIZ (Bit 0)                                        */
#define OTG_FS_DEVICE_OTG_FS_DOEPTSIZ5_XFRSIZ_Msk (0x7ffffUL)       /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */


/* =========================================================================================================================== */
/* ================                                        OTG_FS_HOST                                        ================ */
/* =========================================================================================================================== */

/* ======================================================  OTG_FS_HCFG  ====================================================== */
#define OTG_FS_HOST_OTG_FS_HCFG_FSLSPCS_Pos (0UL)                   /*!< FSLSPCS (Bit 0)                                       */
#define OTG_FS_HOST_OTG_FS_HCFG_FSLSPCS_Msk (0x3UL)                 /*!< FSLSPCS (Bitfield-Mask: 0x03)                         */
#define OTG_FS_HOST_OTG_FS_HCFG_FSLSS_Pos (2UL)                     /*!< FSLSS (Bit 2)                                         */
#define OTG_FS_HOST_OTG_FS_HCFG_FSLSS_Msk (0x4UL)                   /*!< FSLSS (Bitfield-Mask: 0x01)                           */
/* ======================================================  OTG_FS_HFIR  ====================================================== */
#define OTG_FS_HOST_OTG_FS_HFIR_FRIVL_Pos (0UL)                     /*!< FRIVL (Bit 0)                                         */
#define OTG_FS_HOST_OTG_FS_HFIR_FRIVL_Msk (0xffffUL)                /*!< FRIVL (Bitfield-Mask: 0xffff)                         */
/* =====================================================  OTG_FS_HFNUM  ====================================================== */
#define OTG_FS_HOST_OTG_FS_HFNUM_FRNUM_Pos (0UL)                    /*!< FRNUM (Bit 0)                                         */
#define OTG_FS_HOST_OTG_FS_HFNUM_FRNUM_Msk (0xffffUL)               /*!< FRNUM (Bitfield-Mask: 0xffff)                         */
#define OTG_FS_HOST_OTG_FS_HFNUM_FTREM_Pos (16UL)                   /*!< FTREM (Bit 16)                                        */
#define OTG_FS_HOST_OTG_FS_HFNUM_FTREM_Msk (0xffff0000UL)           /*!< FTREM (Bitfield-Mask: 0xffff)                         */
/* ====================================================  OTG_FS_HPTXSTS  ===================================================== */
#define OTG_FS_HOST_OTG_FS_HPTXSTS_PTXFSAVL_Pos (0UL)               /*!< PTXFSAVL (Bit 0)                                      */
#define OTG_FS_HOST_OTG_FS_HPTXSTS_PTXFSAVL_Msk (0xffffUL)          /*!< PTXFSAVL (Bitfield-Mask: 0xffff)                      */
#define OTG_FS_HOST_OTG_FS_HPTXSTS_PTXQSAV_Pos (16UL)               /*!< PTXQSAV (Bit 16)                                      */
#define OTG_FS_HOST_OTG_FS_HPTXSTS_PTXQSAV_Msk (0xff0000UL)         /*!< PTXQSAV (Bitfield-Mask: 0xff)                         */
#define OTG_FS_HOST_OTG_FS_HPTXSTS_PTXQTOP_Pos (24UL)               /*!< PTXQTOP (Bit 24)                                      */
#define OTG_FS_HOST_OTG_FS_HPTXSTS_PTXQTOP_Msk (0xff000000UL)       /*!< PTXQTOP (Bitfield-Mask: 0xff)                         */
/* =====================================================  OTG_FS_HAINT  ====================================================== */
#define OTG_FS_HOST_OTG_FS_HAINT_HAINT_Pos (0UL)                    /*!< HAINT (Bit 0)                                         */
#define OTG_FS_HOST_OTG_FS_HAINT_HAINT_Msk (0xffffUL)               /*!< HAINT (Bitfield-Mask: 0xffff)                         */
/* ====================================================  OTG_FS_HAINTMSK  ==================================================== */
#define OTG_FS_HOST_OTG_FS_HAINTMSK_HAINTM_Pos (0UL)                /*!< HAINTM (Bit 0)                                        */
#define OTG_FS_HOST_OTG_FS_HAINTMSK_HAINTM_Msk (0xffffUL)           /*!< HAINTM (Bitfield-Mask: 0xffff)                        */
/* ======================================================  OTG_FS_HPRT  ====================================================== */
#define OTG_FS_HOST_OTG_FS_HPRT_PCSTS_Pos (0UL)                     /*!< PCSTS (Bit 0)                                         */
#define OTG_FS_HOST_OTG_FS_HPRT_PCSTS_Msk (0x1UL)                   /*!< PCSTS (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HPRT_PCDET_Pos (1UL)                     /*!< PCDET (Bit 1)                                         */
#define OTG_FS_HOST_OTG_FS_HPRT_PCDET_Msk (0x2UL)                   /*!< PCDET (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HPRT_PENA_Pos  (2UL)                     /*!< PENA (Bit 2)                                          */
#define OTG_FS_HOST_OTG_FS_HPRT_PENA_Msk  (0x4UL)                   /*!< PENA (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HPRT_PENCHNG_Pos (3UL)                   /*!< PENCHNG (Bit 3)                                       */
#define OTG_FS_HOST_OTG_FS_HPRT_PENCHNG_Msk (0x8UL)                 /*!< PENCHNG (Bitfield-Mask: 0x01)                         */
#define OTG_FS_HOST_OTG_FS_HPRT_POCA_Pos  (4UL)                     /*!< POCA (Bit 4)                                          */
#define OTG_FS_HOST_OTG_FS_HPRT_POCA_Msk  (0x10UL)                  /*!< POCA (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HPRT_POCCHNG_Pos (5UL)                   /*!< POCCHNG (Bit 5)                                       */
#define OTG_FS_HOST_OTG_FS_HPRT_POCCHNG_Msk (0x20UL)                /*!< POCCHNG (Bitfield-Mask: 0x01)                         */
#define OTG_FS_HOST_OTG_FS_HPRT_PRES_Pos  (6UL)                     /*!< PRES (Bit 6)                                          */
#define OTG_FS_HOST_OTG_FS_HPRT_PRES_Msk  (0x40UL)                  /*!< PRES (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HPRT_PSUSP_Pos (7UL)                     /*!< PSUSP (Bit 7)                                         */
#define OTG_FS_HOST_OTG_FS_HPRT_PSUSP_Msk (0x80UL)                  /*!< PSUSP (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HPRT_PRST_Pos  (8UL)                     /*!< PRST (Bit 8)                                          */
#define OTG_FS_HOST_OTG_FS_HPRT_PRST_Msk  (0x100UL)                 /*!< PRST (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HPRT_PLSTS_Pos (10UL)                    /*!< PLSTS (Bit 10)                                        */
#define OTG_FS_HOST_OTG_FS_HPRT_PLSTS_Msk (0xc00UL)                 /*!< PLSTS (Bitfield-Mask: 0x03)                           */
#define OTG_FS_HOST_OTG_FS_HPRT_PPWR_Pos  (12UL)                    /*!< PPWR (Bit 12)                                         */
#define OTG_FS_HOST_OTG_FS_HPRT_PPWR_Msk  (0x1000UL)                /*!< PPWR (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HPRT_PTCTL_Pos (13UL)                    /*!< PTCTL (Bit 13)                                        */
#define OTG_FS_HOST_OTG_FS_HPRT_PTCTL_Msk (0x1e000UL)               /*!< PTCTL (Bitfield-Mask: 0x0f)                           */
#define OTG_FS_HOST_OTG_FS_HPRT_PSPD_Pos  (17UL)                    /*!< PSPD (Bit 17)                                         */
#define OTG_FS_HOST_OTG_FS_HPRT_PSPD_Msk  (0x60000UL)               /*!< PSPD (Bitfield-Mask: 0x03)                            */
/* ====================================================  OTG_FS_HCCHAR0  ===================================================== */
#define OTG_FS_HOST_OTG_FS_HCCHAR0_MPSIZ_Pos (0UL)                  /*!< MPSIZ (Bit 0)                                         */
#define OTG_FS_HOST_OTG_FS_HCCHAR0_MPSIZ_Msk (0x7ffUL)              /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_FS_HOST_OTG_FS_HCCHAR0_EPNUM_Pos (11UL)                 /*!< EPNUM (Bit 11)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR0_EPNUM_Msk (0x7800UL)             /*!< EPNUM (Bitfield-Mask: 0x0f)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR0_EPDIR_Pos (15UL)                 /*!< EPDIR (Bit 15)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR0_EPDIR_Msk (0x8000UL)             /*!< EPDIR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR0_LSDEV_Pos (17UL)                 /*!< LSDEV (Bit 17)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR0_LSDEV_Msk (0x20000UL)            /*!< LSDEV (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR0_EPTYP_Pos (18UL)                 /*!< EPTYP (Bit 18)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR0_EPTYP_Msk (0xc0000UL)            /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR0_MCNT_Pos (20UL)                  /*!< MCNT (Bit 20)                                         */
#define OTG_FS_HOST_OTG_FS_HCCHAR0_MCNT_Msk (0x300000UL)            /*!< MCNT (Bitfield-Mask: 0x03)                            */
#define OTG_FS_HOST_OTG_FS_HCCHAR0_DAD_Pos (22UL)                   /*!< DAD (Bit 22)                                          */
#define OTG_FS_HOST_OTG_FS_HCCHAR0_DAD_Msk (0x1fc00000UL)           /*!< DAD (Bitfield-Mask: 0x7f)                             */
#define OTG_FS_HOST_OTG_FS_HCCHAR0_ODDFRM_Pos (29UL)                /*!< ODDFRM (Bit 29)                                       */
#define OTG_FS_HOST_OTG_FS_HCCHAR0_ODDFRM_Msk (0x20000000UL)        /*!< ODDFRM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCCHAR0_CHDIS_Pos (30UL)                 /*!< CHDIS (Bit 30)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR0_CHDIS_Msk (0x40000000UL)         /*!< CHDIS (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR0_CHENA_Pos (31UL)                 /*!< CHENA (Bit 31)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR0_CHENA_Msk (0x80000000UL)         /*!< CHENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_FS_HCCHAR1  ===================================================== */
#define OTG_FS_HOST_OTG_FS_HCCHAR1_MPSIZ_Pos (0UL)                  /*!< MPSIZ (Bit 0)                                         */
#define OTG_FS_HOST_OTG_FS_HCCHAR1_MPSIZ_Msk (0x7ffUL)              /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_FS_HOST_OTG_FS_HCCHAR1_EPNUM_Pos (11UL)                 /*!< EPNUM (Bit 11)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR1_EPNUM_Msk (0x7800UL)             /*!< EPNUM (Bitfield-Mask: 0x0f)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR1_EPDIR_Pos (15UL)                 /*!< EPDIR (Bit 15)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR1_EPDIR_Msk (0x8000UL)             /*!< EPDIR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR1_LSDEV_Pos (17UL)                 /*!< LSDEV (Bit 17)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR1_LSDEV_Msk (0x20000UL)            /*!< LSDEV (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR1_EPTYP_Pos (18UL)                 /*!< EPTYP (Bit 18)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR1_EPTYP_Msk (0xc0000UL)            /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR1_MCNT_Pos (20UL)                  /*!< MCNT (Bit 20)                                         */
#define OTG_FS_HOST_OTG_FS_HCCHAR1_MCNT_Msk (0x300000UL)            /*!< MCNT (Bitfield-Mask: 0x03)                            */
#define OTG_FS_HOST_OTG_FS_HCCHAR1_DAD_Pos (22UL)                   /*!< DAD (Bit 22)                                          */
#define OTG_FS_HOST_OTG_FS_HCCHAR1_DAD_Msk (0x1fc00000UL)           /*!< DAD (Bitfield-Mask: 0x7f)                             */
#define OTG_FS_HOST_OTG_FS_HCCHAR1_ODDFRM_Pos (29UL)                /*!< ODDFRM (Bit 29)                                       */
#define OTG_FS_HOST_OTG_FS_HCCHAR1_ODDFRM_Msk (0x20000000UL)        /*!< ODDFRM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCCHAR1_CHDIS_Pos (30UL)                 /*!< CHDIS (Bit 30)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR1_CHDIS_Msk (0x40000000UL)         /*!< CHDIS (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR1_CHENA_Pos (31UL)                 /*!< CHENA (Bit 31)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR1_CHENA_Msk (0x80000000UL)         /*!< CHENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_FS_HCCHAR2  ===================================================== */
#define OTG_FS_HOST_OTG_FS_HCCHAR2_MPSIZ_Pos (0UL)                  /*!< MPSIZ (Bit 0)                                         */
#define OTG_FS_HOST_OTG_FS_HCCHAR2_MPSIZ_Msk (0x7ffUL)              /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_FS_HOST_OTG_FS_HCCHAR2_EPNUM_Pos (11UL)                 /*!< EPNUM (Bit 11)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR2_EPNUM_Msk (0x7800UL)             /*!< EPNUM (Bitfield-Mask: 0x0f)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR2_EPDIR_Pos (15UL)                 /*!< EPDIR (Bit 15)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR2_EPDIR_Msk (0x8000UL)             /*!< EPDIR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR2_LSDEV_Pos (17UL)                 /*!< LSDEV (Bit 17)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR2_LSDEV_Msk (0x20000UL)            /*!< LSDEV (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR2_EPTYP_Pos (18UL)                 /*!< EPTYP (Bit 18)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR2_EPTYP_Msk (0xc0000UL)            /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR2_MCNT_Pos (20UL)                  /*!< MCNT (Bit 20)                                         */
#define OTG_FS_HOST_OTG_FS_HCCHAR2_MCNT_Msk (0x300000UL)            /*!< MCNT (Bitfield-Mask: 0x03)                            */
#define OTG_FS_HOST_OTG_FS_HCCHAR2_DAD_Pos (22UL)                   /*!< DAD (Bit 22)                                          */
#define OTG_FS_HOST_OTG_FS_HCCHAR2_DAD_Msk (0x1fc00000UL)           /*!< DAD (Bitfield-Mask: 0x7f)                             */
#define OTG_FS_HOST_OTG_FS_HCCHAR2_ODDFRM_Pos (29UL)                /*!< ODDFRM (Bit 29)                                       */
#define OTG_FS_HOST_OTG_FS_HCCHAR2_ODDFRM_Msk (0x20000000UL)        /*!< ODDFRM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCCHAR2_CHDIS_Pos (30UL)                 /*!< CHDIS (Bit 30)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR2_CHDIS_Msk (0x40000000UL)         /*!< CHDIS (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR2_CHENA_Pos (31UL)                 /*!< CHENA (Bit 31)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR2_CHENA_Msk (0x80000000UL)         /*!< CHENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_FS_HCCHAR3  ===================================================== */
#define OTG_FS_HOST_OTG_FS_HCCHAR3_MPSIZ_Pos (0UL)                  /*!< MPSIZ (Bit 0)                                         */
#define OTG_FS_HOST_OTG_FS_HCCHAR3_MPSIZ_Msk (0x7ffUL)              /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_FS_HOST_OTG_FS_HCCHAR3_EPNUM_Pos (11UL)                 /*!< EPNUM (Bit 11)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR3_EPNUM_Msk (0x7800UL)             /*!< EPNUM (Bitfield-Mask: 0x0f)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR3_EPDIR_Pos (15UL)                 /*!< EPDIR (Bit 15)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR3_EPDIR_Msk (0x8000UL)             /*!< EPDIR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR3_LSDEV_Pos (17UL)                 /*!< LSDEV (Bit 17)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR3_LSDEV_Msk (0x20000UL)            /*!< LSDEV (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR3_EPTYP_Pos (18UL)                 /*!< EPTYP (Bit 18)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR3_EPTYP_Msk (0xc0000UL)            /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR3_MCNT_Pos (20UL)                  /*!< MCNT (Bit 20)                                         */
#define OTG_FS_HOST_OTG_FS_HCCHAR3_MCNT_Msk (0x300000UL)            /*!< MCNT (Bitfield-Mask: 0x03)                            */
#define OTG_FS_HOST_OTG_FS_HCCHAR3_DAD_Pos (22UL)                   /*!< DAD (Bit 22)                                          */
#define OTG_FS_HOST_OTG_FS_HCCHAR3_DAD_Msk (0x1fc00000UL)           /*!< DAD (Bitfield-Mask: 0x7f)                             */
#define OTG_FS_HOST_OTG_FS_HCCHAR3_ODDFRM_Pos (29UL)                /*!< ODDFRM (Bit 29)                                       */
#define OTG_FS_HOST_OTG_FS_HCCHAR3_ODDFRM_Msk (0x20000000UL)        /*!< ODDFRM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCCHAR3_CHDIS_Pos (30UL)                 /*!< CHDIS (Bit 30)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR3_CHDIS_Msk (0x40000000UL)         /*!< CHDIS (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR3_CHENA_Pos (31UL)                 /*!< CHENA (Bit 31)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR3_CHENA_Msk (0x80000000UL)         /*!< CHENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_FS_HCCHAR4  ===================================================== */
#define OTG_FS_HOST_OTG_FS_HCCHAR4_MPSIZ_Pos (0UL)                  /*!< MPSIZ (Bit 0)                                         */
#define OTG_FS_HOST_OTG_FS_HCCHAR4_MPSIZ_Msk (0x7ffUL)              /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_FS_HOST_OTG_FS_HCCHAR4_EPNUM_Pos (11UL)                 /*!< EPNUM (Bit 11)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR4_EPNUM_Msk (0x7800UL)             /*!< EPNUM (Bitfield-Mask: 0x0f)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR4_EPDIR_Pos (15UL)                 /*!< EPDIR (Bit 15)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR4_EPDIR_Msk (0x8000UL)             /*!< EPDIR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR4_LSDEV_Pos (17UL)                 /*!< LSDEV (Bit 17)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR4_LSDEV_Msk (0x20000UL)            /*!< LSDEV (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR4_EPTYP_Pos (18UL)                 /*!< EPTYP (Bit 18)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR4_EPTYP_Msk (0xc0000UL)            /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR4_MCNT_Pos (20UL)                  /*!< MCNT (Bit 20)                                         */
#define OTG_FS_HOST_OTG_FS_HCCHAR4_MCNT_Msk (0x300000UL)            /*!< MCNT (Bitfield-Mask: 0x03)                            */
#define OTG_FS_HOST_OTG_FS_HCCHAR4_DAD_Pos (22UL)                   /*!< DAD (Bit 22)                                          */
#define OTG_FS_HOST_OTG_FS_HCCHAR4_DAD_Msk (0x1fc00000UL)           /*!< DAD (Bitfield-Mask: 0x7f)                             */
#define OTG_FS_HOST_OTG_FS_HCCHAR4_ODDFRM_Pos (29UL)                /*!< ODDFRM (Bit 29)                                       */
#define OTG_FS_HOST_OTG_FS_HCCHAR4_ODDFRM_Msk (0x20000000UL)        /*!< ODDFRM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCCHAR4_CHDIS_Pos (30UL)                 /*!< CHDIS (Bit 30)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR4_CHDIS_Msk (0x40000000UL)         /*!< CHDIS (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR4_CHENA_Pos (31UL)                 /*!< CHENA (Bit 31)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR4_CHENA_Msk (0x80000000UL)         /*!< CHENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_FS_HCCHAR5  ===================================================== */
#define OTG_FS_HOST_OTG_FS_HCCHAR5_MPSIZ_Pos (0UL)                  /*!< MPSIZ (Bit 0)                                         */
#define OTG_FS_HOST_OTG_FS_HCCHAR5_MPSIZ_Msk (0x7ffUL)              /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_FS_HOST_OTG_FS_HCCHAR5_EPNUM_Pos (11UL)                 /*!< EPNUM (Bit 11)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR5_EPNUM_Msk (0x7800UL)             /*!< EPNUM (Bitfield-Mask: 0x0f)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR5_EPDIR_Pos (15UL)                 /*!< EPDIR (Bit 15)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR5_EPDIR_Msk (0x8000UL)             /*!< EPDIR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR5_LSDEV_Pos (17UL)                 /*!< LSDEV (Bit 17)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR5_LSDEV_Msk (0x20000UL)            /*!< LSDEV (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR5_EPTYP_Pos (18UL)                 /*!< EPTYP (Bit 18)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR5_EPTYP_Msk (0xc0000UL)            /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR5_MCNT_Pos (20UL)                  /*!< MCNT (Bit 20)                                         */
#define OTG_FS_HOST_OTG_FS_HCCHAR5_MCNT_Msk (0x300000UL)            /*!< MCNT (Bitfield-Mask: 0x03)                            */
#define OTG_FS_HOST_OTG_FS_HCCHAR5_DAD_Pos (22UL)                   /*!< DAD (Bit 22)                                          */
#define OTG_FS_HOST_OTG_FS_HCCHAR5_DAD_Msk (0x1fc00000UL)           /*!< DAD (Bitfield-Mask: 0x7f)                             */
#define OTG_FS_HOST_OTG_FS_HCCHAR5_ODDFRM_Pos (29UL)                /*!< ODDFRM (Bit 29)                                       */
#define OTG_FS_HOST_OTG_FS_HCCHAR5_ODDFRM_Msk (0x20000000UL)        /*!< ODDFRM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCCHAR5_CHDIS_Pos (30UL)                 /*!< CHDIS (Bit 30)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR5_CHDIS_Msk (0x40000000UL)         /*!< CHDIS (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR5_CHENA_Pos (31UL)                 /*!< CHENA (Bit 31)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR5_CHENA_Msk (0x80000000UL)         /*!< CHENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_FS_HCCHAR6  ===================================================== */
#define OTG_FS_HOST_OTG_FS_HCCHAR6_MPSIZ_Pos (0UL)                  /*!< MPSIZ (Bit 0)                                         */
#define OTG_FS_HOST_OTG_FS_HCCHAR6_MPSIZ_Msk (0x7ffUL)              /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_FS_HOST_OTG_FS_HCCHAR6_EPNUM_Pos (11UL)                 /*!< EPNUM (Bit 11)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR6_EPNUM_Msk (0x7800UL)             /*!< EPNUM (Bitfield-Mask: 0x0f)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR6_EPDIR_Pos (15UL)                 /*!< EPDIR (Bit 15)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR6_EPDIR_Msk (0x8000UL)             /*!< EPDIR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR6_LSDEV_Pos (17UL)                 /*!< LSDEV (Bit 17)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR6_LSDEV_Msk (0x20000UL)            /*!< LSDEV (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR6_EPTYP_Pos (18UL)                 /*!< EPTYP (Bit 18)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR6_EPTYP_Msk (0xc0000UL)            /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR6_MCNT_Pos (20UL)                  /*!< MCNT (Bit 20)                                         */
#define OTG_FS_HOST_OTG_FS_HCCHAR6_MCNT_Msk (0x300000UL)            /*!< MCNT (Bitfield-Mask: 0x03)                            */
#define OTG_FS_HOST_OTG_FS_HCCHAR6_DAD_Pos (22UL)                   /*!< DAD (Bit 22)                                          */
#define OTG_FS_HOST_OTG_FS_HCCHAR6_DAD_Msk (0x1fc00000UL)           /*!< DAD (Bitfield-Mask: 0x7f)                             */
#define OTG_FS_HOST_OTG_FS_HCCHAR6_ODDFRM_Pos (29UL)                /*!< ODDFRM (Bit 29)                                       */
#define OTG_FS_HOST_OTG_FS_HCCHAR6_ODDFRM_Msk (0x20000000UL)        /*!< ODDFRM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCCHAR6_CHDIS_Pos (30UL)                 /*!< CHDIS (Bit 30)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR6_CHDIS_Msk (0x40000000UL)         /*!< CHDIS (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR6_CHENA_Pos (31UL)                 /*!< CHENA (Bit 31)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR6_CHENA_Msk (0x80000000UL)         /*!< CHENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_FS_HCCHAR7  ===================================================== */
#define OTG_FS_HOST_OTG_FS_HCCHAR7_MPSIZ_Pos (0UL)                  /*!< MPSIZ (Bit 0)                                         */
#define OTG_FS_HOST_OTG_FS_HCCHAR7_MPSIZ_Msk (0x7ffUL)              /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_FS_HOST_OTG_FS_HCCHAR7_EPNUM_Pos (11UL)                 /*!< EPNUM (Bit 11)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR7_EPNUM_Msk (0x7800UL)             /*!< EPNUM (Bitfield-Mask: 0x0f)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR7_EPDIR_Pos (15UL)                 /*!< EPDIR (Bit 15)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR7_EPDIR_Msk (0x8000UL)             /*!< EPDIR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR7_LSDEV_Pos (17UL)                 /*!< LSDEV (Bit 17)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR7_LSDEV_Msk (0x20000UL)            /*!< LSDEV (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR7_EPTYP_Pos (18UL)                 /*!< EPTYP (Bit 18)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR7_EPTYP_Msk (0xc0000UL)            /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR7_MCNT_Pos (20UL)                  /*!< MCNT (Bit 20)                                         */
#define OTG_FS_HOST_OTG_FS_HCCHAR7_MCNT_Msk (0x300000UL)            /*!< MCNT (Bitfield-Mask: 0x03)                            */
#define OTG_FS_HOST_OTG_FS_HCCHAR7_DAD_Pos (22UL)                   /*!< DAD (Bit 22)                                          */
#define OTG_FS_HOST_OTG_FS_HCCHAR7_DAD_Msk (0x1fc00000UL)           /*!< DAD (Bitfield-Mask: 0x7f)                             */
#define OTG_FS_HOST_OTG_FS_HCCHAR7_ODDFRM_Pos (29UL)                /*!< ODDFRM (Bit 29)                                       */
#define OTG_FS_HOST_OTG_FS_HCCHAR7_ODDFRM_Msk (0x20000000UL)        /*!< ODDFRM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCCHAR7_CHDIS_Pos (30UL)                 /*!< CHDIS (Bit 30)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR7_CHDIS_Msk (0x40000000UL)         /*!< CHDIS (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR7_CHENA_Pos (31UL)                 /*!< CHENA (Bit 31)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR7_CHENA_Msk (0x80000000UL)         /*!< CHENA (Bitfield-Mask: 0x01)                           */
/* =====================================================  OTG_FS_HCINT0  ===================================================== */
#define OTG_FS_HOST_OTG_FS_HCINT0_XFRC_Pos (0UL)                    /*!< XFRC (Bit 0)                                          */
#define OTG_FS_HOST_OTG_FS_HCINT0_XFRC_Msk (0x1UL)                  /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINT0_CHH_Pos (1UL)                     /*!< CHH (Bit 1)                                           */
#define OTG_FS_HOST_OTG_FS_HCINT0_CHH_Msk (0x2UL)                   /*!< CHH (Bitfield-Mask: 0x01)                             */
#define OTG_FS_HOST_OTG_FS_HCINT0_STALL_Pos (3UL)                   /*!< STALL (Bit 3)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT0_STALL_Msk (0x8UL)                 /*!< STALL (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT0_NAK_Pos (4UL)                     /*!< NAK (Bit 4)                                           */
#define OTG_FS_HOST_OTG_FS_HCINT0_NAK_Msk (0x10UL)                  /*!< NAK (Bitfield-Mask: 0x01)                             */
#define OTG_FS_HOST_OTG_FS_HCINT0_ACK_Pos (5UL)                     /*!< ACK (Bit 5)                                           */
#define OTG_FS_HOST_OTG_FS_HCINT0_ACK_Msk (0x20UL)                  /*!< ACK (Bitfield-Mask: 0x01)                             */
#define OTG_FS_HOST_OTG_FS_HCINT0_TXERR_Pos (7UL)                   /*!< TXERR (Bit 7)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT0_TXERR_Msk (0x80UL)                /*!< TXERR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT0_BBERR_Pos (8UL)                   /*!< BBERR (Bit 8)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT0_BBERR_Msk (0x100UL)               /*!< BBERR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT0_FRMOR_Pos (9UL)                   /*!< FRMOR (Bit 9)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT0_FRMOR_Msk (0x200UL)               /*!< FRMOR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT0_DTERR_Pos (10UL)                  /*!< DTERR (Bit 10)                                        */
#define OTG_FS_HOST_OTG_FS_HCINT0_DTERR_Msk (0x400UL)               /*!< DTERR (Bitfield-Mask: 0x01)                           */
/* =====================================================  OTG_FS_HCINT1  ===================================================== */
#define OTG_FS_HOST_OTG_FS_HCINT1_XFRC_Pos (0UL)                    /*!< XFRC (Bit 0)                                          */
#define OTG_FS_HOST_OTG_FS_HCINT1_XFRC_Msk (0x1UL)                  /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINT1_CHH_Pos (1UL)                     /*!< CHH (Bit 1)                                           */
#define OTG_FS_HOST_OTG_FS_HCINT1_CHH_Msk (0x2UL)                   /*!< CHH (Bitfield-Mask: 0x01)                             */
#define OTG_FS_HOST_OTG_FS_HCINT1_STALL_Pos (3UL)                   /*!< STALL (Bit 3)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT1_STALL_Msk (0x8UL)                 /*!< STALL (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT1_NAK_Pos (4UL)                     /*!< NAK (Bit 4)                                           */
#define OTG_FS_HOST_OTG_FS_HCINT1_NAK_Msk (0x10UL)                  /*!< NAK (Bitfield-Mask: 0x01)                             */
#define OTG_FS_HOST_OTG_FS_HCINT1_ACK_Pos (5UL)                     /*!< ACK (Bit 5)                                           */
#define OTG_FS_HOST_OTG_FS_HCINT1_ACK_Msk (0x20UL)                  /*!< ACK (Bitfield-Mask: 0x01)                             */
#define OTG_FS_HOST_OTG_FS_HCINT1_TXERR_Pos (7UL)                   /*!< TXERR (Bit 7)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT1_TXERR_Msk (0x80UL)                /*!< TXERR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT1_BBERR_Pos (8UL)                   /*!< BBERR (Bit 8)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT1_BBERR_Msk (0x100UL)               /*!< BBERR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT1_FRMOR_Pos (9UL)                   /*!< FRMOR (Bit 9)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT1_FRMOR_Msk (0x200UL)               /*!< FRMOR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT1_DTERR_Pos (10UL)                  /*!< DTERR (Bit 10)                                        */
#define OTG_FS_HOST_OTG_FS_HCINT1_DTERR_Msk (0x400UL)               /*!< DTERR (Bitfield-Mask: 0x01)                           */
/* =====================================================  OTG_FS_HCINT2  ===================================================== */
#define OTG_FS_HOST_OTG_FS_HCINT2_XFRC_Pos (0UL)                    /*!< XFRC (Bit 0)                                          */
#define OTG_FS_HOST_OTG_FS_HCINT2_XFRC_Msk (0x1UL)                  /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINT2_CHH_Pos (1UL)                     /*!< CHH (Bit 1)                                           */
#define OTG_FS_HOST_OTG_FS_HCINT2_CHH_Msk (0x2UL)                   /*!< CHH (Bitfield-Mask: 0x01)                             */
#define OTG_FS_HOST_OTG_FS_HCINT2_STALL_Pos (3UL)                   /*!< STALL (Bit 3)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT2_STALL_Msk (0x8UL)                 /*!< STALL (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT2_NAK_Pos (4UL)                     /*!< NAK (Bit 4)                                           */
#define OTG_FS_HOST_OTG_FS_HCINT2_NAK_Msk (0x10UL)                  /*!< NAK (Bitfield-Mask: 0x01)                             */
#define OTG_FS_HOST_OTG_FS_HCINT2_ACK_Pos (5UL)                     /*!< ACK (Bit 5)                                           */
#define OTG_FS_HOST_OTG_FS_HCINT2_ACK_Msk (0x20UL)                  /*!< ACK (Bitfield-Mask: 0x01)                             */
#define OTG_FS_HOST_OTG_FS_HCINT2_TXERR_Pos (7UL)                   /*!< TXERR (Bit 7)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT2_TXERR_Msk (0x80UL)                /*!< TXERR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT2_BBERR_Pos (8UL)                   /*!< BBERR (Bit 8)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT2_BBERR_Msk (0x100UL)               /*!< BBERR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT2_FRMOR_Pos (9UL)                   /*!< FRMOR (Bit 9)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT2_FRMOR_Msk (0x200UL)               /*!< FRMOR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT2_DTERR_Pos (10UL)                  /*!< DTERR (Bit 10)                                        */
#define OTG_FS_HOST_OTG_FS_HCINT2_DTERR_Msk (0x400UL)               /*!< DTERR (Bitfield-Mask: 0x01)                           */
/* =====================================================  OTG_FS_HCINT3  ===================================================== */
#define OTG_FS_HOST_OTG_FS_HCINT3_XFRC_Pos (0UL)                    /*!< XFRC (Bit 0)                                          */
#define OTG_FS_HOST_OTG_FS_HCINT3_XFRC_Msk (0x1UL)                  /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINT3_CHH_Pos (1UL)                     /*!< CHH (Bit 1)                                           */
#define OTG_FS_HOST_OTG_FS_HCINT3_CHH_Msk (0x2UL)                   /*!< CHH (Bitfield-Mask: 0x01)                             */
#define OTG_FS_HOST_OTG_FS_HCINT3_STALL_Pos (3UL)                   /*!< STALL (Bit 3)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT3_STALL_Msk (0x8UL)                 /*!< STALL (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT3_NAK_Pos (4UL)                     /*!< NAK (Bit 4)                                           */
#define OTG_FS_HOST_OTG_FS_HCINT3_NAK_Msk (0x10UL)                  /*!< NAK (Bitfield-Mask: 0x01)                             */
#define OTG_FS_HOST_OTG_FS_HCINT3_ACK_Pos (5UL)                     /*!< ACK (Bit 5)                                           */
#define OTG_FS_HOST_OTG_FS_HCINT3_ACK_Msk (0x20UL)                  /*!< ACK (Bitfield-Mask: 0x01)                             */
#define OTG_FS_HOST_OTG_FS_HCINT3_TXERR_Pos (7UL)                   /*!< TXERR (Bit 7)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT3_TXERR_Msk (0x80UL)                /*!< TXERR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT3_BBERR_Pos (8UL)                   /*!< BBERR (Bit 8)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT3_BBERR_Msk (0x100UL)               /*!< BBERR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT3_FRMOR_Pos (9UL)                   /*!< FRMOR (Bit 9)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT3_FRMOR_Msk (0x200UL)               /*!< FRMOR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT3_DTERR_Pos (10UL)                  /*!< DTERR (Bit 10)                                        */
#define OTG_FS_HOST_OTG_FS_HCINT3_DTERR_Msk (0x400UL)               /*!< DTERR (Bitfield-Mask: 0x01)                           */
/* =====================================================  OTG_FS_HCINT4  ===================================================== */
#define OTG_FS_HOST_OTG_FS_HCINT4_XFRC_Pos (0UL)                    /*!< XFRC (Bit 0)                                          */
#define OTG_FS_HOST_OTG_FS_HCINT4_XFRC_Msk (0x1UL)                  /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINT4_CHH_Pos (1UL)                     /*!< CHH (Bit 1)                                           */
#define OTG_FS_HOST_OTG_FS_HCINT4_CHH_Msk (0x2UL)                   /*!< CHH (Bitfield-Mask: 0x01)                             */
#define OTG_FS_HOST_OTG_FS_HCINT4_STALL_Pos (3UL)                   /*!< STALL (Bit 3)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT4_STALL_Msk (0x8UL)                 /*!< STALL (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT4_NAK_Pos (4UL)                     /*!< NAK (Bit 4)                                           */
#define OTG_FS_HOST_OTG_FS_HCINT4_NAK_Msk (0x10UL)                  /*!< NAK (Bitfield-Mask: 0x01)                             */
#define OTG_FS_HOST_OTG_FS_HCINT4_ACK_Pos (5UL)                     /*!< ACK (Bit 5)                                           */
#define OTG_FS_HOST_OTG_FS_HCINT4_ACK_Msk (0x20UL)                  /*!< ACK (Bitfield-Mask: 0x01)                             */
#define OTG_FS_HOST_OTG_FS_HCINT4_TXERR_Pos (7UL)                   /*!< TXERR (Bit 7)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT4_TXERR_Msk (0x80UL)                /*!< TXERR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT4_BBERR_Pos (8UL)                   /*!< BBERR (Bit 8)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT4_BBERR_Msk (0x100UL)               /*!< BBERR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT4_FRMOR_Pos (9UL)                   /*!< FRMOR (Bit 9)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT4_FRMOR_Msk (0x200UL)               /*!< FRMOR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT4_DTERR_Pos (10UL)                  /*!< DTERR (Bit 10)                                        */
#define OTG_FS_HOST_OTG_FS_HCINT4_DTERR_Msk (0x400UL)               /*!< DTERR (Bitfield-Mask: 0x01)                           */
/* =====================================================  OTG_FS_HCINT5  ===================================================== */
#define OTG_FS_HOST_OTG_FS_HCINT5_XFRC_Pos (0UL)                    /*!< XFRC (Bit 0)                                          */
#define OTG_FS_HOST_OTG_FS_HCINT5_XFRC_Msk (0x1UL)                  /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINT5_CHH_Pos (1UL)                     /*!< CHH (Bit 1)                                           */
#define OTG_FS_HOST_OTG_FS_HCINT5_CHH_Msk (0x2UL)                   /*!< CHH (Bitfield-Mask: 0x01)                             */
#define OTG_FS_HOST_OTG_FS_HCINT5_STALL_Pos (3UL)                   /*!< STALL (Bit 3)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT5_STALL_Msk (0x8UL)                 /*!< STALL (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT5_NAK_Pos (4UL)                     /*!< NAK (Bit 4)                                           */
#define OTG_FS_HOST_OTG_FS_HCINT5_NAK_Msk (0x10UL)                  /*!< NAK (Bitfield-Mask: 0x01)                             */
#define OTG_FS_HOST_OTG_FS_HCINT5_ACK_Pos (5UL)                     /*!< ACK (Bit 5)                                           */
#define OTG_FS_HOST_OTG_FS_HCINT5_ACK_Msk (0x20UL)                  /*!< ACK (Bitfield-Mask: 0x01)                             */
#define OTG_FS_HOST_OTG_FS_HCINT5_TXERR_Pos (7UL)                   /*!< TXERR (Bit 7)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT5_TXERR_Msk (0x80UL)                /*!< TXERR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT5_BBERR_Pos (8UL)                   /*!< BBERR (Bit 8)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT5_BBERR_Msk (0x100UL)               /*!< BBERR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT5_FRMOR_Pos (9UL)                   /*!< FRMOR (Bit 9)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT5_FRMOR_Msk (0x200UL)               /*!< FRMOR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT5_DTERR_Pos (10UL)                  /*!< DTERR (Bit 10)                                        */
#define OTG_FS_HOST_OTG_FS_HCINT5_DTERR_Msk (0x400UL)               /*!< DTERR (Bitfield-Mask: 0x01)                           */
/* =====================================================  OTG_FS_HCINT6  ===================================================== */
#define OTG_FS_HOST_OTG_FS_HCINT6_XFRC_Pos (0UL)                    /*!< XFRC (Bit 0)                                          */
#define OTG_FS_HOST_OTG_FS_HCINT6_XFRC_Msk (0x1UL)                  /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINT6_CHH_Pos (1UL)                     /*!< CHH (Bit 1)                                           */
#define OTG_FS_HOST_OTG_FS_HCINT6_CHH_Msk (0x2UL)                   /*!< CHH (Bitfield-Mask: 0x01)                             */
#define OTG_FS_HOST_OTG_FS_HCINT6_STALL_Pos (3UL)                   /*!< STALL (Bit 3)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT6_STALL_Msk (0x8UL)                 /*!< STALL (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT6_NAK_Pos (4UL)                     /*!< NAK (Bit 4)                                           */
#define OTG_FS_HOST_OTG_FS_HCINT6_NAK_Msk (0x10UL)                  /*!< NAK (Bitfield-Mask: 0x01)                             */
#define OTG_FS_HOST_OTG_FS_HCINT6_ACK_Pos (5UL)                     /*!< ACK (Bit 5)                                           */
#define OTG_FS_HOST_OTG_FS_HCINT6_ACK_Msk (0x20UL)                  /*!< ACK (Bitfield-Mask: 0x01)                             */
#define OTG_FS_HOST_OTG_FS_HCINT6_TXERR_Pos (7UL)                   /*!< TXERR (Bit 7)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT6_TXERR_Msk (0x80UL)                /*!< TXERR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT6_BBERR_Pos (8UL)                   /*!< BBERR (Bit 8)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT6_BBERR_Msk (0x100UL)               /*!< BBERR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT6_FRMOR_Pos (9UL)                   /*!< FRMOR (Bit 9)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT6_FRMOR_Msk (0x200UL)               /*!< FRMOR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT6_DTERR_Pos (10UL)                  /*!< DTERR (Bit 10)                                        */
#define OTG_FS_HOST_OTG_FS_HCINT6_DTERR_Msk (0x400UL)               /*!< DTERR (Bitfield-Mask: 0x01)                           */
/* =====================================================  OTG_FS_HCINT7  ===================================================== */
#define OTG_FS_HOST_OTG_FS_HCINT7_XFRC_Pos (0UL)                    /*!< XFRC (Bit 0)                                          */
#define OTG_FS_HOST_OTG_FS_HCINT7_XFRC_Msk (0x1UL)                  /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINT7_CHH_Pos (1UL)                     /*!< CHH (Bit 1)                                           */
#define OTG_FS_HOST_OTG_FS_HCINT7_CHH_Msk (0x2UL)                   /*!< CHH (Bitfield-Mask: 0x01)                             */
#define OTG_FS_HOST_OTG_FS_HCINT7_STALL_Pos (3UL)                   /*!< STALL (Bit 3)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT7_STALL_Msk (0x8UL)                 /*!< STALL (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT7_NAK_Pos (4UL)                     /*!< NAK (Bit 4)                                           */
#define OTG_FS_HOST_OTG_FS_HCINT7_NAK_Msk (0x10UL)                  /*!< NAK (Bitfield-Mask: 0x01)                             */
#define OTG_FS_HOST_OTG_FS_HCINT7_ACK_Pos (5UL)                     /*!< ACK (Bit 5)                                           */
#define OTG_FS_HOST_OTG_FS_HCINT7_ACK_Msk (0x20UL)                  /*!< ACK (Bitfield-Mask: 0x01)                             */
#define OTG_FS_HOST_OTG_FS_HCINT7_TXERR_Pos (7UL)                   /*!< TXERR (Bit 7)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT7_TXERR_Msk (0x80UL)                /*!< TXERR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT7_BBERR_Pos (8UL)                   /*!< BBERR (Bit 8)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT7_BBERR_Msk (0x100UL)               /*!< BBERR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT7_FRMOR_Pos (9UL)                   /*!< FRMOR (Bit 9)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT7_FRMOR_Msk (0x200UL)               /*!< FRMOR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT7_DTERR_Pos (10UL)                  /*!< DTERR (Bit 10)                                        */
#define OTG_FS_HOST_OTG_FS_HCINT7_DTERR_Msk (0x400UL)               /*!< DTERR (Bitfield-Mask: 0x01)                           */
/* ===================================================  OTG_FS_HCINTMSK0  ==================================================== */
#define OTG_FS_HOST_OTG_FS_HCINTMSK0_XFRCM_Pos (0UL)                /*!< XFRCM (Bit 0)                                         */
#define OTG_FS_HOST_OTG_FS_HCINTMSK0_XFRCM_Msk (0x1UL)              /*!< XFRCM (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINTMSK0_CHHM_Pos (1UL)                 /*!< CHHM (Bit 1)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK0_CHHM_Msk (0x2UL)               /*!< CHHM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK0_STALLM_Pos (3UL)               /*!< STALLM (Bit 3)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK0_STALLM_Msk (0x8UL)             /*!< STALLM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK0_NAKM_Pos (4UL)                 /*!< NAKM (Bit 4)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK0_NAKM_Msk (0x10UL)              /*!< NAKM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK0_ACKM_Pos (5UL)                 /*!< ACKM (Bit 5)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK0_ACKM_Msk (0x20UL)              /*!< ACKM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK0_NYET_Pos (6UL)                 /*!< NYET (Bit 6)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK0_NYET_Msk (0x40UL)              /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK0_TXERRM_Pos (7UL)               /*!< TXERRM (Bit 7)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK0_TXERRM_Msk (0x80UL)            /*!< TXERRM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK0_BBERRM_Pos (8UL)               /*!< BBERRM (Bit 8)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK0_BBERRM_Msk (0x100UL)           /*!< BBERRM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK0_FRMORM_Pos (9UL)               /*!< FRMORM (Bit 9)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK0_FRMORM_Msk (0x200UL)           /*!< FRMORM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK0_DTERRM_Pos (10UL)              /*!< DTERRM (Bit 10)                                       */
#define OTG_FS_HOST_OTG_FS_HCINTMSK0_DTERRM_Msk (0x400UL)           /*!< DTERRM (Bitfield-Mask: 0x01)                          */
/* ===================================================  OTG_FS_HCINTMSK1  ==================================================== */
#define OTG_FS_HOST_OTG_FS_HCINTMSK1_XFRCM_Pos (0UL)                /*!< XFRCM (Bit 0)                                         */
#define OTG_FS_HOST_OTG_FS_HCINTMSK1_XFRCM_Msk (0x1UL)              /*!< XFRCM (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINTMSK1_CHHM_Pos (1UL)                 /*!< CHHM (Bit 1)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK1_CHHM_Msk (0x2UL)               /*!< CHHM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK1_STALLM_Pos (3UL)               /*!< STALLM (Bit 3)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK1_STALLM_Msk (0x8UL)             /*!< STALLM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK1_NAKM_Pos (4UL)                 /*!< NAKM (Bit 4)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK1_NAKM_Msk (0x10UL)              /*!< NAKM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK1_ACKM_Pos (5UL)                 /*!< ACKM (Bit 5)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK1_ACKM_Msk (0x20UL)              /*!< ACKM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK1_NYET_Pos (6UL)                 /*!< NYET (Bit 6)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK1_NYET_Msk (0x40UL)              /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK1_TXERRM_Pos (7UL)               /*!< TXERRM (Bit 7)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK1_TXERRM_Msk (0x80UL)            /*!< TXERRM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK1_BBERRM_Pos (8UL)               /*!< BBERRM (Bit 8)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK1_BBERRM_Msk (0x100UL)           /*!< BBERRM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK1_FRMORM_Pos (9UL)               /*!< FRMORM (Bit 9)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK1_FRMORM_Msk (0x200UL)           /*!< FRMORM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK1_DTERRM_Pos (10UL)              /*!< DTERRM (Bit 10)                                       */
#define OTG_FS_HOST_OTG_FS_HCINTMSK1_DTERRM_Msk (0x400UL)           /*!< DTERRM (Bitfield-Mask: 0x01)                          */
/* ===================================================  OTG_FS_HCINTMSK2  ==================================================== */
#define OTG_FS_HOST_OTG_FS_HCINTMSK2_XFRCM_Pos (0UL)                /*!< XFRCM (Bit 0)                                         */
#define OTG_FS_HOST_OTG_FS_HCINTMSK2_XFRCM_Msk (0x1UL)              /*!< XFRCM (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINTMSK2_CHHM_Pos (1UL)                 /*!< CHHM (Bit 1)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK2_CHHM_Msk (0x2UL)               /*!< CHHM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK2_STALLM_Pos (3UL)               /*!< STALLM (Bit 3)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK2_STALLM_Msk (0x8UL)             /*!< STALLM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK2_NAKM_Pos (4UL)                 /*!< NAKM (Bit 4)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK2_NAKM_Msk (0x10UL)              /*!< NAKM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK2_ACKM_Pos (5UL)                 /*!< ACKM (Bit 5)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK2_ACKM_Msk (0x20UL)              /*!< ACKM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK2_NYET_Pos (6UL)                 /*!< NYET (Bit 6)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK2_NYET_Msk (0x40UL)              /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK2_TXERRM_Pos (7UL)               /*!< TXERRM (Bit 7)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK2_TXERRM_Msk (0x80UL)            /*!< TXERRM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK2_BBERRM_Pos (8UL)               /*!< BBERRM (Bit 8)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK2_BBERRM_Msk (0x100UL)           /*!< BBERRM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK2_FRMORM_Pos (9UL)               /*!< FRMORM (Bit 9)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK2_FRMORM_Msk (0x200UL)           /*!< FRMORM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK2_DTERRM_Pos (10UL)              /*!< DTERRM (Bit 10)                                       */
#define OTG_FS_HOST_OTG_FS_HCINTMSK2_DTERRM_Msk (0x400UL)           /*!< DTERRM (Bitfield-Mask: 0x01)                          */
/* ===================================================  OTG_FS_HCINTMSK3  ==================================================== */
#define OTG_FS_HOST_OTG_FS_HCINTMSK3_XFRCM_Pos (0UL)                /*!< XFRCM (Bit 0)                                         */
#define OTG_FS_HOST_OTG_FS_HCINTMSK3_XFRCM_Msk (0x1UL)              /*!< XFRCM (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINTMSK3_CHHM_Pos (1UL)                 /*!< CHHM (Bit 1)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK3_CHHM_Msk (0x2UL)               /*!< CHHM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK3_STALLM_Pos (3UL)               /*!< STALLM (Bit 3)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK3_STALLM_Msk (0x8UL)             /*!< STALLM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK3_NAKM_Pos (4UL)                 /*!< NAKM (Bit 4)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK3_NAKM_Msk (0x10UL)              /*!< NAKM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK3_ACKM_Pos (5UL)                 /*!< ACKM (Bit 5)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK3_ACKM_Msk (0x20UL)              /*!< ACKM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK3_NYET_Pos (6UL)                 /*!< NYET (Bit 6)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK3_NYET_Msk (0x40UL)              /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK3_TXERRM_Pos (7UL)               /*!< TXERRM (Bit 7)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK3_TXERRM_Msk (0x80UL)            /*!< TXERRM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK3_BBERRM_Pos (8UL)               /*!< BBERRM (Bit 8)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK3_BBERRM_Msk (0x100UL)           /*!< BBERRM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK3_FRMORM_Pos (9UL)               /*!< FRMORM (Bit 9)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK3_FRMORM_Msk (0x200UL)           /*!< FRMORM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK3_DTERRM_Pos (10UL)              /*!< DTERRM (Bit 10)                                       */
#define OTG_FS_HOST_OTG_FS_HCINTMSK3_DTERRM_Msk (0x400UL)           /*!< DTERRM (Bitfield-Mask: 0x01)                          */
/* ===================================================  OTG_FS_HCINTMSK4  ==================================================== */
#define OTG_FS_HOST_OTG_FS_HCINTMSK4_XFRCM_Pos (0UL)                /*!< XFRCM (Bit 0)                                         */
#define OTG_FS_HOST_OTG_FS_HCINTMSK4_XFRCM_Msk (0x1UL)              /*!< XFRCM (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINTMSK4_CHHM_Pos (1UL)                 /*!< CHHM (Bit 1)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK4_CHHM_Msk (0x2UL)               /*!< CHHM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK4_STALLM_Pos (3UL)               /*!< STALLM (Bit 3)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK4_STALLM_Msk (0x8UL)             /*!< STALLM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK4_NAKM_Pos (4UL)                 /*!< NAKM (Bit 4)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK4_NAKM_Msk (0x10UL)              /*!< NAKM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK4_ACKM_Pos (5UL)                 /*!< ACKM (Bit 5)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK4_ACKM_Msk (0x20UL)              /*!< ACKM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK4_NYET_Pos (6UL)                 /*!< NYET (Bit 6)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK4_NYET_Msk (0x40UL)              /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK4_TXERRM_Pos (7UL)               /*!< TXERRM (Bit 7)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK4_TXERRM_Msk (0x80UL)            /*!< TXERRM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK4_BBERRM_Pos (8UL)               /*!< BBERRM (Bit 8)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK4_BBERRM_Msk (0x100UL)           /*!< BBERRM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK4_FRMORM_Pos (9UL)               /*!< FRMORM (Bit 9)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK4_FRMORM_Msk (0x200UL)           /*!< FRMORM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK4_DTERRM_Pos (10UL)              /*!< DTERRM (Bit 10)                                       */
#define OTG_FS_HOST_OTG_FS_HCINTMSK4_DTERRM_Msk (0x400UL)           /*!< DTERRM (Bitfield-Mask: 0x01)                          */
/* ===================================================  OTG_FS_HCINTMSK5  ==================================================== */
#define OTG_FS_HOST_OTG_FS_HCINTMSK5_XFRCM_Pos (0UL)                /*!< XFRCM (Bit 0)                                         */
#define OTG_FS_HOST_OTG_FS_HCINTMSK5_XFRCM_Msk (0x1UL)              /*!< XFRCM (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINTMSK5_CHHM_Pos (1UL)                 /*!< CHHM (Bit 1)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK5_CHHM_Msk (0x2UL)               /*!< CHHM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK5_STALLM_Pos (3UL)               /*!< STALLM (Bit 3)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK5_STALLM_Msk (0x8UL)             /*!< STALLM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK5_NAKM_Pos (4UL)                 /*!< NAKM (Bit 4)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK5_NAKM_Msk (0x10UL)              /*!< NAKM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK5_ACKM_Pos (5UL)                 /*!< ACKM (Bit 5)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK5_ACKM_Msk (0x20UL)              /*!< ACKM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK5_NYET_Pos (6UL)                 /*!< NYET (Bit 6)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK5_NYET_Msk (0x40UL)              /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK5_TXERRM_Pos (7UL)               /*!< TXERRM (Bit 7)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK5_TXERRM_Msk (0x80UL)            /*!< TXERRM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK5_BBERRM_Pos (8UL)               /*!< BBERRM (Bit 8)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK5_BBERRM_Msk (0x100UL)           /*!< BBERRM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK5_FRMORM_Pos (9UL)               /*!< FRMORM (Bit 9)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK5_FRMORM_Msk (0x200UL)           /*!< FRMORM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK5_DTERRM_Pos (10UL)              /*!< DTERRM (Bit 10)                                       */
#define OTG_FS_HOST_OTG_FS_HCINTMSK5_DTERRM_Msk (0x400UL)           /*!< DTERRM (Bitfield-Mask: 0x01)                          */
/* ===================================================  OTG_FS_HCINTMSK6  ==================================================== */
#define OTG_FS_HOST_OTG_FS_HCINTMSK6_XFRCM_Pos (0UL)                /*!< XFRCM (Bit 0)                                         */
#define OTG_FS_HOST_OTG_FS_HCINTMSK6_XFRCM_Msk (0x1UL)              /*!< XFRCM (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINTMSK6_CHHM_Pos (1UL)                 /*!< CHHM (Bit 1)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK6_CHHM_Msk (0x2UL)               /*!< CHHM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK6_STALLM_Pos (3UL)               /*!< STALLM (Bit 3)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK6_STALLM_Msk (0x8UL)             /*!< STALLM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK6_NAKM_Pos (4UL)                 /*!< NAKM (Bit 4)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK6_NAKM_Msk (0x10UL)              /*!< NAKM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK6_ACKM_Pos (5UL)                 /*!< ACKM (Bit 5)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK6_ACKM_Msk (0x20UL)              /*!< ACKM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK6_NYET_Pos (6UL)                 /*!< NYET (Bit 6)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK6_NYET_Msk (0x40UL)              /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK6_TXERRM_Pos (7UL)               /*!< TXERRM (Bit 7)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK6_TXERRM_Msk (0x80UL)            /*!< TXERRM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK6_BBERRM_Pos (8UL)               /*!< BBERRM (Bit 8)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK6_BBERRM_Msk (0x100UL)           /*!< BBERRM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK6_FRMORM_Pos (9UL)               /*!< FRMORM (Bit 9)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK6_FRMORM_Msk (0x200UL)           /*!< FRMORM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK6_DTERRM_Pos (10UL)              /*!< DTERRM (Bit 10)                                       */
#define OTG_FS_HOST_OTG_FS_HCINTMSK6_DTERRM_Msk (0x400UL)           /*!< DTERRM (Bitfield-Mask: 0x01)                          */
/* ===================================================  OTG_FS_HCINTMSK7  ==================================================== */
#define OTG_FS_HOST_OTG_FS_HCINTMSK7_XFRCM_Pos (0UL)                /*!< XFRCM (Bit 0)                                         */
#define OTG_FS_HOST_OTG_FS_HCINTMSK7_XFRCM_Msk (0x1UL)              /*!< XFRCM (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINTMSK7_CHHM_Pos (1UL)                 /*!< CHHM (Bit 1)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK7_CHHM_Msk (0x2UL)               /*!< CHHM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK7_STALLM_Pos (3UL)               /*!< STALLM (Bit 3)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK7_STALLM_Msk (0x8UL)             /*!< STALLM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK7_NAKM_Pos (4UL)                 /*!< NAKM (Bit 4)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK7_NAKM_Msk (0x10UL)              /*!< NAKM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK7_ACKM_Pos (5UL)                 /*!< ACKM (Bit 5)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK7_ACKM_Msk (0x20UL)              /*!< ACKM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK7_NYET_Pos (6UL)                 /*!< NYET (Bit 6)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK7_NYET_Msk (0x40UL)              /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK7_TXERRM_Pos (7UL)               /*!< TXERRM (Bit 7)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK7_TXERRM_Msk (0x80UL)            /*!< TXERRM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK7_BBERRM_Pos (8UL)               /*!< BBERRM (Bit 8)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK7_BBERRM_Msk (0x100UL)           /*!< BBERRM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK7_FRMORM_Pos (9UL)               /*!< FRMORM (Bit 9)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK7_FRMORM_Msk (0x200UL)           /*!< FRMORM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK7_DTERRM_Pos (10UL)              /*!< DTERRM (Bit 10)                                       */
#define OTG_FS_HOST_OTG_FS_HCINTMSK7_DTERRM_Msk (0x400UL)           /*!< DTERRM (Bitfield-Mask: 0x01)                          */
/* ====================================================  OTG_FS_HCTSIZ0  ===================================================== */
#define OTG_FS_HOST_OTG_FS_HCTSIZ0_XFRSIZ_Pos (0UL)                 /*!< XFRSIZ (Bit 0)                                        */
#define OTG_FS_HOST_OTG_FS_HCTSIZ0_XFRSIZ_Msk (0x7ffffUL)           /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_FS_HOST_OTG_FS_HCTSIZ0_PKTCNT_Pos (19UL)                /*!< PKTCNT (Bit 19)                                       */
#define OTG_FS_HOST_OTG_FS_HCTSIZ0_PKTCNT_Msk (0x1ff80000UL)        /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_FS_HOST_OTG_FS_HCTSIZ0_DPID_Pos (29UL)                  /*!< DPID (Bit 29)                                         */
#define OTG_FS_HOST_OTG_FS_HCTSIZ0_DPID_Msk (0x60000000UL)          /*!< DPID (Bitfield-Mask: 0x03)                            */
/* ====================================================  OTG_FS_HCTSIZ1  ===================================================== */
#define OTG_FS_HOST_OTG_FS_HCTSIZ1_XFRSIZ_Pos (0UL)                 /*!< XFRSIZ (Bit 0)                                        */
#define OTG_FS_HOST_OTG_FS_HCTSIZ1_XFRSIZ_Msk (0x7ffffUL)           /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_FS_HOST_OTG_FS_HCTSIZ1_PKTCNT_Pos (19UL)                /*!< PKTCNT (Bit 19)                                       */
#define OTG_FS_HOST_OTG_FS_HCTSIZ1_PKTCNT_Msk (0x1ff80000UL)        /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_FS_HOST_OTG_FS_HCTSIZ1_DPID_Pos (29UL)                  /*!< DPID (Bit 29)                                         */
#define OTG_FS_HOST_OTG_FS_HCTSIZ1_DPID_Msk (0x60000000UL)          /*!< DPID (Bitfield-Mask: 0x03)                            */
/* ====================================================  OTG_FS_HCTSIZ2  ===================================================== */
#define OTG_FS_HOST_OTG_FS_HCTSIZ2_XFRSIZ_Pos (0UL)                 /*!< XFRSIZ (Bit 0)                                        */
#define OTG_FS_HOST_OTG_FS_HCTSIZ2_XFRSIZ_Msk (0x7ffffUL)           /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_FS_HOST_OTG_FS_HCTSIZ2_PKTCNT_Pos (19UL)                /*!< PKTCNT (Bit 19)                                       */
#define OTG_FS_HOST_OTG_FS_HCTSIZ2_PKTCNT_Msk (0x1ff80000UL)        /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_FS_HOST_OTG_FS_HCTSIZ2_DPID_Pos (29UL)                  /*!< DPID (Bit 29)                                         */
#define OTG_FS_HOST_OTG_FS_HCTSIZ2_DPID_Msk (0x60000000UL)          /*!< DPID (Bitfield-Mask: 0x03)                            */
/* ====================================================  OTG_FS_HCTSIZ3  ===================================================== */
#define OTG_FS_HOST_OTG_FS_HCTSIZ3_XFRSIZ_Pos (0UL)                 /*!< XFRSIZ (Bit 0)                                        */
#define OTG_FS_HOST_OTG_FS_HCTSIZ3_XFRSIZ_Msk (0x7ffffUL)           /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_FS_HOST_OTG_FS_HCTSIZ3_PKTCNT_Pos (19UL)                /*!< PKTCNT (Bit 19)                                       */
#define OTG_FS_HOST_OTG_FS_HCTSIZ3_PKTCNT_Msk (0x1ff80000UL)        /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_FS_HOST_OTG_FS_HCTSIZ3_DPID_Pos (29UL)                  /*!< DPID (Bit 29)                                         */
#define OTG_FS_HOST_OTG_FS_HCTSIZ3_DPID_Msk (0x60000000UL)          /*!< DPID (Bitfield-Mask: 0x03)                            */
/* ====================================================  OTG_FS_HCTSIZ4  ===================================================== */
#define OTG_FS_HOST_OTG_FS_HCTSIZ4_XFRSIZ_Pos (0UL)                 /*!< XFRSIZ (Bit 0)                                        */
#define OTG_FS_HOST_OTG_FS_HCTSIZ4_XFRSIZ_Msk (0x7ffffUL)           /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_FS_HOST_OTG_FS_HCTSIZ4_PKTCNT_Pos (19UL)                /*!< PKTCNT (Bit 19)                                       */
#define OTG_FS_HOST_OTG_FS_HCTSIZ4_PKTCNT_Msk (0x1ff80000UL)        /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_FS_HOST_OTG_FS_HCTSIZ4_DPID_Pos (29UL)                  /*!< DPID (Bit 29)                                         */
#define OTG_FS_HOST_OTG_FS_HCTSIZ4_DPID_Msk (0x60000000UL)          /*!< DPID (Bitfield-Mask: 0x03)                            */
/* ====================================================  OTG_FS_HCTSIZ5  ===================================================== */
#define OTG_FS_HOST_OTG_FS_HCTSIZ5_XFRSIZ_Pos (0UL)                 /*!< XFRSIZ (Bit 0)                                        */
#define OTG_FS_HOST_OTG_FS_HCTSIZ5_XFRSIZ_Msk (0x7ffffUL)           /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_FS_HOST_OTG_FS_HCTSIZ5_PKTCNT_Pos (19UL)                /*!< PKTCNT (Bit 19)                                       */
#define OTG_FS_HOST_OTG_FS_HCTSIZ5_PKTCNT_Msk (0x1ff80000UL)        /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_FS_HOST_OTG_FS_HCTSIZ5_DPID_Pos (29UL)                  /*!< DPID (Bit 29)                                         */
#define OTG_FS_HOST_OTG_FS_HCTSIZ5_DPID_Msk (0x60000000UL)          /*!< DPID (Bitfield-Mask: 0x03)                            */
/* ====================================================  OTG_FS_HCTSIZ6  ===================================================== */
#define OTG_FS_HOST_OTG_FS_HCTSIZ6_XFRSIZ_Pos (0UL)                 /*!< XFRSIZ (Bit 0)                                        */
#define OTG_FS_HOST_OTG_FS_HCTSIZ6_XFRSIZ_Msk (0x7ffffUL)           /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_FS_HOST_OTG_FS_HCTSIZ6_PKTCNT_Pos (19UL)                /*!< PKTCNT (Bit 19)                                       */
#define OTG_FS_HOST_OTG_FS_HCTSIZ6_PKTCNT_Msk (0x1ff80000UL)        /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_FS_HOST_OTG_FS_HCTSIZ6_DPID_Pos (29UL)                  /*!< DPID (Bit 29)                                         */
#define OTG_FS_HOST_OTG_FS_HCTSIZ6_DPID_Msk (0x60000000UL)          /*!< DPID (Bitfield-Mask: 0x03)                            */
/* ====================================================  OTG_FS_HCTSIZ7  ===================================================== */
#define OTG_FS_HOST_OTG_FS_HCTSIZ7_XFRSIZ_Pos (0UL)                 /*!< XFRSIZ (Bit 0)                                        */
#define OTG_FS_HOST_OTG_FS_HCTSIZ7_XFRSIZ_Msk (0x7ffffUL)           /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_FS_HOST_OTG_FS_HCTSIZ7_PKTCNT_Pos (19UL)                /*!< PKTCNT (Bit 19)                                       */
#define OTG_FS_HOST_OTG_FS_HCTSIZ7_PKTCNT_Msk (0x1ff80000UL)        /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_FS_HOST_OTG_FS_HCTSIZ7_DPID_Pos (29UL)                  /*!< DPID (Bit 29)                                         */
#define OTG_FS_HOST_OTG_FS_HCTSIZ7_DPID_Msk (0x60000000UL)          /*!< DPID (Bitfield-Mask: 0x03)                            */
/* ====================================================  OTG_FS_HCCHAR8  ===================================================== */
#define OTG_FS_HOST_OTG_FS_HCCHAR8_MPSIZ_Pos (0UL)                  /*!< MPSIZ (Bit 0)                                         */
#define OTG_FS_HOST_OTG_FS_HCCHAR8_MPSIZ_Msk (0x7ffUL)              /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_FS_HOST_OTG_FS_HCCHAR8_EPNUM_Pos (11UL)                 /*!< EPNUM (Bit 11)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR8_EPNUM_Msk (0x7800UL)             /*!< EPNUM (Bitfield-Mask: 0x0f)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR8_EPDIR_Pos (15UL)                 /*!< EPDIR (Bit 15)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR8_EPDIR_Msk (0x8000UL)             /*!< EPDIR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR8_LSDEV_Pos (17UL)                 /*!< LSDEV (Bit 17)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR8_LSDEV_Msk (0x20000UL)            /*!< LSDEV (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR8_EPTYP_Pos (18UL)                 /*!< EPTYP (Bit 18)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR8_EPTYP_Msk (0xc0000UL)            /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR8_MCNT_Pos (20UL)                  /*!< MCNT (Bit 20)                                         */
#define OTG_FS_HOST_OTG_FS_HCCHAR8_MCNT_Msk (0x300000UL)            /*!< MCNT (Bitfield-Mask: 0x03)                            */
#define OTG_FS_HOST_OTG_FS_HCCHAR8_DAD_Pos (22UL)                   /*!< DAD (Bit 22)                                          */
#define OTG_FS_HOST_OTG_FS_HCCHAR8_DAD_Msk (0x1fc00000UL)           /*!< DAD (Bitfield-Mask: 0x7f)                             */
#define OTG_FS_HOST_OTG_FS_HCCHAR8_ODDFRM_Pos (29UL)                /*!< ODDFRM (Bit 29)                                       */
#define OTG_FS_HOST_OTG_FS_HCCHAR8_ODDFRM_Msk (0x20000000UL)        /*!< ODDFRM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCCHAR8_CHDIS_Pos (30UL)                 /*!< CHDIS (Bit 30)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR8_CHDIS_Msk (0x40000000UL)         /*!< CHDIS (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR8_CHENA_Pos (31UL)                 /*!< CHENA (Bit 31)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR8_CHENA_Msk (0x80000000UL)         /*!< CHENA (Bitfield-Mask: 0x01)                           */
/* =====================================================  OTG_FS_HCINT8  ===================================================== */
#define OTG_FS_HOST_OTG_FS_HCINT8_XFRC_Pos (0UL)                    /*!< XFRC (Bit 0)                                          */
#define OTG_FS_HOST_OTG_FS_HCINT8_XFRC_Msk (0x1UL)                  /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINT8_CHH_Pos (1UL)                     /*!< CHH (Bit 1)                                           */
#define OTG_FS_HOST_OTG_FS_HCINT8_CHH_Msk (0x2UL)                   /*!< CHH (Bitfield-Mask: 0x01)                             */
#define OTG_FS_HOST_OTG_FS_HCINT8_STALL_Pos (3UL)                   /*!< STALL (Bit 3)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT8_STALL_Msk (0x8UL)                 /*!< STALL (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT8_NAK_Pos (4UL)                     /*!< NAK (Bit 4)                                           */
#define OTG_FS_HOST_OTG_FS_HCINT8_NAK_Msk (0x10UL)                  /*!< NAK (Bitfield-Mask: 0x01)                             */
#define OTG_FS_HOST_OTG_FS_HCINT8_ACK_Pos (5UL)                     /*!< ACK (Bit 5)                                           */
#define OTG_FS_HOST_OTG_FS_HCINT8_ACK_Msk (0x20UL)                  /*!< ACK (Bitfield-Mask: 0x01)                             */
#define OTG_FS_HOST_OTG_FS_HCINT8_TXERR_Pos (7UL)                   /*!< TXERR (Bit 7)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT8_TXERR_Msk (0x80UL)                /*!< TXERR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT8_BBERR_Pos (8UL)                   /*!< BBERR (Bit 8)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT8_BBERR_Msk (0x100UL)               /*!< BBERR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT8_FRMOR_Pos (9UL)                   /*!< FRMOR (Bit 9)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT8_FRMOR_Msk (0x200UL)               /*!< FRMOR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT8_DTERR_Pos (10UL)                  /*!< DTERR (Bit 10)                                        */
#define OTG_FS_HOST_OTG_FS_HCINT8_DTERR_Msk (0x400UL)               /*!< DTERR (Bitfield-Mask: 0x01)                           */
/* ===================================================  OTG_FS_HCINTMSK8  ==================================================== */
#define OTG_FS_HOST_OTG_FS_HCINTMSK8_XFRCM_Pos (0UL)                /*!< XFRCM (Bit 0)                                         */
#define OTG_FS_HOST_OTG_FS_HCINTMSK8_XFRCM_Msk (0x1UL)              /*!< XFRCM (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINTMSK8_CHHM_Pos (1UL)                 /*!< CHHM (Bit 1)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK8_CHHM_Msk (0x2UL)               /*!< CHHM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK8_STALLM_Pos (3UL)               /*!< STALLM (Bit 3)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK8_STALLM_Msk (0x8UL)             /*!< STALLM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK8_NAKM_Pos (4UL)                 /*!< NAKM (Bit 4)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK8_NAKM_Msk (0x10UL)              /*!< NAKM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK8_ACKM_Pos (5UL)                 /*!< ACKM (Bit 5)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK8_ACKM_Msk (0x20UL)              /*!< ACKM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK8_NYET_Pos (6UL)                 /*!< NYET (Bit 6)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK8_NYET_Msk (0x40UL)              /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK8_TXERRM_Pos (7UL)               /*!< TXERRM (Bit 7)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK8_TXERRM_Msk (0x80UL)            /*!< TXERRM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK8_BBERRM_Pos (8UL)               /*!< BBERRM (Bit 8)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK8_BBERRM_Msk (0x100UL)           /*!< BBERRM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK8_FRMORM_Pos (9UL)               /*!< FRMORM (Bit 9)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK8_FRMORM_Msk (0x200UL)           /*!< FRMORM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK8_DTERRM_Pos (10UL)              /*!< DTERRM (Bit 10)                                       */
#define OTG_FS_HOST_OTG_FS_HCINTMSK8_DTERRM_Msk (0x400UL)           /*!< DTERRM (Bitfield-Mask: 0x01)                          */
/* ====================================================  OTG_FS_HCTSIZ8  ===================================================== */
#define OTG_FS_HOST_OTG_FS_HCTSIZ8_XFRSIZ_Pos (0UL)                 /*!< XFRSIZ (Bit 0)                                        */
#define OTG_FS_HOST_OTG_FS_HCTSIZ8_XFRSIZ_Msk (0x7ffffUL)           /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_FS_HOST_OTG_FS_HCTSIZ8_PKTCNT_Pos (19UL)                /*!< PKTCNT (Bit 19)                                       */
#define OTG_FS_HOST_OTG_FS_HCTSIZ8_PKTCNT_Msk (0x1ff80000UL)        /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_FS_HOST_OTG_FS_HCTSIZ8_DPID_Pos (29UL)                  /*!< DPID (Bit 29)                                         */
#define OTG_FS_HOST_OTG_FS_HCTSIZ8_DPID_Msk (0x60000000UL)          /*!< DPID (Bitfield-Mask: 0x03)                            */
/* ====================================================  OTG_FS_HCCHAR9  ===================================================== */
#define OTG_FS_HOST_OTG_FS_HCCHAR9_MPSIZ_Pos (0UL)                  /*!< MPSIZ (Bit 0)                                         */
#define OTG_FS_HOST_OTG_FS_HCCHAR9_MPSIZ_Msk (0x7ffUL)              /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_FS_HOST_OTG_FS_HCCHAR9_EPNUM_Pos (11UL)                 /*!< EPNUM (Bit 11)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR9_EPNUM_Msk (0x7800UL)             /*!< EPNUM (Bitfield-Mask: 0x0f)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR9_EPDIR_Pos (15UL)                 /*!< EPDIR (Bit 15)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR9_EPDIR_Msk (0x8000UL)             /*!< EPDIR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR9_LSDEV_Pos (17UL)                 /*!< LSDEV (Bit 17)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR9_LSDEV_Msk (0x20000UL)            /*!< LSDEV (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR9_EPTYP_Pos (18UL)                 /*!< EPTYP (Bit 18)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR9_EPTYP_Msk (0xc0000UL)            /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR9_MCNT_Pos (20UL)                  /*!< MCNT (Bit 20)                                         */
#define OTG_FS_HOST_OTG_FS_HCCHAR9_MCNT_Msk (0x300000UL)            /*!< MCNT (Bitfield-Mask: 0x03)                            */
#define OTG_FS_HOST_OTG_FS_HCCHAR9_DAD_Pos (22UL)                   /*!< DAD (Bit 22)                                          */
#define OTG_FS_HOST_OTG_FS_HCCHAR9_DAD_Msk (0x1fc00000UL)           /*!< DAD (Bitfield-Mask: 0x7f)                             */
#define OTG_FS_HOST_OTG_FS_HCCHAR9_ODDFRM_Pos (29UL)                /*!< ODDFRM (Bit 29)                                       */
#define OTG_FS_HOST_OTG_FS_HCCHAR9_ODDFRM_Msk (0x20000000UL)        /*!< ODDFRM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCCHAR9_CHDIS_Pos (30UL)                 /*!< CHDIS (Bit 30)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR9_CHDIS_Msk (0x40000000UL)         /*!< CHDIS (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR9_CHENA_Pos (31UL)                 /*!< CHENA (Bit 31)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR9_CHENA_Msk (0x80000000UL)         /*!< CHENA (Bitfield-Mask: 0x01)                           */
/* =====================================================  OTG_FS_HCINT9  ===================================================== */
#define OTG_FS_HOST_OTG_FS_HCINT9_XFRC_Pos (0UL)                    /*!< XFRC (Bit 0)                                          */
#define OTG_FS_HOST_OTG_FS_HCINT9_XFRC_Msk (0x1UL)                  /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINT9_CHH_Pos (1UL)                     /*!< CHH (Bit 1)                                           */
#define OTG_FS_HOST_OTG_FS_HCINT9_CHH_Msk (0x2UL)                   /*!< CHH (Bitfield-Mask: 0x01)                             */
#define OTG_FS_HOST_OTG_FS_HCINT9_STALL_Pos (3UL)                   /*!< STALL (Bit 3)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT9_STALL_Msk (0x8UL)                 /*!< STALL (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT9_NAK_Pos (4UL)                     /*!< NAK (Bit 4)                                           */
#define OTG_FS_HOST_OTG_FS_HCINT9_NAK_Msk (0x10UL)                  /*!< NAK (Bitfield-Mask: 0x01)                             */
#define OTG_FS_HOST_OTG_FS_HCINT9_ACK_Pos (5UL)                     /*!< ACK (Bit 5)                                           */
#define OTG_FS_HOST_OTG_FS_HCINT9_ACK_Msk (0x20UL)                  /*!< ACK (Bitfield-Mask: 0x01)                             */
#define OTG_FS_HOST_OTG_FS_HCINT9_TXERR_Pos (7UL)                   /*!< TXERR (Bit 7)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT9_TXERR_Msk (0x80UL)                /*!< TXERR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT9_BBERR_Pos (8UL)                   /*!< BBERR (Bit 8)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT9_BBERR_Msk (0x100UL)               /*!< BBERR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT9_FRMOR_Pos (9UL)                   /*!< FRMOR (Bit 9)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT9_FRMOR_Msk (0x200UL)               /*!< FRMOR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT9_DTERR_Pos (10UL)                  /*!< DTERR (Bit 10)                                        */
#define OTG_FS_HOST_OTG_FS_HCINT9_DTERR_Msk (0x400UL)               /*!< DTERR (Bitfield-Mask: 0x01)                           */
/* ===================================================  OTG_FS_HCINTMSK9  ==================================================== */
#define OTG_FS_HOST_OTG_FS_HCINTMSK9_XFRCM_Pos (0UL)                /*!< XFRCM (Bit 0)                                         */
#define OTG_FS_HOST_OTG_FS_HCINTMSK9_XFRCM_Msk (0x1UL)              /*!< XFRCM (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINTMSK9_CHHM_Pos (1UL)                 /*!< CHHM (Bit 1)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK9_CHHM_Msk (0x2UL)               /*!< CHHM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK9_STALLM_Pos (3UL)               /*!< STALLM (Bit 3)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK9_STALLM_Msk (0x8UL)             /*!< STALLM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK9_NAKM_Pos (4UL)                 /*!< NAKM (Bit 4)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK9_NAKM_Msk (0x10UL)              /*!< NAKM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK9_ACKM_Pos (5UL)                 /*!< ACKM (Bit 5)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK9_ACKM_Msk (0x20UL)              /*!< ACKM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK9_NYET_Pos (6UL)                 /*!< NYET (Bit 6)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK9_NYET_Msk (0x40UL)              /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK9_TXERRM_Pos (7UL)               /*!< TXERRM (Bit 7)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK9_TXERRM_Msk (0x80UL)            /*!< TXERRM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK9_BBERRM_Pos (8UL)               /*!< BBERRM (Bit 8)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK9_BBERRM_Msk (0x100UL)           /*!< BBERRM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK9_FRMORM_Pos (9UL)               /*!< FRMORM (Bit 9)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK9_FRMORM_Msk (0x200UL)           /*!< FRMORM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK9_DTERRM_Pos (10UL)              /*!< DTERRM (Bit 10)                                       */
#define OTG_FS_HOST_OTG_FS_HCINTMSK9_DTERRM_Msk (0x400UL)           /*!< DTERRM (Bitfield-Mask: 0x01)                          */
/* ====================================================  OTG_FS_HCTSIZ9  ===================================================== */
#define OTG_FS_HOST_OTG_FS_HCTSIZ9_XFRSIZ_Pos (0UL)                 /*!< XFRSIZ (Bit 0)                                        */
#define OTG_FS_HOST_OTG_FS_HCTSIZ9_XFRSIZ_Msk (0x7ffffUL)           /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_FS_HOST_OTG_FS_HCTSIZ9_PKTCNT_Pos (19UL)                /*!< PKTCNT (Bit 19)                                       */
#define OTG_FS_HOST_OTG_FS_HCTSIZ9_PKTCNT_Msk (0x1ff80000UL)        /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_FS_HOST_OTG_FS_HCTSIZ9_DPID_Pos (29UL)                  /*!< DPID (Bit 29)                                         */
#define OTG_FS_HOST_OTG_FS_HCTSIZ9_DPID_Msk (0x60000000UL)          /*!< DPID (Bitfield-Mask: 0x03)                            */
/* ====================================================  OTG_FS_HCCHAR10  ==================================================== */
#define OTG_FS_HOST_OTG_FS_HCCHAR10_MPSIZ_Pos (0UL)                 /*!< MPSIZ (Bit 0)                                         */
#define OTG_FS_HOST_OTG_FS_HCCHAR10_MPSIZ_Msk (0x7ffUL)             /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_FS_HOST_OTG_FS_HCCHAR10_EPNUM_Pos (11UL)                /*!< EPNUM (Bit 11)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR10_EPNUM_Msk (0x7800UL)            /*!< EPNUM (Bitfield-Mask: 0x0f)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR10_EPDIR_Pos (15UL)                /*!< EPDIR (Bit 15)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR10_EPDIR_Msk (0x8000UL)            /*!< EPDIR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR10_LSDEV_Pos (17UL)                /*!< LSDEV (Bit 17)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR10_LSDEV_Msk (0x20000UL)           /*!< LSDEV (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR10_EPTYP_Pos (18UL)                /*!< EPTYP (Bit 18)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR10_EPTYP_Msk (0xc0000UL)           /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR10_MCNT_Pos (20UL)                 /*!< MCNT (Bit 20)                                         */
#define OTG_FS_HOST_OTG_FS_HCCHAR10_MCNT_Msk (0x300000UL)           /*!< MCNT (Bitfield-Mask: 0x03)                            */
#define OTG_FS_HOST_OTG_FS_HCCHAR10_DAD_Pos (22UL)                  /*!< DAD (Bit 22)                                          */
#define OTG_FS_HOST_OTG_FS_HCCHAR10_DAD_Msk (0x1fc00000UL)          /*!< DAD (Bitfield-Mask: 0x7f)                             */
#define OTG_FS_HOST_OTG_FS_HCCHAR10_ODDFRM_Pos (29UL)               /*!< ODDFRM (Bit 29)                                       */
#define OTG_FS_HOST_OTG_FS_HCCHAR10_ODDFRM_Msk (0x20000000UL)       /*!< ODDFRM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCCHAR10_CHDIS_Pos (30UL)                /*!< CHDIS (Bit 30)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR10_CHDIS_Msk (0x40000000UL)        /*!< CHDIS (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR10_CHENA_Pos (31UL)                /*!< CHENA (Bit 31)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR10_CHENA_Msk (0x80000000UL)        /*!< CHENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_FS_HCINT10  ===================================================== */
#define OTG_FS_HOST_OTG_FS_HCINT10_XFRC_Pos (0UL)                   /*!< XFRC (Bit 0)                                          */
#define OTG_FS_HOST_OTG_FS_HCINT10_XFRC_Msk (0x1UL)                 /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINT10_CHH_Pos (1UL)                    /*!< CHH (Bit 1)                                           */
#define OTG_FS_HOST_OTG_FS_HCINT10_CHH_Msk (0x2UL)                  /*!< CHH (Bitfield-Mask: 0x01)                             */
#define OTG_FS_HOST_OTG_FS_HCINT10_STALL_Pos (3UL)                  /*!< STALL (Bit 3)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT10_STALL_Msk (0x8UL)                /*!< STALL (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT10_NAK_Pos (4UL)                    /*!< NAK (Bit 4)                                           */
#define OTG_FS_HOST_OTG_FS_HCINT10_NAK_Msk (0x10UL)                 /*!< NAK (Bitfield-Mask: 0x01)                             */
#define OTG_FS_HOST_OTG_FS_HCINT10_ACK_Pos (5UL)                    /*!< ACK (Bit 5)                                           */
#define OTG_FS_HOST_OTG_FS_HCINT10_ACK_Msk (0x20UL)                 /*!< ACK (Bitfield-Mask: 0x01)                             */
#define OTG_FS_HOST_OTG_FS_HCINT10_TXERR_Pos (7UL)                  /*!< TXERR (Bit 7)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT10_TXERR_Msk (0x80UL)               /*!< TXERR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT10_BBERR_Pos (8UL)                  /*!< BBERR (Bit 8)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT10_BBERR_Msk (0x100UL)              /*!< BBERR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT10_FRMOR_Pos (9UL)                  /*!< FRMOR (Bit 9)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT10_FRMOR_Msk (0x200UL)              /*!< FRMOR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT10_DTERR_Pos (10UL)                 /*!< DTERR (Bit 10)                                        */
#define OTG_FS_HOST_OTG_FS_HCINT10_DTERR_Msk (0x400UL)              /*!< DTERR (Bitfield-Mask: 0x01)                           */
/* ===================================================  OTG_FS_HCINTMSK10  =================================================== */
#define OTG_FS_HOST_OTG_FS_HCINTMSK10_XFRCM_Pos (0UL)               /*!< XFRCM (Bit 0)                                         */
#define OTG_FS_HOST_OTG_FS_HCINTMSK10_XFRCM_Msk (0x1UL)             /*!< XFRCM (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINTMSK10_CHHM_Pos (1UL)                /*!< CHHM (Bit 1)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK10_CHHM_Msk (0x2UL)              /*!< CHHM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK10_STALLM_Pos (3UL)              /*!< STALLM (Bit 3)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK10_STALLM_Msk (0x8UL)            /*!< STALLM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK10_NAKM_Pos (4UL)                /*!< NAKM (Bit 4)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK10_NAKM_Msk (0x10UL)             /*!< NAKM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK10_ACKM_Pos (5UL)                /*!< ACKM (Bit 5)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK10_ACKM_Msk (0x20UL)             /*!< ACKM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK10_NYET_Pos (6UL)                /*!< NYET (Bit 6)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK10_NYET_Msk (0x40UL)             /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK10_TXERRM_Pos (7UL)              /*!< TXERRM (Bit 7)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK10_TXERRM_Msk (0x80UL)           /*!< TXERRM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK10_BBERRM_Pos (8UL)              /*!< BBERRM (Bit 8)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK10_BBERRM_Msk (0x100UL)          /*!< BBERRM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK10_FRMORM_Pos (9UL)              /*!< FRMORM (Bit 9)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK10_FRMORM_Msk (0x200UL)          /*!< FRMORM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK10_DTERRM_Pos (10UL)             /*!< DTERRM (Bit 10)                                       */
#define OTG_FS_HOST_OTG_FS_HCINTMSK10_DTERRM_Msk (0x400UL)          /*!< DTERRM (Bitfield-Mask: 0x01)                          */
/* ====================================================  OTG_FS_HCTSIZ10  ==================================================== */
#define OTG_FS_HOST_OTG_FS_HCTSIZ10_XFRSIZ_Pos (0UL)                /*!< XFRSIZ (Bit 0)                                        */
#define OTG_FS_HOST_OTG_FS_HCTSIZ10_XFRSIZ_Msk (0x7ffffUL)          /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_FS_HOST_OTG_FS_HCTSIZ10_PKTCNT_Pos (19UL)               /*!< PKTCNT (Bit 19)                                       */
#define OTG_FS_HOST_OTG_FS_HCTSIZ10_PKTCNT_Msk (0x1ff80000UL)       /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_FS_HOST_OTG_FS_HCTSIZ10_DPID_Pos (29UL)                 /*!< DPID (Bit 29)                                         */
#define OTG_FS_HOST_OTG_FS_HCTSIZ10_DPID_Msk (0x60000000UL)         /*!< DPID (Bitfield-Mask: 0x03)                            */
/* ====================================================  OTG_FS_HCCHAR11  ==================================================== */
#define OTG_FS_HOST_OTG_FS_HCCHAR11_MPSIZ_Pos (0UL)                 /*!< MPSIZ (Bit 0)                                         */
#define OTG_FS_HOST_OTG_FS_HCCHAR11_MPSIZ_Msk (0x7ffUL)             /*!< MPSIZ (Bitfield-Mask: 0x7ff)                          */
#define OTG_FS_HOST_OTG_FS_HCCHAR11_EPNUM_Pos (11UL)                /*!< EPNUM (Bit 11)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR11_EPNUM_Msk (0x7800UL)            /*!< EPNUM (Bitfield-Mask: 0x0f)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR11_EPDIR_Pos (15UL)                /*!< EPDIR (Bit 15)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR11_EPDIR_Msk (0x8000UL)            /*!< EPDIR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR11_LSDEV_Pos (17UL)                /*!< LSDEV (Bit 17)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR11_LSDEV_Msk (0x20000UL)           /*!< LSDEV (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR11_EPTYP_Pos (18UL)                /*!< EPTYP (Bit 18)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR11_EPTYP_Msk (0xc0000UL)           /*!< EPTYP (Bitfield-Mask: 0x03)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR11_MCNT_Pos (20UL)                 /*!< MCNT (Bit 20)                                         */
#define OTG_FS_HOST_OTG_FS_HCCHAR11_MCNT_Msk (0x300000UL)           /*!< MCNT (Bitfield-Mask: 0x03)                            */
#define OTG_FS_HOST_OTG_FS_HCCHAR11_DAD_Pos (22UL)                  /*!< DAD (Bit 22)                                          */
#define OTG_FS_HOST_OTG_FS_HCCHAR11_DAD_Msk (0x1fc00000UL)          /*!< DAD (Bitfield-Mask: 0x7f)                             */
#define OTG_FS_HOST_OTG_FS_HCCHAR11_ODDFRM_Pos (29UL)               /*!< ODDFRM (Bit 29)                                       */
#define OTG_FS_HOST_OTG_FS_HCCHAR11_ODDFRM_Msk (0x20000000UL)       /*!< ODDFRM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCCHAR11_CHDIS_Pos (30UL)                /*!< CHDIS (Bit 30)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR11_CHDIS_Msk (0x40000000UL)        /*!< CHDIS (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCCHAR11_CHENA_Pos (31UL)                /*!< CHENA (Bit 31)                                        */
#define OTG_FS_HOST_OTG_FS_HCCHAR11_CHENA_Msk (0x80000000UL)        /*!< CHENA (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_FS_HCINT11  ===================================================== */
#define OTG_FS_HOST_OTG_FS_HCINT11_XFRC_Pos (0UL)                   /*!< XFRC (Bit 0)                                          */
#define OTG_FS_HOST_OTG_FS_HCINT11_XFRC_Msk (0x1UL)                 /*!< XFRC (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINT11_CHH_Pos (1UL)                    /*!< CHH (Bit 1)                                           */
#define OTG_FS_HOST_OTG_FS_HCINT11_CHH_Msk (0x2UL)                  /*!< CHH (Bitfield-Mask: 0x01)                             */
#define OTG_FS_HOST_OTG_FS_HCINT11_STALL_Pos (3UL)                  /*!< STALL (Bit 3)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT11_STALL_Msk (0x8UL)                /*!< STALL (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT11_NAK_Pos (4UL)                    /*!< NAK (Bit 4)                                           */
#define OTG_FS_HOST_OTG_FS_HCINT11_NAK_Msk (0x10UL)                 /*!< NAK (Bitfield-Mask: 0x01)                             */
#define OTG_FS_HOST_OTG_FS_HCINT11_ACK_Pos (5UL)                    /*!< ACK (Bit 5)                                           */
#define OTG_FS_HOST_OTG_FS_HCINT11_ACK_Msk (0x20UL)                 /*!< ACK (Bitfield-Mask: 0x01)                             */
#define OTG_FS_HOST_OTG_FS_HCINT11_TXERR_Pos (7UL)                  /*!< TXERR (Bit 7)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT11_TXERR_Msk (0x80UL)               /*!< TXERR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT11_BBERR_Pos (8UL)                  /*!< BBERR (Bit 8)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT11_BBERR_Msk (0x100UL)              /*!< BBERR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT11_FRMOR_Pos (9UL)                  /*!< FRMOR (Bit 9)                                         */
#define OTG_FS_HOST_OTG_FS_HCINT11_FRMOR_Msk (0x200UL)              /*!< FRMOR (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINT11_DTERR_Pos (10UL)                 /*!< DTERR (Bit 10)                                        */
#define OTG_FS_HOST_OTG_FS_HCINT11_DTERR_Msk (0x400UL)              /*!< DTERR (Bitfield-Mask: 0x01)                           */
/* ===================================================  OTG_FS_HCINTMSK11  =================================================== */
#define OTG_FS_HOST_OTG_FS_HCINTMSK11_XFRCM_Pos (0UL)               /*!< XFRCM (Bit 0)                                         */
#define OTG_FS_HOST_OTG_FS_HCINTMSK11_XFRCM_Msk (0x1UL)             /*!< XFRCM (Bitfield-Mask: 0x01)                           */
#define OTG_FS_HOST_OTG_FS_HCINTMSK11_CHHM_Pos (1UL)                /*!< CHHM (Bit 1)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK11_CHHM_Msk (0x2UL)              /*!< CHHM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK11_STALLM_Pos (3UL)              /*!< STALLM (Bit 3)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK11_STALLM_Msk (0x8UL)            /*!< STALLM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK11_NAKM_Pos (4UL)                /*!< NAKM (Bit 4)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK11_NAKM_Msk (0x10UL)             /*!< NAKM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK11_ACKM_Pos (5UL)                /*!< ACKM (Bit 5)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK11_ACKM_Msk (0x20UL)             /*!< ACKM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK11_NYET_Pos (6UL)                /*!< NYET (Bit 6)                                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK11_NYET_Msk (0x40UL)             /*!< NYET (Bitfield-Mask: 0x01)                            */
#define OTG_FS_HOST_OTG_FS_HCINTMSK11_TXERRM_Pos (7UL)              /*!< TXERRM (Bit 7)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK11_TXERRM_Msk (0x80UL)           /*!< TXERRM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK11_BBERRM_Pos (8UL)              /*!< BBERRM (Bit 8)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK11_BBERRM_Msk (0x100UL)          /*!< BBERRM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK11_FRMORM_Pos (9UL)              /*!< FRMORM (Bit 9)                                        */
#define OTG_FS_HOST_OTG_FS_HCINTMSK11_FRMORM_Msk (0x200UL)          /*!< FRMORM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_HOST_OTG_FS_HCINTMSK11_DTERRM_Pos (10UL)             /*!< DTERRM (Bit 10)                                       */
#define OTG_FS_HOST_OTG_FS_HCINTMSK11_DTERRM_Msk (0x400UL)          /*!< DTERRM (Bitfield-Mask: 0x01)                          */
/* ====================================================  OTG_FS_HCTSIZ11  ==================================================== */
#define OTG_FS_HOST_OTG_FS_HCTSIZ11_XFRSIZ_Pos (0UL)                /*!< XFRSIZ (Bit 0)                                        */
#define OTG_FS_HOST_OTG_FS_HCTSIZ11_XFRSIZ_Msk (0x7ffffUL)          /*!< XFRSIZ (Bitfield-Mask: 0x7ffff)                       */
#define OTG_FS_HOST_OTG_FS_HCTSIZ11_PKTCNT_Pos (19UL)               /*!< PKTCNT (Bit 19)                                       */
#define OTG_FS_HOST_OTG_FS_HCTSIZ11_PKTCNT_Msk (0x1ff80000UL)       /*!< PKTCNT (Bitfield-Mask: 0x3ff)                         */
#define OTG_FS_HOST_OTG_FS_HCTSIZ11_DPID_Pos (29UL)                 /*!< DPID (Bit 29)                                         */
#define OTG_FS_HOST_OTG_FS_HCTSIZ11_DPID_Msk (0x60000000UL)         /*!< DPID (Bitfield-Mask: 0x03)                            */


/* =========================================================================================================================== */
/* ================                                       OTG_HS_GLOBAL                                       ================ */
/* =========================================================================================================================== */

/* ====================================================  OTG_HS_GOTGCTL  ===================================================== */
#define OTG_HS_GLOBAL_OTG_HS_GOTGCTL_SRQSCS_Pos (0UL)               /*!< SRQSCS (Bit 0)                                        */
#define OTG_HS_GLOBAL_OTG_HS_GOTGCTL_SRQSCS_Msk (0x1UL)             /*!< SRQSCS (Bitfield-Mask: 0x01)                          */
#define OTG_HS_GLOBAL_OTG_HS_GOTGCTL_SRQ_Pos (1UL)                  /*!< SRQ (Bit 1)                                           */
#define OTG_HS_GLOBAL_OTG_HS_GOTGCTL_SRQ_Msk (0x2UL)                /*!< SRQ (Bitfield-Mask: 0x01)                             */
#define OTG_HS_GLOBAL_OTG_HS_GOTGCTL_HNGSCS_Pos (8UL)               /*!< HNGSCS (Bit 8)                                        */
#define OTG_HS_GLOBAL_OTG_HS_GOTGCTL_HNGSCS_Msk (0x100UL)           /*!< HNGSCS (Bitfield-Mask: 0x01)                          */
#define OTG_HS_GLOBAL_OTG_HS_GOTGCTL_HNPRQ_Pos (9UL)                /*!< HNPRQ (Bit 9)                                         */
#define OTG_HS_GLOBAL_OTG_HS_GOTGCTL_HNPRQ_Msk (0x200UL)            /*!< HNPRQ (Bitfield-Mask: 0x01)                           */
#define OTG_HS_GLOBAL_OTG_HS_GOTGCTL_HSHNPEN_Pos (10UL)             /*!< HSHNPEN (Bit 10)                                      */
#define OTG_HS_GLOBAL_OTG_HS_GOTGCTL_HSHNPEN_Msk (0x400UL)          /*!< HSHNPEN (Bitfield-Mask: 0x01)                         */
#define OTG_HS_GLOBAL_OTG_HS_GOTGCTL_DHNPEN_Pos (11UL)              /*!< DHNPEN (Bit 11)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GOTGCTL_DHNPEN_Msk (0x800UL)           /*!< DHNPEN (Bitfield-Mask: 0x01)                          */
#define OTG_HS_GLOBAL_OTG_HS_GOTGCTL_CIDSTS_Pos (16UL)              /*!< CIDSTS (Bit 16)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GOTGCTL_CIDSTS_Msk (0x10000UL)         /*!< CIDSTS (Bitfield-Mask: 0x01)                          */
#define OTG_HS_GLOBAL_OTG_HS_GOTGCTL_DBCT_Pos (17UL)                /*!< DBCT (Bit 17)                                         */
#define OTG_HS_GLOBAL_OTG_HS_GOTGCTL_DBCT_Msk (0x20000UL)           /*!< DBCT (Bitfield-Mask: 0x01)                            */
#define OTG_HS_GLOBAL_OTG_HS_GOTGCTL_ASVLD_Pos (18UL)               /*!< ASVLD (Bit 18)                                        */
#define OTG_HS_GLOBAL_OTG_HS_GOTGCTL_ASVLD_Msk (0x40000UL)          /*!< ASVLD (Bitfield-Mask: 0x01)                           */
#define OTG_HS_GLOBAL_OTG_HS_GOTGCTL_BSVLD_Pos (19UL)               /*!< BSVLD (Bit 19)                                        */
#define OTG_HS_GLOBAL_OTG_HS_GOTGCTL_BSVLD_Msk (0x80000UL)          /*!< BSVLD (Bitfield-Mask: 0x01)                           */
#define OTG_HS_GLOBAL_OTG_HS_GOTGCTL_EHEN_Pos (12UL)                /*!< EHEN (Bit 12)                                         */
#define OTG_HS_GLOBAL_OTG_HS_GOTGCTL_EHEN_Msk (0x1000UL)            /*!< EHEN (Bitfield-Mask: 0x01)                            */
/* ====================================================  OTG_HS_GOTGINT  ===================================================== */
#define OTG_HS_GLOBAL_OTG_HS_GOTGINT_SEDET_Pos (2UL)                /*!< SEDET (Bit 2)                                         */
#define OTG_HS_GLOBAL_OTG_HS_GOTGINT_SEDET_Msk (0x4UL)              /*!< SEDET (Bitfield-Mask: 0x01)                           */
#define OTG_HS_GLOBAL_OTG_HS_GOTGINT_SRSSCHG_Pos (8UL)              /*!< SRSSCHG (Bit 8)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GOTGINT_SRSSCHG_Msk (0x100UL)          /*!< SRSSCHG (Bitfield-Mask: 0x01)                         */
#define OTG_HS_GLOBAL_OTG_HS_GOTGINT_HNSSCHG_Pos (9UL)              /*!< HNSSCHG (Bit 9)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GOTGINT_HNSSCHG_Msk (0x200UL)          /*!< HNSSCHG (Bitfield-Mask: 0x01)                         */
#define OTG_HS_GLOBAL_OTG_HS_GOTGINT_HNGDET_Pos (17UL)              /*!< HNGDET (Bit 17)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GOTGINT_HNGDET_Msk (0x20000UL)         /*!< HNGDET (Bitfield-Mask: 0x01)                          */
#define OTG_HS_GLOBAL_OTG_HS_GOTGINT_ADTOCHG_Pos (18UL)             /*!< ADTOCHG (Bit 18)                                      */
#define OTG_HS_GLOBAL_OTG_HS_GOTGINT_ADTOCHG_Msk (0x40000UL)        /*!< ADTOCHG (Bitfield-Mask: 0x01)                         */
#define OTG_HS_GLOBAL_OTG_HS_GOTGINT_DBCDNE_Pos (19UL)              /*!< DBCDNE (Bit 19)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GOTGINT_DBCDNE_Msk (0x80000UL)         /*!< DBCDNE (Bitfield-Mask: 0x01)                          */
#define OTG_HS_GLOBAL_OTG_HS_GOTGINT_IDCHNG_Pos (20UL)              /*!< IDCHNG (Bit 20)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GOTGINT_IDCHNG_Msk (0x100000UL)        /*!< IDCHNG (Bitfield-Mask: 0x01)                          */
/* ====================================================  OTG_HS_GAHBCFG  ===================================================== */
#define OTG_HS_GLOBAL_OTG_HS_GAHBCFG_GINT_Pos (0UL)                 /*!< GINT (Bit 0)                                          */
#define OTG_HS_GLOBAL_OTG_HS_GAHBCFG_GINT_Msk (0x1UL)               /*!< GINT (Bitfield-Mask: 0x01)                            */
#define OTG_HS_GLOBAL_OTG_HS_GAHBCFG_HBSTLEN_Pos (1UL)              /*!< HBSTLEN (Bit 1)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GAHBCFG_HBSTLEN_Msk (0x1eUL)           /*!< HBSTLEN (Bitfield-Mask: 0x0f)                         */
#define OTG_HS_GLOBAL_OTG_HS_GAHBCFG_DMAEN_Pos (5UL)                /*!< DMAEN (Bit 5)                                         */
#define OTG_HS_GLOBAL_OTG_HS_GAHBCFG_DMAEN_Msk (0x20UL)             /*!< DMAEN (Bitfield-Mask: 0x01)                           */
#define OTG_HS_GLOBAL_OTG_HS_GAHBCFG_TXFELVL_Pos (7UL)              /*!< TXFELVL (Bit 7)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GAHBCFG_TXFELVL_Msk (0x80UL)           /*!< TXFELVL (Bitfield-Mask: 0x01)                         */
#define OTG_HS_GLOBAL_OTG_HS_GAHBCFG_PTXFELVL_Pos (8UL)             /*!< PTXFELVL (Bit 8)                                      */
#define OTG_HS_GLOBAL_OTG_HS_GAHBCFG_PTXFELVL_Msk (0x100UL)         /*!< PTXFELVL (Bitfield-Mask: 0x01)                        */
/* ====================================================  OTG_HS_GUSBCFG  ===================================================== */
#define OTG_HS_GLOBAL_OTG_HS_GUSBCFG_TOCAL_Pos (0UL)                /*!< TOCAL (Bit 0)                                         */
#define OTG_HS_GLOBAL_OTG_HS_GUSBCFG_TOCAL_Msk (0x7UL)              /*!< TOCAL (Bitfield-Mask: 0x07)                           */
#define OTG_HS_GLOBAL_OTG_HS_GUSBCFG_PHYSEL_Pos (6UL)               /*!< PHYSEL (Bit 6)                                        */
#define OTG_HS_GLOBAL_OTG_HS_GUSBCFG_PHYSEL_Msk (0x40UL)            /*!< PHYSEL (Bitfield-Mask: 0x01)                          */
#define OTG_HS_GLOBAL_OTG_HS_GUSBCFG_SRPCAP_Pos (8UL)               /*!< SRPCAP (Bit 8)                                        */
#define OTG_HS_GLOBAL_OTG_HS_GUSBCFG_SRPCAP_Msk (0x100UL)           /*!< SRPCAP (Bitfield-Mask: 0x01)                          */
#define OTG_HS_GLOBAL_OTG_HS_GUSBCFG_HNPCAP_Pos (9UL)               /*!< HNPCAP (Bit 9)                                        */
#define OTG_HS_GLOBAL_OTG_HS_GUSBCFG_HNPCAP_Msk (0x200UL)           /*!< HNPCAP (Bitfield-Mask: 0x01)                          */
#define OTG_HS_GLOBAL_OTG_HS_GUSBCFG_TRDT_Pos (10UL)                /*!< TRDT (Bit 10)                                         */
#define OTG_HS_GLOBAL_OTG_HS_GUSBCFG_TRDT_Msk (0x3c00UL)            /*!< TRDT (Bitfield-Mask: 0x0f)                            */
#define OTG_HS_GLOBAL_OTG_HS_GUSBCFG_PHYLPCS_Pos (15UL)             /*!< PHYLPCS (Bit 15)                                      */
#define OTG_HS_GLOBAL_OTG_HS_GUSBCFG_PHYLPCS_Msk (0x8000UL)         /*!< PHYLPCS (Bitfield-Mask: 0x01)                         */
#define OTG_HS_GLOBAL_OTG_HS_GUSBCFG_ULPIFSLS_Pos (17UL)            /*!< ULPIFSLS (Bit 17)                                     */
#define OTG_HS_GLOBAL_OTG_HS_GUSBCFG_ULPIFSLS_Msk (0x20000UL)       /*!< ULPIFSLS (Bitfield-Mask: 0x01)                        */
#define OTG_HS_GLOBAL_OTG_HS_GUSBCFG_ULPIAR_Pos (18UL)              /*!< ULPIAR (Bit 18)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GUSBCFG_ULPIAR_Msk (0x40000UL)         /*!< ULPIAR (Bitfield-Mask: 0x01)                          */
#define OTG_HS_GLOBAL_OTG_HS_GUSBCFG_ULPICSM_Pos (19UL)             /*!< ULPICSM (Bit 19)                                      */
#define OTG_HS_GLOBAL_OTG_HS_GUSBCFG_ULPICSM_Msk (0x80000UL)        /*!< ULPICSM (Bitfield-Mask: 0x01)                         */
#define OTG_HS_GLOBAL_OTG_HS_GUSBCFG_ULPIEVBUSD_Pos (20UL)          /*!< ULPIEVBUSD (Bit 20)                                   */
#define OTG_HS_GLOBAL_OTG_HS_GUSBCFG_ULPIEVBUSD_Msk (0x100000UL)    /*!< ULPIEVBUSD (Bitfield-Mask: 0x01)                      */
#define OTG_HS_GLOBAL_OTG_HS_GUSBCFG_ULPIEVBUSI_Pos (21UL)          /*!< ULPIEVBUSI (Bit 21)                                   */
#define OTG_HS_GLOBAL_OTG_HS_GUSBCFG_ULPIEVBUSI_Msk (0x200000UL)    /*!< ULPIEVBUSI (Bitfield-Mask: 0x01)                      */
#define OTG_HS_GLOBAL_OTG_HS_GUSBCFG_TSDPS_Pos (22UL)               /*!< TSDPS (Bit 22)                                        */
#define OTG_HS_GLOBAL_OTG_HS_GUSBCFG_TSDPS_Msk (0x400000UL)         /*!< TSDPS (Bitfield-Mask: 0x01)                           */
#define OTG_HS_GLOBAL_OTG_HS_GUSBCFG_PCCI_Pos (23UL)                /*!< PCCI (Bit 23)                                         */
#define OTG_HS_GLOBAL_OTG_HS_GUSBCFG_PCCI_Msk (0x800000UL)          /*!< PCCI (Bitfield-Mask: 0x01)                            */
#define OTG_HS_GLOBAL_OTG_HS_GUSBCFG_PTCI_Pos (24UL)                /*!< PTCI (Bit 24)                                         */
#define OTG_HS_GLOBAL_OTG_HS_GUSBCFG_PTCI_Msk (0x1000000UL)         /*!< PTCI (Bitfield-Mask: 0x01)                            */
#define OTG_HS_GLOBAL_OTG_HS_GUSBCFG_ULPIIPD_Pos (25UL)             /*!< ULPIIPD (Bit 25)                                      */
#define OTG_HS_GLOBAL_OTG_HS_GUSBCFG_ULPIIPD_Msk (0x2000000UL)      /*!< ULPIIPD (Bitfield-Mask: 0x01)                         */
#define OTG_HS_GLOBAL_OTG_HS_GUSBCFG_FHMOD_Pos (29UL)               /*!< FHMOD (Bit 29)                                        */
#define OTG_HS_GLOBAL_OTG_HS_GUSBCFG_FHMOD_Msk (0x20000000UL)       /*!< FHMOD (Bitfield-Mask: 0x01)                           */
#define OTG_HS_GLOBAL_OTG_HS_GUSBCFG_FDMOD_Pos (30UL)               /*!< FDMOD (Bit 30)                                        */
#define OTG_HS_GLOBAL_OTG_HS_GUSBCFG_FDMOD_Msk (0x40000000UL)       /*!< FDMOD (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_HS_GRSTCTL  ===================================================== */
#define OTG_HS_GLOBAL_OTG_HS_GRSTCTL_CSRST_Pos (0UL)                /*!< CSRST (Bit 0)                                         */
#define OTG_HS_GLOBAL_OTG_HS_GRSTCTL_CSRST_Msk (0x1UL)              /*!< CSRST (Bitfield-Mask: 0x01)                           */
#define OTG_HS_GLOBAL_OTG_HS_GRSTCTL_HSRST_Pos (1UL)                /*!< HSRST (Bit 1)                                         */
#define OTG_HS_GLOBAL_OTG_HS_GRSTCTL_HSRST_Msk (0x2UL)              /*!< HSRST (Bitfield-Mask: 0x01)                           */
#define OTG_HS_GLOBAL_OTG_HS_GRSTCTL_FCRST_Pos (2UL)                /*!< FCRST (Bit 2)                                         */
#define OTG_HS_GLOBAL_OTG_HS_GRSTCTL_FCRST_Msk (0x4UL)              /*!< FCRST (Bitfield-Mask: 0x01)                           */
#define OTG_HS_GLOBAL_OTG_HS_GRSTCTL_RXFFLSH_Pos (4UL)              /*!< RXFFLSH (Bit 4)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GRSTCTL_RXFFLSH_Msk (0x10UL)           /*!< RXFFLSH (Bitfield-Mask: 0x01)                         */
#define OTG_HS_GLOBAL_OTG_HS_GRSTCTL_TXFFLSH_Pos (5UL)              /*!< TXFFLSH (Bit 5)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GRSTCTL_TXFFLSH_Msk (0x20UL)           /*!< TXFFLSH (Bitfield-Mask: 0x01)                         */
#define OTG_HS_GLOBAL_OTG_HS_GRSTCTL_TXFNUM_Pos (6UL)               /*!< TXFNUM (Bit 6)                                        */
#define OTG_HS_GLOBAL_OTG_HS_GRSTCTL_TXFNUM_Msk (0x7c0UL)           /*!< TXFNUM (Bitfield-Mask: 0x1f)                          */
#define OTG_HS_GLOBAL_OTG_HS_GRSTCTL_AHBIDL_Pos (31UL)              /*!< AHBIDL (Bit 31)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GRSTCTL_AHBIDL_Msk (0x80000000UL)      /*!< AHBIDL (Bitfield-Mask: 0x01)                          */
#define OTG_HS_GLOBAL_OTG_HS_GRSTCTL_DMAREQ_Pos (30UL)              /*!< DMAREQ (Bit 30)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GRSTCTL_DMAREQ_Msk (0x40000000UL)      /*!< DMAREQ (Bitfield-Mask: 0x01)                          */
/* ====================================================  OTG_HS_GINTSTS  ===================================================== */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_CMOD_Pos (0UL)                 /*!< CMOD (Bit 0)                                          */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_CMOD_Msk (0x1UL)               /*!< CMOD (Bitfield-Mask: 0x01)                            */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_MMIS_Pos (1UL)                 /*!< MMIS (Bit 1)                                          */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_MMIS_Msk (0x2UL)               /*!< MMIS (Bitfield-Mask: 0x01)                            */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_OTGINT_Pos (2UL)               /*!< OTGINT (Bit 2)                                        */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_OTGINT_Msk (0x4UL)             /*!< OTGINT (Bitfield-Mask: 0x01)                          */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_SOF_Pos (3UL)                  /*!< SOF (Bit 3)                                           */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_SOF_Msk (0x8UL)                /*!< SOF (Bitfield-Mask: 0x01)                             */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_RXFLVL_Pos (4UL)               /*!< RXFLVL (Bit 4)                                        */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_RXFLVL_Msk (0x10UL)            /*!< RXFLVL (Bitfield-Mask: 0x01)                          */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_NPTXFE_Pos (5UL)               /*!< NPTXFE (Bit 5)                                        */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_NPTXFE_Msk (0x20UL)            /*!< NPTXFE (Bitfield-Mask: 0x01)                          */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_GINAKEFF_Pos (6UL)             /*!< GINAKEFF (Bit 6)                                      */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_GINAKEFF_Msk (0x40UL)          /*!< GINAKEFF (Bitfield-Mask: 0x01)                        */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_BOUTNAKEFF_Pos (7UL)           /*!< BOUTNAKEFF (Bit 7)                                    */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_BOUTNAKEFF_Msk (0x80UL)        /*!< BOUTNAKEFF (Bitfield-Mask: 0x01)                      */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_ESUSP_Pos (10UL)               /*!< ESUSP (Bit 10)                                        */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_ESUSP_Msk (0x400UL)            /*!< ESUSP (Bitfield-Mask: 0x01)                           */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_USBSUSP_Pos (11UL)             /*!< USBSUSP (Bit 11)                                      */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_USBSUSP_Msk (0x800UL)          /*!< USBSUSP (Bitfield-Mask: 0x01)                         */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_USBRST_Pos (12UL)              /*!< USBRST (Bit 12)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_USBRST_Msk (0x1000UL)          /*!< USBRST (Bitfield-Mask: 0x01)                          */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_ENUMDNE_Pos (13UL)             /*!< ENUMDNE (Bit 13)                                      */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_ENUMDNE_Msk (0x2000UL)         /*!< ENUMDNE (Bitfield-Mask: 0x01)                         */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_ISOODRP_Pos (14UL)             /*!< ISOODRP (Bit 14)                                      */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_ISOODRP_Msk (0x4000UL)         /*!< ISOODRP (Bitfield-Mask: 0x01)                         */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_EOPF_Pos (15UL)                /*!< EOPF (Bit 15)                                         */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_EOPF_Msk (0x8000UL)            /*!< EOPF (Bitfield-Mask: 0x01)                            */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_IEPINT_Pos (18UL)              /*!< IEPINT (Bit 18)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_IEPINT_Msk (0x40000UL)         /*!< IEPINT (Bitfield-Mask: 0x01)                          */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_OEPINT_Pos (19UL)              /*!< OEPINT (Bit 19)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_OEPINT_Msk (0x80000UL)         /*!< OEPINT (Bitfield-Mask: 0x01)                          */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_IISOIXFR_Pos (20UL)            /*!< IISOIXFR (Bit 20)                                     */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_IISOIXFR_Msk (0x100000UL)      /*!< IISOIXFR (Bitfield-Mask: 0x01)                        */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_PXFR_INCOMPISOOUT_Pos (21UL)   /*!< PXFR_INCOMPISOOUT (Bit 21)                            */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_PXFR_INCOMPISOOUT_Msk (0x200000UL) /*!< PXFR_INCOMPISOOUT (Bitfield-Mask: 0x01)           */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_DATAFSUSP_Pos (22UL)           /*!< DATAFSUSP (Bit 22)                                    */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_DATAFSUSP_Msk (0x400000UL)     /*!< DATAFSUSP (Bitfield-Mask: 0x01)                       */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_HPRTINT_Pos (24UL)             /*!< HPRTINT (Bit 24)                                      */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_HPRTINT_Msk (0x1000000UL)      /*!< HPRTINT (Bitfield-Mask: 0x01)                         */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_HCINT_Pos (25UL)               /*!< HCINT (Bit 25)                                        */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_HCINT_Msk (0x2000000UL)        /*!< HCINT (Bitfield-Mask: 0x01)                           */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_PTXFE_Pos (26UL)               /*!< PTXFE (Bit 26)                                        */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_PTXFE_Msk (0x4000000UL)        /*!< PTXFE (Bitfield-Mask: 0x01)                           */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_CIDSCHG_Pos (28UL)             /*!< CIDSCHG (Bit 28)                                      */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_CIDSCHG_Msk (0x10000000UL)     /*!< CIDSCHG (Bitfield-Mask: 0x01)                         */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_DISCINT_Pos (29UL)             /*!< DISCINT (Bit 29)                                      */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_DISCINT_Msk (0x20000000UL)     /*!< DISCINT (Bitfield-Mask: 0x01)                         */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_SRQINT_Pos (30UL)              /*!< SRQINT (Bit 30)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_SRQINT_Msk (0x40000000UL)      /*!< SRQINT (Bitfield-Mask: 0x01)                          */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_WKUINT_Pos (31UL)              /*!< WKUINT (Bit 31)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GINTSTS_WKUINT_Msk (0x80000000UL)      /*!< WKUINT (Bitfield-Mask: 0x01)                          */
/* ====================================================  OTG_HS_GINTMSK  ===================================================== */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_MMISM_Pos (1UL)                /*!< MMISM (Bit 1)                                         */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_MMISM_Msk (0x2UL)              /*!< MMISM (Bitfield-Mask: 0x01)                           */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_OTGINT_Pos (2UL)               /*!< OTGINT (Bit 2)                                        */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_OTGINT_Msk (0x4UL)             /*!< OTGINT (Bitfield-Mask: 0x01)                          */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_SOFM_Pos (3UL)                 /*!< SOFM (Bit 3)                                          */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_SOFM_Msk (0x8UL)               /*!< SOFM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_RXFLVLM_Pos (4UL)              /*!< RXFLVLM (Bit 4)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_RXFLVLM_Msk (0x10UL)           /*!< RXFLVLM (Bitfield-Mask: 0x01)                         */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_NPTXFEM_Pos (5UL)              /*!< NPTXFEM (Bit 5)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_NPTXFEM_Msk (0x20UL)           /*!< NPTXFEM (Bitfield-Mask: 0x01)                         */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_GINAKEFFM_Pos (6UL)            /*!< GINAKEFFM (Bit 6)                                     */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_GINAKEFFM_Msk (0x40UL)         /*!< GINAKEFFM (Bitfield-Mask: 0x01)                       */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_GONAKEFFM_Pos (7UL)            /*!< GONAKEFFM (Bit 7)                                     */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_GONAKEFFM_Msk (0x80UL)         /*!< GONAKEFFM (Bitfield-Mask: 0x01)                       */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_ESUSPM_Pos (10UL)              /*!< ESUSPM (Bit 10)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_ESUSPM_Msk (0x400UL)           /*!< ESUSPM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_USBSUSPM_Pos (11UL)            /*!< USBSUSPM (Bit 11)                                     */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_USBSUSPM_Msk (0x800UL)         /*!< USBSUSPM (Bitfield-Mask: 0x01)                        */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_USBRST_Pos (12UL)              /*!< USBRST (Bit 12)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_USBRST_Msk (0x1000UL)          /*!< USBRST (Bitfield-Mask: 0x01)                          */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_ENUMDNEM_Pos (13UL)            /*!< ENUMDNEM (Bit 13)                                     */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_ENUMDNEM_Msk (0x2000UL)        /*!< ENUMDNEM (Bitfield-Mask: 0x01)                        */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_ISOODRPM_Pos (14UL)            /*!< ISOODRPM (Bit 14)                                     */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_ISOODRPM_Msk (0x4000UL)        /*!< ISOODRPM (Bitfield-Mask: 0x01)                        */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_EOPFM_Pos (15UL)               /*!< EOPFM (Bit 15)                                        */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_EOPFM_Msk (0x8000UL)           /*!< EOPFM (Bitfield-Mask: 0x01)                           */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_IEPINT_Pos (18UL)              /*!< IEPINT (Bit 18)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_IEPINT_Msk (0x40000UL)         /*!< IEPINT (Bitfield-Mask: 0x01)                          */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_OEPINT_Pos (19UL)              /*!< OEPINT (Bit 19)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_OEPINT_Msk (0x80000UL)         /*!< OEPINT (Bitfield-Mask: 0x01)                          */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_IISOIXFRM_Pos (20UL)           /*!< IISOIXFRM (Bit 20)                                    */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_IISOIXFRM_Msk (0x100000UL)     /*!< IISOIXFRM (Bitfield-Mask: 0x01)                       */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_PXFRM_IISOOXFRM_Pos (21UL)     /*!< PXFRM_IISOOXFRM (Bit 21)                              */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_PXFRM_IISOOXFRM_Msk (0x200000UL) /*!< PXFRM_IISOOXFRM (Bitfield-Mask: 0x01)               */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_FSUSPM_Pos (22UL)              /*!< FSUSPM (Bit 22)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_FSUSPM_Msk (0x400000UL)        /*!< FSUSPM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_PRTIM_Pos (24UL)               /*!< PRTIM (Bit 24)                                        */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_PRTIM_Msk (0x1000000UL)        /*!< PRTIM (Bitfield-Mask: 0x01)                           */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_HCIM_Pos (25UL)                /*!< HCIM (Bit 25)                                         */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_HCIM_Msk (0x2000000UL)         /*!< HCIM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_PTXFEM_Pos (26UL)              /*!< PTXFEM (Bit 26)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_PTXFEM_Msk (0x4000000UL)       /*!< PTXFEM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_CIDSCHGM_Pos (28UL)            /*!< CIDSCHGM (Bit 28)                                     */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_CIDSCHGM_Msk (0x10000000UL)    /*!< CIDSCHGM (Bitfield-Mask: 0x01)                        */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_DISCINT_Pos (29UL)             /*!< DISCINT (Bit 29)                                      */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_DISCINT_Msk (0x20000000UL)     /*!< DISCINT (Bitfield-Mask: 0x01)                         */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_SRQIM_Pos (30UL)               /*!< SRQIM (Bit 30)                                        */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_SRQIM_Msk (0x40000000UL)       /*!< SRQIM (Bitfield-Mask: 0x01)                           */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_WUIM_Pos (31UL)                /*!< WUIM (Bit 31)                                         */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_WUIM_Msk (0x80000000UL)        /*!< WUIM (Bitfield-Mask: 0x01)                            */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_RSTDE_Pos (23UL)               /*!< RSTDE (Bit 23)                                        */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_RSTDE_Msk (0x800000UL)         /*!< RSTDE (Bitfield-Mask: 0x01)                           */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_LPMINTM_Pos (27UL)             /*!< LPMINTM (Bit 27)                                      */
#define OTG_HS_GLOBAL_OTG_HS_GINTMSK_LPMINTM_Msk (0x8000000UL)      /*!< LPMINTM (Bitfield-Mask: 0x01)                         */
/* ==================================================  OTG_HS_GRXSTSR_Host  ================================================== */
#define OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Host_CHNUM_Pos (0UL)           /*!< CHNUM (Bit 0)                                         */
#define OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Host_CHNUM_Msk (0xfUL)         /*!< CHNUM (Bitfield-Mask: 0x0f)                           */
#define OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Host_BCNT_Pos (4UL)            /*!< BCNT (Bit 4)                                          */
#define OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Host_BCNT_Msk (0x7ff0UL)       /*!< BCNT (Bitfield-Mask: 0x7ff)                           */
#define OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Host_DPID_Pos (15UL)           /*!< DPID (Bit 15)                                         */
#define OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Host_DPID_Msk (0x18000UL)      /*!< DPID (Bitfield-Mask: 0x03)                            */
#define OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Host_PKTSTS_Pos (17UL)         /*!< PKTSTS (Bit 17)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Host_PKTSTS_Msk (0x1e0000UL)   /*!< PKTSTS (Bitfield-Mask: 0x0f)                          */
/* ==================================================  OTG_HS_GRXSTSP_Host  ================================================== */
#define OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Host_CHNUM_Pos (0UL)           /*!< CHNUM (Bit 0)                                         */
#define OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Host_CHNUM_Msk (0xfUL)         /*!< CHNUM (Bitfield-Mask: 0x0f)                           */
#define OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Host_BCNT_Pos (4UL)            /*!< BCNT (Bit 4)                                          */
#define OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Host_BCNT_Msk (0x7ff0UL)       /*!< BCNT (Bitfield-Mask: 0x7ff)                           */
#define OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Host_DPID_Pos (15UL)           /*!< DPID (Bit 15)                                         */
#define OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Host_DPID_Msk (0x18000UL)      /*!< DPID (Bitfield-Mask: 0x03)                            */
#define OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Host_PKTSTS_Pos (17UL)         /*!< PKTSTS (Bit 17)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Host_PKTSTS_Msk (0x1e0000UL)   /*!< PKTSTS (Bitfield-Mask: 0x0f)                          */
/* ====================================================  OTG_HS_GRXFSIZ  ===================================================== */
#define OTG_HS_GLOBAL_OTG_HS_GRXFSIZ_RXFD_Pos (0UL)                 /*!< RXFD (Bit 0)                                          */
#define OTG_HS_GLOBAL_OTG_HS_GRXFSIZ_RXFD_Msk (0xffffUL)            /*!< RXFD (Bitfield-Mask: 0xffff)                          */
/* =================================================  OTG_HS_HNPTXFSIZ_Host  ================================================= */
#define OTG_HS_GLOBAL_OTG_HS_HNPTXFSIZ_Host_NPTXFSA_Pos (0UL)       /*!< NPTXFSA (Bit 0)                                       */
#define OTG_HS_GLOBAL_OTG_HS_HNPTXFSIZ_Host_NPTXFSA_Msk (0xffffUL)  /*!< NPTXFSA (Bitfield-Mask: 0xffff)                       */
#define OTG_HS_GLOBAL_OTG_HS_HNPTXFSIZ_Host_NPTXFD_Pos (16UL)       /*!< NPTXFD (Bit 16)                                       */
#define OTG_HS_GLOBAL_OTG_HS_HNPTXFSIZ_Host_NPTXFD_Msk (0xffff0000UL) /*!< NPTXFD (Bitfield-Mask: 0xffff)                      */
/* ================================================  OTG_HS_DIEPTXF0_Device  ================================================= */
#define OTG_HS_GLOBAL_OTG_HS_DIEPTXF0_Device_TX0FSA_Pos (0UL)       /*!< TX0FSA (Bit 0)                                        */
#define OTG_HS_GLOBAL_OTG_HS_DIEPTXF0_Device_TX0FSA_Msk (0xffffUL)  /*!< TX0FSA (Bitfield-Mask: 0xffff)                        */
#define OTG_HS_GLOBAL_OTG_HS_DIEPTXF0_Device_TX0FD_Pos (16UL)       /*!< TX0FD (Bit 16)                                        */
#define OTG_HS_GLOBAL_OTG_HS_DIEPTXF0_Device_TX0FD_Msk (0xffff0000UL) /*!< TX0FD (Bitfield-Mask: 0xffff)                       */
/* ====================================================  OTG_HS_GNPTXSTS  ==================================================== */
#define OTG_HS_GLOBAL_OTG_HS_GNPTXSTS_NPTXFSAV_Pos (0UL)            /*!< NPTXFSAV (Bit 0)                                      */
#define OTG_HS_GLOBAL_OTG_HS_GNPTXSTS_NPTXFSAV_Msk (0xffffUL)       /*!< NPTXFSAV (Bitfield-Mask: 0xffff)                      */
#define OTG_HS_GLOBAL_OTG_HS_GNPTXSTS_NPTQXSAV_Pos (16UL)           /*!< NPTQXSAV (Bit 16)                                     */
#define OTG_HS_GLOBAL_OTG_HS_GNPTXSTS_NPTQXSAV_Msk (0xff0000UL)     /*!< NPTQXSAV (Bitfield-Mask: 0xff)                        */
#define OTG_HS_GLOBAL_OTG_HS_GNPTXSTS_NPTXQTOP_Pos (24UL)           /*!< NPTXQTOP (Bit 24)                                     */
#define OTG_HS_GLOBAL_OTG_HS_GNPTXSTS_NPTXQTOP_Msk (0x7f000000UL)   /*!< NPTXQTOP (Bitfield-Mask: 0x7f)                        */
/* =====================================================  OTG_HS_GCCFG  ====================================================== */
#define OTG_HS_GLOBAL_OTG_HS_GCCFG_PWRDWN_Pos (16UL)                /*!< PWRDWN (Bit 16)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GCCFG_PWRDWN_Msk (0x10000UL)           /*!< PWRDWN (Bitfield-Mask: 0x01)                          */
#define OTG_HS_GLOBAL_OTG_HS_GCCFG_BCDEN_Pos (17UL)                 /*!< BCDEN (Bit 17)                                        */
#define OTG_HS_GLOBAL_OTG_HS_GCCFG_BCDEN_Msk (0x20000UL)            /*!< BCDEN (Bitfield-Mask: 0x01)                           */
#define OTG_HS_GLOBAL_OTG_HS_GCCFG_DCDEN_Pos (18UL)                 /*!< DCDEN (Bit 18)                                        */
#define OTG_HS_GLOBAL_OTG_HS_GCCFG_DCDEN_Msk (0x40000UL)            /*!< DCDEN (Bitfield-Mask: 0x01)                           */
#define OTG_HS_GLOBAL_OTG_HS_GCCFG_PDEN_Pos (19UL)                  /*!< PDEN (Bit 19)                                         */
#define OTG_HS_GLOBAL_OTG_HS_GCCFG_PDEN_Msk (0x80000UL)             /*!< PDEN (Bitfield-Mask: 0x01)                            */
#define OTG_HS_GLOBAL_OTG_HS_GCCFG_SDEN_Pos (20UL)                  /*!< SDEN (Bit 20)                                         */
#define OTG_HS_GLOBAL_OTG_HS_GCCFG_SDEN_Msk (0x100000UL)            /*!< SDEN (Bitfield-Mask: 0x01)                            */
#define OTG_HS_GLOBAL_OTG_HS_GCCFG_VBDEN_Pos (21UL)                 /*!< VBDEN (Bit 21)                                        */
#define OTG_HS_GLOBAL_OTG_HS_GCCFG_VBDEN_Msk (0x200000UL)           /*!< VBDEN (Bitfield-Mask: 0x01)                           */
#define OTG_HS_GLOBAL_OTG_HS_GCCFG_DCDET_Pos (0UL)                  /*!< DCDET (Bit 0)                                         */
#define OTG_HS_GLOBAL_OTG_HS_GCCFG_DCDET_Msk (0x1UL)                /*!< DCDET (Bitfield-Mask: 0x01)                           */
#define OTG_HS_GLOBAL_OTG_HS_GCCFG_PDET_Pos (1UL)                   /*!< PDET (Bit 1)                                          */
#define OTG_HS_GLOBAL_OTG_HS_GCCFG_PDET_Msk (0x2UL)                 /*!< PDET (Bitfield-Mask: 0x01)                            */
#define OTG_HS_GLOBAL_OTG_HS_GCCFG_SDET_Pos (2UL)                   /*!< SDET (Bit 2)                                          */
#define OTG_HS_GLOBAL_OTG_HS_GCCFG_SDET_Msk (0x4UL)                 /*!< SDET (Bitfield-Mask: 0x01)                            */
#define OTG_HS_GLOBAL_OTG_HS_GCCFG_PS2DET_Pos (3UL)                 /*!< PS2DET (Bit 3)                                        */
#define OTG_HS_GLOBAL_OTG_HS_GCCFG_PS2DET_Msk (0x8UL)               /*!< PS2DET (Bitfield-Mask: 0x01)                          */
/* ======================================================  OTG_HS_CID  ======================================================= */
#define OTG_HS_GLOBAL_OTG_HS_CID_PRODUCT_ID_Pos (0UL)               /*!< PRODUCT_ID (Bit 0)                                    */
#define OTG_HS_GLOBAL_OTG_HS_CID_PRODUCT_ID_Msk (0xffffffffUL)      /*!< PRODUCT_ID (Bitfield-Mask: 0xffffffff)                */
/* ====================================================  OTG_HS_HPTXFSIZ  ==================================================== */
#define OTG_HS_GLOBAL_OTG_HS_HPTXFSIZ_PTXSA_Pos (0UL)               /*!< PTXSA (Bit 0)                                         */
#define OTG_HS_GLOBAL_OTG_HS_HPTXFSIZ_PTXSA_Msk (0xffffUL)          /*!< PTXSA (Bitfield-Mask: 0xffff)                         */
#define OTG_HS_GLOBAL_OTG_HS_HPTXFSIZ_PTXFD_Pos (16UL)              /*!< PTXFD (Bit 16)                                        */
#define OTG_HS_GLOBAL_OTG_HS_HPTXFSIZ_PTXFD_Msk (0xffff0000UL)      /*!< PTXFD (Bitfield-Mask: 0xffff)                         */
/* ====================================================  OTG_HS_DIEPTXF1  ==================================================== */
#define OTG_HS_GLOBAL_OTG_HS_DIEPTXF1_INEPTXSA_Pos (0UL)            /*!< INEPTXSA (Bit 0)                                      */
#define OTG_HS_GLOBAL_OTG_HS_DIEPTXF1_INEPTXSA_Msk (0xffffUL)       /*!< INEPTXSA (Bitfield-Mask: 0xffff)                      */
#define OTG_HS_GLOBAL_OTG_HS_DIEPTXF1_INEPTXFD_Pos (16UL)           /*!< INEPTXFD (Bit 16)                                     */
#define OTG_HS_GLOBAL_OTG_HS_DIEPTXF1_INEPTXFD_Msk (0xffff0000UL)   /*!< INEPTXFD (Bitfield-Mask: 0xffff)                      */
/* ====================================================  OTG_HS_DIEPTXF2  ==================================================== */
#define OTG_HS_GLOBAL_OTG_HS_DIEPTXF2_INEPTXSA_Pos (0UL)            /*!< INEPTXSA (Bit 0)                                      */
#define OTG_HS_GLOBAL_OTG_HS_DIEPTXF2_INEPTXSA_Msk (0xffffUL)       /*!< INEPTXSA (Bitfield-Mask: 0xffff)                      */
#define OTG_HS_GLOBAL_OTG_HS_DIEPTXF2_INEPTXFD_Pos (16UL)           /*!< INEPTXFD (Bit 16)                                     */
#define OTG_HS_GLOBAL_OTG_HS_DIEPTXF2_INEPTXFD_Msk (0xffff0000UL)   /*!< INEPTXFD (Bitfield-Mask: 0xffff)                      */
/* ====================================================  OTG_HS_DIEPTXF3  ==================================================== */
#define OTG_HS_GLOBAL_OTG_HS_DIEPTXF3_INEPTXSA_Pos (0UL)            /*!< INEPTXSA (Bit 0)                                      */
#define OTG_HS_GLOBAL_OTG_HS_DIEPTXF3_INEPTXSA_Msk (0xffffUL)       /*!< INEPTXSA (Bitfield-Mask: 0xffff)                      */
#define OTG_HS_GLOBAL_OTG_HS_DIEPTXF3_INEPTXFD_Pos (16UL)           /*!< INEPTXFD (Bit 16)                                     */
#define OTG_HS_GLOBAL_OTG_HS_DIEPTXF3_INEPTXFD_Msk (0xffff0000UL)   /*!< INEPTXFD (Bitfield-Mask: 0xffff)                      */
/* ====================================================  OTG_HS_DIEPTXF4  ==================================================== */
#define OTG_HS_GLOBAL_OTG_HS_DIEPTXF4_INEPTXSA_Pos (0UL)            /*!< INEPTXSA (Bit 0)                                      */
#define OTG_HS_GLOBAL_OTG_HS_DIEPTXF4_INEPTXSA_Msk (0xffffUL)       /*!< INEPTXSA (Bitfield-Mask: 0xffff)                      */
#define OTG_HS_GLOBAL_OTG_HS_DIEPTXF4_INEPTXFD_Pos (16UL)           /*!< INEPTXFD (Bit 16)                                     */
#define OTG_HS_GLOBAL_OTG_HS_DIEPTXF4_INEPTXFD_Msk (0xffff0000UL)   /*!< INEPTXFD (Bitfield-Mask: 0xffff)                      */
/* ====================================================  OTG_HS_DIEPTXF5  ==================================================== */
#define OTG_HS_GLOBAL_OTG_HS_DIEPTXF5_INEPTXSA_Pos (0UL)            /*!< INEPTXSA (Bit 0)                                      */
#define OTG_HS_GLOBAL_OTG_HS_DIEPTXF5_INEPTXSA_Msk (0xffffUL)       /*!< INEPTXSA (Bitfield-Mask: 0xffff)                      */
#define OTG_HS_GLOBAL_OTG_HS_DIEPTXF5_INEPTXFD_Pos (16UL)           /*!< INEPTXFD (Bit 16)                                     */
#define OTG_HS_GLOBAL_OTG_HS_DIEPTXF5_INEPTXFD_Msk (0xffff0000UL)   /*!< INEPTXFD (Bitfield-Mask: 0xffff)                      */
/* ====================================================  OTG_HS_DIEPTXF6  ==================================================== */
#define OTG_HS_GLOBAL_OTG_HS_DIEPTXF6_INEPTXSA_Pos (0UL)            /*!< INEPTXSA (Bit 0)                                      */
#define OTG_HS_GLOBAL_OTG_HS_DIEPTXF6_INEPTXSA_Msk (0xffffUL)       /*!< INEPTXSA (Bitfield-Mask: 0xffff)                      */
#define OTG_HS_GLOBAL_OTG_HS_DIEPTXF6_INEPTXFD_Pos (16UL)           /*!< INEPTXFD (Bit 16)                                     */
#define OTG_HS_GLOBAL_OTG_HS_DIEPTXF6_INEPTXFD_Msk (0xffff0000UL)   /*!< INEPTXFD (Bitfield-Mask: 0xffff)                      */
/* ====================================================  OTG_HS_DIEPTXF7  ==================================================== */
#define OTG_HS_GLOBAL_OTG_HS_DIEPTXF7_INEPTXSA_Pos (0UL)            /*!< INEPTXSA (Bit 0)                                      */
#define OTG_HS_GLOBAL_OTG_HS_DIEPTXF7_INEPTXSA_Msk (0xffffUL)       /*!< INEPTXSA (Bitfield-Mask: 0xffff)                      */
#define OTG_HS_GLOBAL_OTG_HS_DIEPTXF7_INEPTXFD_Pos (16UL)           /*!< INEPTXFD (Bit 16)                                     */
#define OTG_HS_GLOBAL_OTG_HS_DIEPTXF7_INEPTXFD_Msk (0xffff0000UL)   /*!< INEPTXFD (Bitfield-Mask: 0xffff)                      */
/* =================================================  OTG_HS_GRXSTSR_Device  ================================================= */
#define OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Device_EPNUM_Pos (0UL)         /*!< EPNUM (Bit 0)                                         */
#define OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Device_EPNUM_Msk (0xfUL)       /*!< EPNUM (Bitfield-Mask: 0x0f)                           */
#define OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Device_BCNT_Pos (4UL)          /*!< BCNT (Bit 4)                                          */
#define OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Device_BCNT_Msk (0x7ff0UL)     /*!< BCNT (Bitfield-Mask: 0x7ff)                           */
#define OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Device_DPID_Pos (15UL)         /*!< DPID (Bit 15)                                         */
#define OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Device_DPID_Msk (0x18000UL)    /*!< DPID (Bitfield-Mask: 0x03)                            */
#define OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Device_PKTSTS_Pos (17UL)       /*!< PKTSTS (Bit 17)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Device_PKTSTS_Msk (0x1e0000UL) /*!< PKTSTS (Bitfield-Mask: 0x0f)                          */
#define OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Device_FRMNUM_Pos (21UL)       /*!< FRMNUM (Bit 21)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Device_FRMNUM_Msk (0x1e00000UL) /*!< FRMNUM (Bitfield-Mask: 0x0f)                         */
/* =================================================  OTG_HS_GRXSTSP_Device  ================================================= */
#define OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Device_EPNUM_Pos (0UL)         /*!< EPNUM (Bit 0)                                         */
#define OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Device_EPNUM_Msk (0xfUL)       /*!< EPNUM (Bitfield-Mask: 0x0f)                           */
#define OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Device_BCNT_Pos (4UL)          /*!< BCNT (Bit 4)                                          */
#define OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Device_BCNT_Msk (0x7ff0UL)     /*!< BCNT (Bitfield-Mask: 0x7ff)                           */
#define OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Device_DPID_Pos (15UL)         /*!< DPID (Bit 15)                                         */
#define OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Device_DPID_Msk (0x18000UL)    /*!< DPID (Bitfield-Mask: 0x03)                            */
#define OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Device_PKTSTS_Pos (17UL)       /*!< PKTSTS (Bit 17)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Device_PKTSTS_Msk (0x1e0000UL) /*!< PKTSTS (Bitfield-Mask: 0x0f)                          */
#define OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Device_FRMNUM_Pos (21UL)       /*!< FRMNUM (Bit 21)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Device_FRMNUM_Msk (0x1e00000UL) /*!< FRMNUM (Bitfield-Mask: 0x0f)                         */
/* ====================================================  OTG_HS_GLPMCFG  ===================================================== */
#define OTG_HS_GLOBAL_OTG_HS_GLPMCFG_LPMEN_Pos (0UL)                /*!< LPMEN (Bit 0)                                         */
#define OTG_HS_GLOBAL_OTG_HS_GLPMCFG_LPMEN_Msk (0x1UL)              /*!< LPMEN (Bitfield-Mask: 0x01)                           */
#define OTG_HS_GLOBAL_OTG_HS_GLPMCFG_LPMACK_Pos (1UL)               /*!< LPMACK (Bit 1)                                        */
#define OTG_HS_GLOBAL_OTG_HS_GLPMCFG_LPMACK_Msk (0x2UL)             /*!< LPMACK (Bitfield-Mask: 0x01)                          */
#define OTG_HS_GLOBAL_OTG_HS_GLPMCFG_BESL_Pos (2UL)                 /*!< BESL (Bit 2)                                          */
#define OTG_HS_GLOBAL_OTG_HS_GLPMCFG_BESL_Msk (0x3cUL)              /*!< BESL (Bitfield-Mask: 0x0f)                            */
#define OTG_HS_GLOBAL_OTG_HS_GLPMCFG_REMWAKE_Pos (6UL)              /*!< REMWAKE (Bit 6)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GLPMCFG_REMWAKE_Msk (0x40UL)           /*!< REMWAKE (Bitfield-Mask: 0x01)                         */
#define OTG_HS_GLOBAL_OTG_HS_GLPMCFG_L1SSEN_Pos (7UL)               /*!< L1SSEN (Bit 7)                                        */
#define OTG_HS_GLOBAL_OTG_HS_GLPMCFG_L1SSEN_Msk (0x80UL)            /*!< L1SSEN (Bitfield-Mask: 0x01)                          */
#define OTG_HS_GLOBAL_OTG_HS_GLPMCFG_BESLTHRS_Pos (8UL)             /*!< BESLTHRS (Bit 8)                                      */
#define OTG_HS_GLOBAL_OTG_HS_GLPMCFG_BESLTHRS_Msk (0xf00UL)         /*!< BESLTHRS (Bitfield-Mask: 0x0f)                        */
#define OTG_HS_GLOBAL_OTG_HS_GLPMCFG_L1DSEN_Pos (12UL)              /*!< L1DSEN (Bit 12)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GLPMCFG_L1DSEN_Msk (0x1000UL)          /*!< L1DSEN (Bitfield-Mask: 0x01)                          */
#define OTG_HS_GLOBAL_OTG_HS_GLPMCFG_LPMRST_Pos (13UL)              /*!< LPMRST (Bit 13)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GLPMCFG_LPMRST_Msk (0x6000UL)          /*!< LPMRST (Bitfield-Mask: 0x03)                          */
#define OTG_HS_GLOBAL_OTG_HS_GLPMCFG_SLPSTS_Pos (15UL)              /*!< SLPSTS (Bit 15)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GLPMCFG_SLPSTS_Msk (0x8000UL)          /*!< SLPSTS (Bitfield-Mask: 0x01)                          */
#define OTG_HS_GLOBAL_OTG_HS_GLPMCFG_L1RSMOK_Pos (16UL)             /*!< L1RSMOK (Bit 16)                                      */
#define OTG_HS_GLOBAL_OTG_HS_GLPMCFG_L1RSMOK_Msk (0x10000UL)        /*!< L1RSMOK (Bitfield-Mask: 0x01)                         */
#define OTG_HS_GLOBAL_OTG_HS_GLPMCFG_LPMCHIDX_Pos (17UL)            /*!< LPMCHIDX (Bit 17)                                     */
#define OTG_HS_GLOBAL_OTG_HS_GLPMCFG_LPMCHIDX_Msk (0x1e0000UL)      /*!< LPMCHIDX (Bitfield-Mask: 0x0f)                        */
#define OTG_HS_GLOBAL_OTG_HS_GLPMCFG_LPMRCNT_Pos (21UL)             /*!< LPMRCNT (Bit 21)                                      */
#define OTG_HS_GLOBAL_OTG_HS_GLPMCFG_LPMRCNT_Msk (0xe00000UL)       /*!< LPMRCNT (Bitfield-Mask: 0x07)                         */
#define OTG_HS_GLOBAL_OTG_HS_GLPMCFG_SNDLPM_Pos (24UL)              /*!< SNDLPM (Bit 24)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GLPMCFG_SNDLPM_Msk (0x1000000UL)       /*!< SNDLPM (Bitfield-Mask: 0x01)                          */
#define OTG_HS_GLOBAL_OTG_HS_GLPMCFG_LPMRCNTSTS_Pos (25UL)          /*!< LPMRCNTSTS (Bit 25)                                   */
#define OTG_HS_GLOBAL_OTG_HS_GLPMCFG_LPMRCNTSTS_Msk (0xe000000UL)   /*!< LPMRCNTSTS (Bitfield-Mask: 0x07)                      */
#define OTG_HS_GLOBAL_OTG_HS_GLPMCFG_ENBESL_Pos (28UL)              /*!< ENBESL (Bit 28)                                       */
#define OTG_HS_GLOBAL_OTG_HS_GLPMCFG_ENBESL_Msk (0x10000000UL)      /*!< ENBESL (Bitfield-Mask: 0x01)                          */


/* =========================================================================================================================== */
/* ================                                       OTG_FS_GLOBAL                                       ================ */
/* =========================================================================================================================== */

/* ====================================================  OTG_FS_GOTGCTL  ===================================================== */
#define OTG_FS_GLOBAL_OTG_FS_GOTGCTL_SRQSCS_Pos (0UL)               /*!< SRQSCS (Bit 0)                                        */
#define OTG_FS_GLOBAL_OTG_FS_GOTGCTL_SRQSCS_Msk (0x1UL)             /*!< SRQSCS (Bitfield-Mask: 0x01)                          */
#define OTG_FS_GLOBAL_OTG_FS_GOTGCTL_SRQ_Pos (1UL)                  /*!< SRQ (Bit 1)                                           */
#define OTG_FS_GLOBAL_OTG_FS_GOTGCTL_SRQ_Msk (0x2UL)                /*!< SRQ (Bitfield-Mask: 0x01)                             */
#define OTG_FS_GLOBAL_OTG_FS_GOTGCTL_HNGSCS_Pos (8UL)               /*!< HNGSCS (Bit 8)                                        */
#define OTG_FS_GLOBAL_OTG_FS_GOTGCTL_HNGSCS_Msk (0x100UL)           /*!< HNGSCS (Bitfield-Mask: 0x01)                          */
#define OTG_FS_GLOBAL_OTG_FS_GOTGCTL_HNPRQ_Pos (9UL)                /*!< HNPRQ (Bit 9)                                         */
#define OTG_FS_GLOBAL_OTG_FS_GOTGCTL_HNPRQ_Msk (0x200UL)            /*!< HNPRQ (Bitfield-Mask: 0x01)                           */
#define OTG_FS_GLOBAL_OTG_FS_GOTGCTL_HSHNPEN_Pos (10UL)             /*!< HSHNPEN (Bit 10)                                      */
#define OTG_FS_GLOBAL_OTG_FS_GOTGCTL_HSHNPEN_Msk (0x400UL)          /*!< HSHNPEN (Bitfield-Mask: 0x01)                         */
#define OTG_FS_GLOBAL_OTG_FS_GOTGCTL_DHNPEN_Pos (11UL)              /*!< DHNPEN (Bit 11)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GOTGCTL_DHNPEN_Msk (0x800UL)           /*!< DHNPEN (Bitfield-Mask: 0x01)                          */
#define OTG_FS_GLOBAL_OTG_FS_GOTGCTL_CIDSTS_Pos (16UL)              /*!< CIDSTS (Bit 16)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GOTGCTL_CIDSTS_Msk (0x10000UL)         /*!< CIDSTS (Bitfield-Mask: 0x01)                          */
#define OTG_FS_GLOBAL_OTG_FS_GOTGCTL_DBCT_Pos (17UL)                /*!< DBCT (Bit 17)                                         */
#define OTG_FS_GLOBAL_OTG_FS_GOTGCTL_DBCT_Msk (0x20000UL)           /*!< DBCT (Bitfield-Mask: 0x01)                            */
#define OTG_FS_GLOBAL_OTG_FS_GOTGCTL_ASVLD_Pos (18UL)               /*!< ASVLD (Bit 18)                                        */
#define OTG_FS_GLOBAL_OTG_FS_GOTGCTL_ASVLD_Msk (0x40000UL)          /*!< ASVLD (Bitfield-Mask: 0x01)                           */
#define OTG_FS_GLOBAL_OTG_FS_GOTGCTL_BSVLD_Pos (19UL)               /*!< BSVLD (Bit 19)                                        */
#define OTG_FS_GLOBAL_OTG_FS_GOTGCTL_BSVLD_Msk (0x80000UL)          /*!< BSVLD (Bitfield-Mask: 0x01)                           */
#define OTG_FS_GLOBAL_OTG_FS_GOTGCTL_VBVALOEN_Pos (2UL)             /*!< VBVALOEN (Bit 2)                                      */
#define OTG_FS_GLOBAL_OTG_FS_GOTGCTL_VBVALOEN_Msk (0x4UL)           /*!< VBVALOEN (Bitfield-Mask: 0x01)                        */
#define OTG_FS_GLOBAL_OTG_FS_GOTGCTL_VBVALOVAL_Pos (3UL)            /*!< VBVALOVAL (Bit 3)                                     */
#define OTG_FS_GLOBAL_OTG_FS_GOTGCTL_VBVALOVAL_Msk (0x8UL)          /*!< VBVALOVAL (Bitfield-Mask: 0x01)                       */
#define OTG_FS_GLOBAL_OTG_FS_GOTGCTL_AVALOEN_Pos (4UL)              /*!< AVALOEN (Bit 4)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GOTGCTL_AVALOEN_Msk (0x10UL)           /*!< AVALOEN (Bitfield-Mask: 0x01)                         */
#define OTG_FS_GLOBAL_OTG_FS_GOTGCTL_AVALOVAL_Pos (5UL)             /*!< AVALOVAL (Bit 5)                                      */
#define OTG_FS_GLOBAL_OTG_FS_GOTGCTL_AVALOVAL_Msk (0x20UL)          /*!< AVALOVAL (Bitfield-Mask: 0x01)                        */
#define OTG_FS_GLOBAL_OTG_FS_GOTGCTL_BVALOEN_Pos (6UL)              /*!< BVALOEN (Bit 6)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GOTGCTL_BVALOEN_Msk (0x40UL)           /*!< BVALOEN (Bitfield-Mask: 0x01)                         */
#define OTG_FS_GLOBAL_OTG_FS_GOTGCTL_BVALOVAL_Pos (7UL)             /*!< BVALOVAL (Bit 7)                                      */
#define OTG_FS_GLOBAL_OTG_FS_GOTGCTL_BVALOVAL_Msk (0x80UL)          /*!< BVALOVAL (Bitfield-Mask: 0x01)                        */
#define OTG_FS_GLOBAL_OTG_FS_GOTGCTL_EHEN_Pos (12UL)                /*!< EHEN (Bit 12)                                         */
#define OTG_FS_GLOBAL_OTG_FS_GOTGCTL_EHEN_Msk (0x1000UL)            /*!< EHEN (Bitfield-Mask: 0x01)                            */
#define OTG_FS_GLOBAL_OTG_FS_GOTGCTL_OTGVER_Pos (20UL)              /*!< OTGVER (Bit 20)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GOTGCTL_OTGVER_Msk (0x100000UL)        /*!< OTGVER (Bitfield-Mask: 0x01)                          */
/* ====================================================  OTG_FS_GOTGINT  ===================================================== */
#define OTG_FS_GLOBAL_OTG_FS_GOTGINT_SEDET_Pos (2UL)                /*!< SEDET (Bit 2)                                         */
#define OTG_FS_GLOBAL_OTG_FS_GOTGINT_SEDET_Msk (0x4UL)              /*!< SEDET (Bitfield-Mask: 0x01)                           */
#define OTG_FS_GLOBAL_OTG_FS_GOTGINT_SRSSCHG_Pos (8UL)              /*!< SRSSCHG (Bit 8)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GOTGINT_SRSSCHG_Msk (0x100UL)          /*!< SRSSCHG (Bitfield-Mask: 0x01)                         */
#define OTG_FS_GLOBAL_OTG_FS_GOTGINT_HNSSCHG_Pos (9UL)              /*!< HNSSCHG (Bit 9)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GOTGINT_HNSSCHG_Msk (0x200UL)          /*!< HNSSCHG (Bitfield-Mask: 0x01)                         */
#define OTG_FS_GLOBAL_OTG_FS_GOTGINT_HNGDET_Pos (17UL)              /*!< HNGDET (Bit 17)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GOTGINT_HNGDET_Msk (0x20000UL)         /*!< HNGDET (Bitfield-Mask: 0x01)                          */
#define OTG_FS_GLOBAL_OTG_FS_GOTGINT_ADTOCHG_Pos (18UL)             /*!< ADTOCHG (Bit 18)                                      */
#define OTG_FS_GLOBAL_OTG_FS_GOTGINT_ADTOCHG_Msk (0x40000UL)        /*!< ADTOCHG (Bitfield-Mask: 0x01)                         */
#define OTG_FS_GLOBAL_OTG_FS_GOTGINT_DBCDNE_Pos (19UL)              /*!< DBCDNE (Bit 19)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GOTGINT_DBCDNE_Msk (0x80000UL)         /*!< DBCDNE (Bitfield-Mask: 0x01)                          */
#define OTG_FS_GLOBAL_OTG_FS_GOTGINT_IDCHNG_Pos (20UL)              /*!< IDCHNG (Bit 20)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GOTGINT_IDCHNG_Msk (0x100000UL)        /*!< IDCHNG (Bitfield-Mask: 0x01)                          */
/* ====================================================  OTG_FS_GAHBCFG  ===================================================== */
#define OTG_FS_GLOBAL_OTG_FS_GAHBCFG_GINT_Pos (0UL)                 /*!< GINT (Bit 0)                                          */
#define OTG_FS_GLOBAL_OTG_FS_GAHBCFG_GINT_Msk (0x1UL)               /*!< GINT (Bitfield-Mask: 0x01)                            */
#define OTG_FS_GLOBAL_OTG_FS_GAHBCFG_TXFELVL_Pos (7UL)              /*!< TXFELVL (Bit 7)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GAHBCFG_TXFELVL_Msk (0x80UL)           /*!< TXFELVL (Bitfield-Mask: 0x01)                         */
#define OTG_FS_GLOBAL_OTG_FS_GAHBCFG_PTXFELVL_Pos (8UL)             /*!< PTXFELVL (Bit 8)                                      */
#define OTG_FS_GLOBAL_OTG_FS_GAHBCFG_PTXFELVL_Msk (0x100UL)         /*!< PTXFELVL (Bitfield-Mask: 0x01)                        */
/* ====================================================  OTG_FS_GUSBCFG  ===================================================== */
#define OTG_FS_GLOBAL_OTG_FS_GUSBCFG_TOCAL_Pos (0UL)                /*!< TOCAL (Bit 0)                                         */
#define OTG_FS_GLOBAL_OTG_FS_GUSBCFG_TOCAL_Msk (0x7UL)              /*!< TOCAL (Bitfield-Mask: 0x07)                           */
#define OTG_FS_GLOBAL_OTG_FS_GUSBCFG_PHYSEL_Pos (6UL)               /*!< PHYSEL (Bit 6)                                        */
#define OTG_FS_GLOBAL_OTG_FS_GUSBCFG_PHYSEL_Msk (0x40UL)            /*!< PHYSEL (Bitfield-Mask: 0x01)                          */
#define OTG_FS_GLOBAL_OTG_FS_GUSBCFG_SRPCAP_Pos (8UL)               /*!< SRPCAP (Bit 8)                                        */
#define OTG_FS_GLOBAL_OTG_FS_GUSBCFG_SRPCAP_Msk (0x100UL)           /*!< SRPCAP (Bitfield-Mask: 0x01)                          */
#define OTG_FS_GLOBAL_OTG_FS_GUSBCFG_HNPCAP_Pos (9UL)               /*!< HNPCAP (Bit 9)                                        */
#define OTG_FS_GLOBAL_OTG_FS_GUSBCFG_HNPCAP_Msk (0x200UL)           /*!< HNPCAP (Bitfield-Mask: 0x01)                          */
#define OTG_FS_GLOBAL_OTG_FS_GUSBCFG_TRDT_Pos (10UL)                /*!< TRDT (Bit 10)                                         */
#define OTG_FS_GLOBAL_OTG_FS_GUSBCFG_TRDT_Msk (0x3c00UL)            /*!< TRDT (Bitfield-Mask: 0x0f)                            */
#define OTG_FS_GLOBAL_OTG_FS_GUSBCFG_FHMOD_Pos (29UL)               /*!< FHMOD (Bit 29)                                        */
#define OTG_FS_GLOBAL_OTG_FS_GUSBCFG_FHMOD_Msk (0x20000000UL)       /*!< FHMOD (Bitfield-Mask: 0x01)                           */
#define OTG_FS_GLOBAL_OTG_FS_GUSBCFG_FDMOD_Pos (30UL)               /*!< FDMOD (Bit 30)                                        */
#define OTG_FS_GLOBAL_OTG_FS_GUSBCFG_FDMOD_Msk (0x40000000UL)       /*!< FDMOD (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_FS_GRSTCTL  ===================================================== */
#define OTG_FS_GLOBAL_OTG_FS_GRSTCTL_CSRST_Pos (0UL)                /*!< CSRST (Bit 0)                                         */
#define OTG_FS_GLOBAL_OTG_FS_GRSTCTL_CSRST_Msk (0x1UL)              /*!< CSRST (Bitfield-Mask: 0x01)                           */
#define OTG_FS_GLOBAL_OTG_FS_GRSTCTL_HSRST_Pos (1UL)                /*!< HSRST (Bit 1)                                         */
#define OTG_FS_GLOBAL_OTG_FS_GRSTCTL_HSRST_Msk (0x2UL)              /*!< HSRST (Bitfield-Mask: 0x01)                           */
#define OTG_FS_GLOBAL_OTG_FS_GRSTCTL_FCRST_Pos (2UL)                /*!< FCRST (Bit 2)                                         */
#define OTG_FS_GLOBAL_OTG_FS_GRSTCTL_FCRST_Msk (0x4UL)              /*!< FCRST (Bitfield-Mask: 0x01)                           */
#define OTG_FS_GLOBAL_OTG_FS_GRSTCTL_RXFFLSH_Pos (4UL)              /*!< RXFFLSH (Bit 4)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GRSTCTL_RXFFLSH_Msk (0x10UL)           /*!< RXFFLSH (Bitfield-Mask: 0x01)                         */
#define OTG_FS_GLOBAL_OTG_FS_GRSTCTL_TXFFLSH_Pos (5UL)              /*!< TXFFLSH (Bit 5)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GRSTCTL_TXFFLSH_Msk (0x20UL)           /*!< TXFFLSH (Bitfield-Mask: 0x01)                         */
#define OTG_FS_GLOBAL_OTG_FS_GRSTCTL_TXFNUM_Pos (6UL)               /*!< TXFNUM (Bit 6)                                        */
#define OTG_FS_GLOBAL_OTG_FS_GRSTCTL_TXFNUM_Msk (0x7c0UL)           /*!< TXFNUM (Bitfield-Mask: 0x1f)                          */
#define OTG_FS_GLOBAL_OTG_FS_GRSTCTL_AHBIDL_Pos (31UL)              /*!< AHBIDL (Bit 31)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GRSTCTL_AHBIDL_Msk (0x80000000UL)      /*!< AHBIDL (Bitfield-Mask: 0x01)                          */
/* ====================================================  OTG_FS_GINTSTS  ===================================================== */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_CMOD_Pos (0UL)                 /*!< CMOD (Bit 0)                                          */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_CMOD_Msk (0x1UL)               /*!< CMOD (Bitfield-Mask: 0x01)                            */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_MMIS_Pos (1UL)                 /*!< MMIS (Bit 1)                                          */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_MMIS_Msk (0x2UL)               /*!< MMIS (Bitfield-Mask: 0x01)                            */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_OTGINT_Pos (2UL)               /*!< OTGINT (Bit 2)                                        */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_OTGINT_Msk (0x4UL)             /*!< OTGINT (Bitfield-Mask: 0x01)                          */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_SOF_Pos (3UL)                  /*!< SOF (Bit 3)                                           */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_SOF_Msk (0x8UL)                /*!< SOF (Bitfield-Mask: 0x01)                             */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_RXFLVL_Pos (4UL)               /*!< RXFLVL (Bit 4)                                        */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_RXFLVL_Msk (0x10UL)            /*!< RXFLVL (Bitfield-Mask: 0x01)                          */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_NPTXFE_Pos (5UL)               /*!< NPTXFE (Bit 5)                                        */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_NPTXFE_Msk (0x20UL)            /*!< NPTXFE (Bitfield-Mask: 0x01)                          */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_GINAKEFF_Pos (6UL)             /*!< GINAKEFF (Bit 6)                                      */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_GINAKEFF_Msk (0x40UL)          /*!< GINAKEFF (Bitfield-Mask: 0x01)                        */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_GOUTNAKEFF_Pos (7UL)           /*!< GOUTNAKEFF (Bit 7)                                    */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_GOUTNAKEFF_Msk (0x80UL)        /*!< GOUTNAKEFF (Bitfield-Mask: 0x01)                      */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_ESUSP_Pos (10UL)               /*!< ESUSP (Bit 10)                                        */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_ESUSP_Msk (0x400UL)            /*!< ESUSP (Bitfield-Mask: 0x01)                           */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_USBSUSP_Pos (11UL)             /*!< USBSUSP (Bit 11)                                      */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_USBSUSP_Msk (0x800UL)          /*!< USBSUSP (Bitfield-Mask: 0x01)                         */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_USBRST_Pos (12UL)              /*!< USBRST (Bit 12)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_USBRST_Msk (0x1000UL)          /*!< USBRST (Bitfield-Mask: 0x01)                          */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_ENUMDNE_Pos (13UL)             /*!< ENUMDNE (Bit 13)                                      */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_ENUMDNE_Msk (0x2000UL)         /*!< ENUMDNE (Bitfield-Mask: 0x01)                         */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_ISOODRP_Pos (14UL)             /*!< ISOODRP (Bit 14)                                      */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_ISOODRP_Msk (0x4000UL)         /*!< ISOODRP (Bitfield-Mask: 0x01)                         */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_EOPF_Pos (15UL)                /*!< EOPF (Bit 15)                                         */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_EOPF_Msk (0x8000UL)            /*!< EOPF (Bitfield-Mask: 0x01)                            */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_IEPINT_Pos (18UL)              /*!< IEPINT (Bit 18)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_IEPINT_Msk (0x40000UL)         /*!< IEPINT (Bitfield-Mask: 0x01)                          */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_OEPINT_Pos (19UL)              /*!< OEPINT (Bit 19)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_OEPINT_Msk (0x80000UL)         /*!< OEPINT (Bitfield-Mask: 0x01)                          */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_IISOIXFR_Pos (20UL)            /*!< IISOIXFR (Bit 20)                                     */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_IISOIXFR_Msk (0x100000UL)      /*!< IISOIXFR (Bitfield-Mask: 0x01)                        */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_IPXFR_INCOMPISOOUT_Pos (21UL)  /*!< IPXFR_INCOMPISOOUT (Bit 21)                           */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_IPXFR_INCOMPISOOUT_Msk (0x200000UL) /*!< IPXFR_INCOMPISOOUT (Bitfield-Mask: 0x01)         */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_HPRTINT_Pos (24UL)             /*!< HPRTINT (Bit 24)                                      */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_HPRTINT_Msk (0x1000000UL)      /*!< HPRTINT (Bitfield-Mask: 0x01)                         */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_HCINT_Pos (25UL)               /*!< HCINT (Bit 25)                                        */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_HCINT_Msk (0x2000000UL)        /*!< HCINT (Bitfield-Mask: 0x01)                           */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_PTXFE_Pos (26UL)               /*!< PTXFE (Bit 26)                                        */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_PTXFE_Msk (0x4000000UL)        /*!< PTXFE (Bitfield-Mask: 0x01)                           */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_CIDSCHG_Pos (28UL)             /*!< CIDSCHG (Bit 28)                                      */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_CIDSCHG_Msk (0x10000000UL)     /*!< CIDSCHG (Bitfield-Mask: 0x01)                         */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_DISCINT_Pos (29UL)             /*!< DISCINT (Bit 29)                                      */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_DISCINT_Msk (0x20000000UL)     /*!< DISCINT (Bitfield-Mask: 0x01)                         */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_SRQINT_Pos (30UL)              /*!< SRQINT (Bit 30)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_SRQINT_Msk (0x40000000UL)      /*!< SRQINT (Bitfield-Mask: 0x01)                          */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_WKUPINT_Pos (31UL)             /*!< WKUPINT (Bit 31)                                      */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_WKUPINT_Msk (0x80000000UL)     /*!< WKUPINT (Bitfield-Mask: 0x01)                         */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_RSTDET_Pos (23UL)              /*!< RSTDET (Bit 23)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GINTSTS_RSTDET_Msk (0x800000UL)        /*!< RSTDET (Bitfield-Mask: 0x01)                          */
/* ====================================================  OTG_FS_GINTMSK  ===================================================== */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_MMISM_Pos (1UL)                /*!< MMISM (Bit 1)                                         */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_MMISM_Msk (0x2UL)              /*!< MMISM (Bitfield-Mask: 0x01)                           */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_OTGINT_Pos (2UL)               /*!< OTGINT (Bit 2)                                        */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_OTGINT_Msk (0x4UL)             /*!< OTGINT (Bitfield-Mask: 0x01)                          */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_SOFM_Pos (3UL)                 /*!< SOFM (Bit 3)                                          */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_SOFM_Msk (0x8UL)               /*!< SOFM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_RXFLVLM_Pos (4UL)              /*!< RXFLVLM (Bit 4)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_RXFLVLM_Msk (0x10UL)           /*!< RXFLVLM (Bitfield-Mask: 0x01)                         */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_NPTXFEM_Pos (5UL)              /*!< NPTXFEM (Bit 5)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_NPTXFEM_Msk (0x20UL)           /*!< NPTXFEM (Bitfield-Mask: 0x01)                         */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_GINAKEFFM_Pos (6UL)            /*!< GINAKEFFM (Bit 6)                                     */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_GINAKEFFM_Msk (0x40UL)         /*!< GINAKEFFM (Bitfield-Mask: 0x01)                       */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_GONAKEFFM_Pos (7UL)            /*!< GONAKEFFM (Bit 7)                                     */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_GONAKEFFM_Msk (0x80UL)         /*!< GONAKEFFM (Bitfield-Mask: 0x01)                       */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_ESUSPM_Pos (10UL)              /*!< ESUSPM (Bit 10)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_ESUSPM_Msk (0x400UL)           /*!< ESUSPM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_USBSUSPM_Pos (11UL)            /*!< USBSUSPM (Bit 11)                                     */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_USBSUSPM_Msk (0x800UL)         /*!< USBSUSPM (Bitfield-Mask: 0x01)                        */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_USBRST_Pos (12UL)              /*!< USBRST (Bit 12)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_USBRST_Msk (0x1000UL)          /*!< USBRST (Bitfield-Mask: 0x01)                          */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_ENUMDNEM_Pos (13UL)            /*!< ENUMDNEM (Bit 13)                                     */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_ENUMDNEM_Msk (0x2000UL)        /*!< ENUMDNEM (Bitfield-Mask: 0x01)                        */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_ISOODRPM_Pos (14UL)            /*!< ISOODRPM (Bit 14)                                     */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_ISOODRPM_Msk (0x4000UL)        /*!< ISOODRPM (Bitfield-Mask: 0x01)                        */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_EOPFM_Pos (15UL)               /*!< EOPFM (Bit 15)                                        */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_EOPFM_Msk (0x8000UL)           /*!< EOPFM (Bitfield-Mask: 0x01)                           */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_IEPINT_Pos (18UL)              /*!< IEPINT (Bit 18)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_IEPINT_Msk (0x40000UL)         /*!< IEPINT (Bitfield-Mask: 0x01)                          */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_OEPINT_Pos (19UL)              /*!< OEPINT (Bit 19)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_OEPINT_Msk (0x80000UL)         /*!< OEPINT (Bitfield-Mask: 0x01)                          */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_IISOIXFRM_Pos (20UL)           /*!< IISOIXFRM (Bit 20)                                    */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_IISOIXFRM_Msk (0x100000UL)     /*!< IISOIXFRM (Bitfield-Mask: 0x01)                       */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_IPXFRM_IISOOXFRM_Pos (21UL)    /*!< IPXFRM_IISOOXFRM (Bit 21)                             */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_IPXFRM_IISOOXFRM_Msk (0x200000UL) /*!< IPXFRM_IISOOXFRM (Bitfield-Mask: 0x01)             */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_PRTIM_Pos (24UL)               /*!< PRTIM (Bit 24)                                        */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_PRTIM_Msk (0x1000000UL)        /*!< PRTIM (Bitfield-Mask: 0x01)                           */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_HCIM_Pos (25UL)                /*!< HCIM (Bit 25)                                         */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_HCIM_Msk (0x2000000UL)         /*!< HCIM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_PTXFEM_Pos (26UL)              /*!< PTXFEM (Bit 26)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_PTXFEM_Msk (0x4000000UL)       /*!< PTXFEM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_CIDSCHGM_Pos (28UL)            /*!< CIDSCHGM (Bit 28)                                     */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_CIDSCHGM_Msk (0x10000000UL)    /*!< CIDSCHGM (Bitfield-Mask: 0x01)                        */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_DISCINT_Pos (29UL)             /*!< DISCINT (Bit 29)                                      */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_DISCINT_Msk (0x20000000UL)     /*!< DISCINT (Bitfield-Mask: 0x01)                         */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_SRQIM_Pos (30UL)               /*!< SRQIM (Bit 30)                                        */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_SRQIM_Msk (0x40000000UL)       /*!< SRQIM (Bitfield-Mask: 0x01)                           */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_WUIM_Pos (31UL)                /*!< WUIM (Bit 31)                                         */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_WUIM_Msk (0x80000000UL)        /*!< WUIM (Bitfield-Mask: 0x01)                            */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_RSTDETM_Pos (23UL)             /*!< RSTDETM (Bit 23)                                      */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_RSTDETM_Msk (0x800000UL)       /*!< RSTDETM (Bitfield-Mask: 0x01)                         */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_LPMIN_Pos (27UL)               /*!< LPMIN (Bit 27)                                        */
#define OTG_FS_GLOBAL_OTG_FS_GINTMSK_LPMIN_Msk (0x8000000UL)        /*!< LPMIN (Bitfield-Mask: 0x01)                           */
/* =================================================  OTG_FS_GRXSTSR_Device  ================================================= */
#define OTG_FS_GLOBAL_OTG_FS_GRXSTSR_Device_EPNUM_Pos (0UL)         /*!< EPNUM (Bit 0)                                         */
#define OTG_FS_GLOBAL_OTG_FS_GRXSTSR_Device_EPNUM_Msk (0xfUL)       /*!< EPNUM (Bitfield-Mask: 0x0f)                           */
#define OTG_FS_GLOBAL_OTG_FS_GRXSTSR_Device_BCNT_Pos (4UL)          /*!< BCNT (Bit 4)                                          */
#define OTG_FS_GLOBAL_OTG_FS_GRXSTSR_Device_BCNT_Msk (0x7ff0UL)     /*!< BCNT (Bitfield-Mask: 0x7ff)                           */
#define OTG_FS_GLOBAL_OTG_FS_GRXSTSR_Device_DPID_Pos (15UL)         /*!< DPID (Bit 15)                                         */
#define OTG_FS_GLOBAL_OTG_FS_GRXSTSR_Device_DPID_Msk (0x18000UL)    /*!< DPID (Bitfield-Mask: 0x03)                            */
#define OTG_FS_GLOBAL_OTG_FS_GRXSTSR_Device_PKTSTS_Pos (17UL)       /*!< PKTSTS (Bit 17)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GRXSTSR_Device_PKTSTS_Msk (0x1e0000UL) /*!< PKTSTS (Bitfield-Mask: 0x0f)                          */
#define OTG_FS_GLOBAL_OTG_FS_GRXSTSR_Device_FRMNUM_Pos (21UL)       /*!< FRMNUM (Bit 21)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GRXSTSR_Device_FRMNUM_Msk (0x1e00000UL) /*!< FRMNUM (Bitfield-Mask: 0x0f)                         */
/* ==================================================  OTG_FS_GRXSTSR_Host  ================================================== */
#define OTG_FS_GLOBAL_OTG_FS_GRXSTSR_Host_CHNUM_Pos (0UL)           /*!< CHNUM (Bit 0)                                         */
#define OTG_FS_GLOBAL_OTG_FS_GRXSTSR_Host_CHNUM_Msk (0xfUL)         /*!< CHNUM (Bitfield-Mask: 0x0f)                           */
#define OTG_FS_GLOBAL_OTG_FS_GRXSTSR_Host_BCNT_Pos (4UL)            /*!< BCNT (Bit 4)                                          */
#define OTG_FS_GLOBAL_OTG_FS_GRXSTSR_Host_BCNT_Msk (0x7ff0UL)       /*!< BCNT (Bitfield-Mask: 0x7ff)                           */
#define OTG_FS_GLOBAL_OTG_FS_GRXSTSR_Host_DPID_Pos (15UL)           /*!< DPID (Bit 15)                                         */
#define OTG_FS_GLOBAL_OTG_FS_GRXSTSR_Host_DPID_Msk (0x18000UL)      /*!< DPID (Bitfield-Mask: 0x03)                            */
#define OTG_FS_GLOBAL_OTG_FS_GRXSTSR_Host_PKTSTS_Pos (17UL)         /*!< PKTSTS (Bit 17)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GRXSTSR_Host_PKTSTS_Msk (0x1e0000UL)   /*!< PKTSTS (Bitfield-Mask: 0x0f)                          */
/* ====================================================  OTG_FS_GRXFSIZ  ===================================================== */
#define OTG_FS_GLOBAL_OTG_FS_GRXFSIZ_RXFD_Pos (0UL)                 /*!< RXFD (Bit 0)                                          */
#define OTG_FS_GLOBAL_OTG_FS_GRXFSIZ_RXFD_Msk (0xffffUL)            /*!< RXFD (Bitfield-Mask: 0xffff)                          */
/* ================================================  OTG_FS_DIEPTXF0_Device  ================================================= */
#define OTG_FS_GLOBAL_OTG_FS_DIEPTXF0_Device_TX0FSA_Pos (0UL)       /*!< TX0FSA (Bit 0)                                        */
#define OTG_FS_GLOBAL_OTG_FS_DIEPTXF0_Device_TX0FSA_Msk (0xffffUL)  /*!< TX0FSA (Bitfield-Mask: 0xffff)                        */
#define OTG_FS_GLOBAL_OTG_FS_DIEPTXF0_Device_TX0FD_Pos (16UL)       /*!< TX0FD (Bit 16)                                        */
#define OTG_FS_GLOBAL_OTG_FS_DIEPTXF0_Device_TX0FD_Msk (0xffff0000UL) /*!< TX0FD (Bitfield-Mask: 0xffff)                       */
/* =================================================  OTG_FS_HNPTXFSIZ_Host  ================================================= */
#define OTG_FS_GLOBAL_OTG_FS_HNPTXFSIZ_Host_NPTXFSA_Pos (0UL)       /*!< NPTXFSA (Bit 0)                                       */
#define OTG_FS_GLOBAL_OTG_FS_HNPTXFSIZ_Host_NPTXFSA_Msk (0xffffUL)  /*!< NPTXFSA (Bitfield-Mask: 0xffff)                       */
#define OTG_FS_GLOBAL_OTG_FS_HNPTXFSIZ_Host_NPTXFD_Pos (16UL)       /*!< NPTXFD (Bit 16)                                       */
#define OTG_FS_GLOBAL_OTG_FS_HNPTXFSIZ_Host_NPTXFD_Msk (0xffff0000UL) /*!< NPTXFD (Bitfield-Mask: 0xffff)                      */
/* ====================================================  OTG_FS_HNPTXSTS  ==================================================== */
#define OTG_FS_GLOBAL_OTG_FS_HNPTXSTS_NPTXFSAV_Pos (0UL)            /*!< NPTXFSAV (Bit 0)                                      */
#define OTG_FS_GLOBAL_OTG_FS_HNPTXSTS_NPTXFSAV_Msk (0xffffUL)       /*!< NPTXFSAV (Bitfield-Mask: 0xffff)                      */
#define OTG_FS_GLOBAL_OTG_FS_HNPTXSTS_NPTQXSAV_Pos (16UL)           /*!< NPTQXSAV (Bit 16)                                     */
#define OTG_FS_GLOBAL_OTG_FS_HNPTXSTS_NPTQXSAV_Msk (0xff0000UL)     /*!< NPTQXSAV (Bitfield-Mask: 0xff)                        */
#define OTG_FS_GLOBAL_OTG_FS_HNPTXSTS_NPTXQTOP_Pos (24UL)           /*!< NPTXQTOP (Bit 24)                                     */
#define OTG_FS_GLOBAL_OTG_FS_HNPTXSTS_NPTXQTOP_Msk (0x7f000000UL)   /*!< NPTXQTOP (Bitfield-Mask: 0x7f)                        */
/* =====================================================  OTG_FS_GCCFG  ====================================================== */
#define OTG_FS_GLOBAL_OTG_FS_GCCFG_PWRDWN_Pos (16UL)                /*!< PWRDWN (Bit 16)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GCCFG_PWRDWN_Msk (0x10000UL)           /*!< PWRDWN (Bitfield-Mask: 0x01)                          */
#define OTG_FS_GLOBAL_OTG_FS_GCCFG_BCDEN_Pos (17UL)                 /*!< BCDEN (Bit 17)                                        */
#define OTG_FS_GLOBAL_OTG_FS_GCCFG_BCDEN_Msk (0x20000UL)            /*!< BCDEN (Bitfield-Mask: 0x01)                           */
#define OTG_FS_GLOBAL_OTG_FS_GCCFG_DCDEN_Pos (18UL)                 /*!< DCDEN (Bit 18)                                        */
#define OTG_FS_GLOBAL_OTG_FS_GCCFG_DCDEN_Msk (0x40000UL)            /*!< DCDEN (Bitfield-Mask: 0x01)                           */
#define OTG_FS_GLOBAL_OTG_FS_GCCFG_PDEN_Pos (19UL)                  /*!< PDEN (Bit 19)                                         */
#define OTG_FS_GLOBAL_OTG_FS_GCCFG_PDEN_Msk (0x80000UL)             /*!< PDEN (Bitfield-Mask: 0x01)                            */
#define OTG_FS_GLOBAL_OTG_FS_GCCFG_SDEN_Pos (20UL)                  /*!< SDEN (Bit 20)                                         */
#define OTG_FS_GLOBAL_OTG_FS_GCCFG_SDEN_Msk (0x100000UL)            /*!< SDEN (Bitfield-Mask: 0x01)                            */
#define OTG_FS_GLOBAL_OTG_FS_GCCFG_VBDEN_Pos (21UL)                 /*!< VBDEN (Bit 21)                                        */
#define OTG_FS_GLOBAL_OTG_FS_GCCFG_VBDEN_Msk (0x200000UL)           /*!< VBDEN (Bitfield-Mask: 0x01)                           */
#define OTG_FS_GLOBAL_OTG_FS_GCCFG_DCDET_Pos (0UL)                  /*!< DCDET (Bit 0)                                         */
#define OTG_FS_GLOBAL_OTG_FS_GCCFG_DCDET_Msk (0x1UL)                /*!< DCDET (Bitfield-Mask: 0x01)                           */
#define OTG_FS_GLOBAL_OTG_FS_GCCFG_PDET_Pos (1UL)                   /*!< PDET (Bit 1)                                          */
#define OTG_FS_GLOBAL_OTG_FS_GCCFG_PDET_Msk (0x2UL)                 /*!< PDET (Bitfield-Mask: 0x01)                            */
#define OTG_FS_GLOBAL_OTG_FS_GCCFG_SDET_Pos (2UL)                   /*!< SDET (Bit 2)                                          */
#define OTG_FS_GLOBAL_OTG_FS_GCCFG_SDET_Msk (0x4UL)                 /*!< SDET (Bitfield-Mask: 0x01)                            */
#define OTG_FS_GLOBAL_OTG_FS_GCCFG_PS2DET_Pos (3UL)                 /*!< PS2DET (Bit 3)                                        */
#define OTG_FS_GLOBAL_OTG_FS_GCCFG_PS2DET_Msk (0x8UL)               /*!< PS2DET (Bitfield-Mask: 0x01)                          */
/* ======================================================  OTG_FS_CID  ======================================================= */
#define OTG_FS_GLOBAL_OTG_FS_CID_PRODUCT_ID_Pos (0UL)               /*!< PRODUCT_ID (Bit 0)                                    */
#define OTG_FS_GLOBAL_OTG_FS_CID_PRODUCT_ID_Msk (0xffffffffUL)      /*!< PRODUCT_ID (Bitfield-Mask: 0xffffffff)                */
/* ====================================================  OTG_FS_HPTXFSIZ  ==================================================== */
#define OTG_FS_GLOBAL_OTG_FS_HPTXFSIZ_PTXSA_Pos (0UL)               /*!< PTXSA (Bit 0)                                         */
#define OTG_FS_GLOBAL_OTG_FS_HPTXFSIZ_PTXSA_Msk (0xffffUL)          /*!< PTXSA (Bitfield-Mask: 0xffff)                         */
#define OTG_FS_GLOBAL_OTG_FS_HPTXFSIZ_PTXFSIZ_Pos (16UL)            /*!< PTXFSIZ (Bit 16)                                      */
#define OTG_FS_GLOBAL_OTG_FS_HPTXFSIZ_PTXFSIZ_Msk (0xffff0000UL)    /*!< PTXFSIZ (Bitfield-Mask: 0xffff)                       */
/* ====================================================  OTG_FS_DIEPTXF1  ==================================================== */
#define OTG_FS_GLOBAL_OTG_FS_DIEPTXF1_INEPTXSA_Pos (0UL)            /*!< INEPTXSA (Bit 0)                                      */
#define OTG_FS_GLOBAL_OTG_FS_DIEPTXF1_INEPTXSA_Msk (0xffffUL)       /*!< INEPTXSA (Bitfield-Mask: 0xffff)                      */
#define OTG_FS_GLOBAL_OTG_FS_DIEPTXF1_INEPTXFD_Pos (16UL)           /*!< INEPTXFD (Bit 16)                                     */
#define OTG_FS_GLOBAL_OTG_FS_DIEPTXF1_INEPTXFD_Msk (0xffff0000UL)   /*!< INEPTXFD (Bitfield-Mask: 0xffff)                      */
/* ====================================================  OTG_FS_DIEPTXF2  ==================================================== */
#define OTG_FS_GLOBAL_OTG_FS_DIEPTXF2_INEPTXSA_Pos (0UL)            /*!< INEPTXSA (Bit 0)                                      */
#define OTG_FS_GLOBAL_OTG_FS_DIEPTXF2_INEPTXSA_Msk (0xffffUL)       /*!< INEPTXSA (Bitfield-Mask: 0xffff)                      */
#define OTG_FS_GLOBAL_OTG_FS_DIEPTXF2_INEPTXFD_Pos (16UL)           /*!< INEPTXFD (Bit 16)                                     */
#define OTG_FS_GLOBAL_OTG_FS_DIEPTXF2_INEPTXFD_Msk (0xffff0000UL)   /*!< INEPTXFD (Bitfield-Mask: 0xffff)                      */
/* ====================================================  OTG_FS_DIEPTXF3  ==================================================== */
#define OTG_FS_GLOBAL_OTG_FS_DIEPTXF3_INEPTXSA_Pos (0UL)            /*!< INEPTXSA (Bit 0)                                      */
#define OTG_FS_GLOBAL_OTG_FS_DIEPTXF3_INEPTXSA_Msk (0xffffUL)       /*!< INEPTXSA (Bitfield-Mask: 0xffff)                      */
#define OTG_FS_GLOBAL_OTG_FS_DIEPTXF3_INEPTXFD_Pos (16UL)           /*!< INEPTXFD (Bit 16)                                     */
#define OTG_FS_GLOBAL_OTG_FS_DIEPTXF3_INEPTXFD_Msk (0xffff0000UL)   /*!< INEPTXFD (Bitfield-Mask: 0xffff)                      */
/* =================================================  OTG_FS_GRXSTSP_Device  ================================================= */
#define OTG_FS_GLOBAL_OTG_FS_GRXSTSP_Device_EPNUM_Pos (0UL)         /*!< EPNUM (Bit 0)                                         */
#define OTG_FS_GLOBAL_OTG_FS_GRXSTSP_Device_EPNUM_Msk (0xfUL)       /*!< EPNUM (Bitfield-Mask: 0x0f)                           */
#define OTG_FS_GLOBAL_OTG_FS_GRXSTSP_Device_BCNT_Pos (4UL)          /*!< BCNT (Bit 4)                                          */
#define OTG_FS_GLOBAL_OTG_FS_GRXSTSP_Device_BCNT_Msk (0x7ff0UL)     /*!< BCNT (Bitfield-Mask: 0x7ff)                           */
#define OTG_FS_GLOBAL_OTG_FS_GRXSTSP_Device_DPID_Pos (15UL)         /*!< DPID (Bit 15)                                         */
#define OTG_FS_GLOBAL_OTG_FS_GRXSTSP_Device_DPID_Msk (0x18000UL)    /*!< DPID (Bitfield-Mask: 0x03)                            */
#define OTG_FS_GLOBAL_OTG_FS_GRXSTSP_Device_PKTSTS_Pos (17UL)       /*!< PKTSTS (Bit 17)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GRXSTSP_Device_PKTSTS_Msk (0x1e0000UL) /*!< PKTSTS (Bitfield-Mask: 0x0f)                          */
#define OTG_FS_GLOBAL_OTG_FS_GRXSTSP_Device_FRMNUM_Pos (21UL)       /*!< FRMNUM (Bit 21)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GRXSTSP_Device_FRMNUM_Msk (0x1e00000UL) /*!< FRMNUM (Bitfield-Mask: 0x0f)                         */
/* ==================================================  OTG_FS_GRXSTSP_Host  ================================================== */
#define OTG_FS_GLOBAL_OTG_FS_GRXSTSP_Host_CHNUM_Pos (0UL)           /*!< CHNUM (Bit 0)                                         */
#define OTG_FS_GLOBAL_OTG_FS_GRXSTSP_Host_CHNUM_Msk (0xfUL)         /*!< CHNUM (Bitfield-Mask: 0x0f)                           */
#define OTG_FS_GLOBAL_OTG_FS_GRXSTSP_Host_BCNT_Pos (4UL)            /*!< BCNT (Bit 4)                                          */
#define OTG_FS_GLOBAL_OTG_FS_GRXSTSP_Host_BCNT_Msk (0x7ff0UL)       /*!< BCNT (Bitfield-Mask: 0x7ff)                           */
#define OTG_FS_GLOBAL_OTG_FS_GRXSTSP_Host_DPID_Pos (15UL)           /*!< DPID (Bit 15)                                         */
#define OTG_FS_GLOBAL_OTG_FS_GRXSTSP_Host_DPID_Msk (0x18000UL)      /*!< DPID (Bitfield-Mask: 0x03)                            */
#define OTG_FS_GLOBAL_OTG_FS_GRXSTSP_Host_PKTSTS_Pos (17UL)         /*!< PKTSTS (Bit 17)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GRXSTSP_Host_PKTSTS_Msk (0x1e0000UL)   /*!< PKTSTS (Bitfield-Mask: 0x0f)                          */
/* ====================================================  OTG_FS_GI2CCTL  ===================================================== */
#define OTG_FS_GLOBAL_OTG_FS_GI2CCTL_RWDATA_Pos (0UL)               /*!< RWDATA (Bit 0)                                        */
#define OTG_FS_GLOBAL_OTG_FS_GI2CCTL_RWDATA_Msk (0xffUL)            /*!< RWDATA (Bitfield-Mask: 0xff)                          */
#define OTG_FS_GLOBAL_OTG_FS_GI2CCTL_REGADDR_Pos (8UL)              /*!< REGADDR (Bit 8)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GI2CCTL_REGADDR_Msk (0xff00UL)         /*!< REGADDR (Bitfield-Mask: 0xff)                         */
#define OTG_FS_GLOBAL_OTG_FS_GI2CCTL_ADDR_Pos (16UL)                /*!< ADDR (Bit 16)                                         */
#define OTG_FS_GLOBAL_OTG_FS_GI2CCTL_ADDR_Msk (0x7f0000UL)          /*!< ADDR (Bitfield-Mask: 0x7f)                            */
#define OTG_FS_GLOBAL_OTG_FS_GI2CCTL_I2CEN_Pos (23UL)               /*!< I2CEN (Bit 23)                                        */
#define OTG_FS_GLOBAL_OTG_FS_GI2CCTL_I2CEN_Msk (0x800000UL)         /*!< I2CEN (Bitfield-Mask: 0x01)                           */
#define OTG_FS_GLOBAL_OTG_FS_GI2CCTL_ACK_Pos (24UL)                 /*!< ACK (Bit 24)                                          */
#define OTG_FS_GLOBAL_OTG_FS_GI2CCTL_ACK_Msk (0x1000000UL)          /*!< ACK (Bitfield-Mask: 0x01)                             */
#define OTG_FS_GLOBAL_OTG_FS_GI2CCTL_I2CDEVADR_Pos (26UL)           /*!< I2CDEVADR (Bit 26)                                    */
#define OTG_FS_GLOBAL_OTG_FS_GI2CCTL_I2CDEVADR_Msk (0xc000000UL)    /*!< I2CDEVADR (Bitfield-Mask: 0x03)                       */
#define OTG_FS_GLOBAL_OTG_FS_GI2CCTL_I2CDATSE0_Pos (28UL)           /*!< I2CDATSE0 (Bit 28)                                    */
#define OTG_FS_GLOBAL_OTG_FS_GI2CCTL_I2CDATSE0_Msk (0x10000000UL)   /*!< I2CDATSE0 (Bitfield-Mask: 0x01)                       */
#define OTG_FS_GLOBAL_OTG_FS_GI2CCTL_RW_Pos (30UL)                  /*!< RW (Bit 30)                                           */
#define OTG_FS_GLOBAL_OTG_FS_GI2CCTL_RW_Msk (0x40000000UL)          /*!< RW (Bitfield-Mask: 0x01)                              */
#define OTG_FS_GLOBAL_OTG_FS_GI2CCTL_BSYDNE_Pos (31UL)              /*!< BSYDNE (Bit 31)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GI2CCTL_BSYDNE_Msk (0x80000000UL)      /*!< BSYDNE (Bitfield-Mask: 0x01)                          */
/* =====================================================  OTG_FS_GPWRDN  ===================================================== */
#define OTG_FS_GLOBAL_OTG_FS_GPWRDN_ADPMEN_Pos (0UL)                /*!< ADPMEN (Bit 0)                                        */
#define OTG_FS_GLOBAL_OTG_FS_GPWRDN_ADPMEN_Msk (0x1UL)              /*!< ADPMEN (Bitfield-Mask: 0x01)                          */
#define OTG_FS_GLOBAL_OTG_FS_GPWRDN_ADPIF_Pos (23UL)                /*!< ADPIF (Bit 23)                                        */
#define OTG_FS_GLOBAL_OTG_FS_GPWRDN_ADPIF_Msk (0x800000UL)          /*!< ADPIF (Bitfield-Mask: 0x01)                           */
/* ====================================================  OTG_FS_GADPCTL  ===================================================== */
#define OTG_FS_GLOBAL_OTG_FS_GADPCTL_PRBDSCHG_Pos (0UL)             /*!< PRBDSCHG (Bit 0)                                      */
#define OTG_FS_GLOBAL_OTG_FS_GADPCTL_PRBDSCHG_Msk (0x3UL)           /*!< PRBDSCHG (Bitfield-Mask: 0x03)                        */
#define OTG_FS_GLOBAL_OTG_FS_GADPCTL_PRBDELTA_Pos (2UL)             /*!< PRBDELTA (Bit 2)                                      */
#define OTG_FS_GLOBAL_OTG_FS_GADPCTL_PRBDELTA_Msk (0xcUL)           /*!< PRBDELTA (Bitfield-Mask: 0x03)                        */
#define OTG_FS_GLOBAL_OTG_FS_GADPCTL_PRBPER_Pos (4UL)               /*!< PRBPER (Bit 4)                                        */
#define OTG_FS_GLOBAL_OTG_FS_GADPCTL_PRBPER_Msk (0x30UL)            /*!< PRBPER (Bitfield-Mask: 0x03)                          */
#define OTG_FS_GLOBAL_OTG_FS_GADPCTL_RTIM_Pos (6UL)                 /*!< RTIM (Bit 6)                                          */
#define OTG_FS_GLOBAL_OTG_FS_GADPCTL_RTIM_Msk (0x1ffc0UL)           /*!< RTIM (Bitfield-Mask: 0x7ff)                           */
#define OTG_FS_GLOBAL_OTG_FS_GADPCTL_ENAPRB_Pos (17UL)              /*!< ENAPRB (Bit 17)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GADPCTL_ENAPRB_Msk (0x20000UL)         /*!< ENAPRB (Bitfield-Mask: 0x01)                          */
#define OTG_FS_GLOBAL_OTG_FS_GADPCTL_ENASNS_Pos (18UL)              /*!< ENASNS (Bit 18)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GADPCTL_ENASNS_Msk (0x40000UL)         /*!< ENASNS (Bitfield-Mask: 0x01)                          */
#define OTG_FS_GLOBAL_OTG_FS_GADPCTL_ADPRST_Pos (19UL)              /*!< ADPRST (Bit 19)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GADPCTL_ADPRST_Msk (0x80000UL)         /*!< ADPRST (Bitfield-Mask: 0x01)                          */
#define OTG_FS_GLOBAL_OTG_FS_GADPCTL_ADPEN_Pos (20UL)               /*!< ADPEN (Bit 20)                                        */
#define OTG_FS_GLOBAL_OTG_FS_GADPCTL_ADPEN_Msk (0x100000UL)         /*!< ADPEN (Bitfield-Mask: 0x01)                           */
#define OTG_FS_GLOBAL_OTG_FS_GADPCTL_ADPPRBIF_Pos (21UL)            /*!< ADPPRBIF (Bit 21)                                     */
#define OTG_FS_GLOBAL_OTG_FS_GADPCTL_ADPPRBIF_Msk (0x200000UL)      /*!< ADPPRBIF (Bitfield-Mask: 0x01)                        */
#define OTG_FS_GLOBAL_OTG_FS_GADPCTL_ADPSNSIF_Pos (22UL)            /*!< ADPSNSIF (Bit 22)                                     */
#define OTG_FS_GLOBAL_OTG_FS_GADPCTL_ADPSNSIF_Msk (0x400000UL)      /*!< ADPSNSIF (Bitfield-Mask: 0x01)                        */
#define OTG_FS_GLOBAL_OTG_FS_GADPCTL_ADPTOIF_Pos (23UL)             /*!< ADPTOIF (Bit 23)                                      */
#define OTG_FS_GLOBAL_OTG_FS_GADPCTL_ADPTOIF_Msk (0x800000UL)       /*!< ADPTOIF (Bitfield-Mask: 0x01)                         */
#define OTG_FS_GLOBAL_OTG_FS_GADPCTL_ADPPRBIM_Pos (24UL)            /*!< ADPPRBIM (Bit 24)                                     */
#define OTG_FS_GLOBAL_OTG_FS_GADPCTL_ADPPRBIM_Msk (0x1000000UL)     /*!< ADPPRBIM (Bitfield-Mask: 0x01)                        */
#define OTG_FS_GLOBAL_OTG_FS_GADPCTL_ADPSNSIM_Pos (25UL)            /*!< ADPSNSIM (Bit 25)                                     */
#define OTG_FS_GLOBAL_OTG_FS_GADPCTL_ADPSNSIM_Msk (0x2000000UL)     /*!< ADPSNSIM (Bitfield-Mask: 0x01)                        */
#define OTG_FS_GLOBAL_OTG_FS_GADPCTL_ADPTOIM_Pos (26UL)             /*!< ADPTOIM (Bit 26)                                      */
#define OTG_FS_GLOBAL_OTG_FS_GADPCTL_ADPTOIM_Msk (0x4000000UL)      /*!< ADPTOIM (Bitfield-Mask: 0x01)                         */
#define OTG_FS_GLOBAL_OTG_FS_GADPCTL_AR_Pos (27UL)                  /*!< AR (Bit 27)                                           */
#define OTG_FS_GLOBAL_OTG_FS_GADPCTL_AR_Msk (0x18000000UL)          /*!< AR (Bitfield-Mask: 0x03)                              */
/* ====================================================  OTG_FS_DIEPTXF4  ==================================================== */
#define OTG_FS_GLOBAL_OTG_FS_DIEPTXF4_INEPTXSA_Pos (0UL)            /*!< INEPTXSA (Bit 0)                                      */
#define OTG_FS_GLOBAL_OTG_FS_DIEPTXF4_INEPTXSA_Msk (0xffffUL)       /*!< INEPTXSA (Bitfield-Mask: 0xffff)                      */
#define OTG_FS_GLOBAL_OTG_FS_DIEPTXF4_INEPTXFD_Pos (16UL)           /*!< INEPTXFD (Bit 16)                                     */
#define OTG_FS_GLOBAL_OTG_FS_DIEPTXF4_INEPTXFD_Msk (0xffff0000UL)   /*!< INEPTXFD (Bitfield-Mask: 0xffff)                      */
/* ====================================================  OTG_FS_DIEPTXF5  ==================================================== */
#define OTG_FS_GLOBAL_OTG_FS_DIEPTXF5_INEPTXSA_Pos (0UL)            /*!< INEPTXSA (Bit 0)                                      */
#define OTG_FS_GLOBAL_OTG_FS_DIEPTXF5_INEPTXSA_Msk (0xffffUL)       /*!< INEPTXSA (Bitfield-Mask: 0xffff)                      */
#define OTG_FS_GLOBAL_OTG_FS_DIEPTXF5_INEPTXFD_Pos (16UL)           /*!< INEPTXFD (Bit 16)                                     */
#define OTG_FS_GLOBAL_OTG_FS_DIEPTXF5_INEPTXFD_Msk (0xffff0000UL)   /*!< INEPTXFD (Bitfield-Mask: 0xffff)                      */
/* ====================================================  OTG_FS_GLPMCFG  ===================================================== */
#define OTG_FS_GLOBAL_OTG_FS_GLPMCFG_LPMEN_Pos (0UL)                /*!< LPMEN (Bit 0)                                         */
#define OTG_FS_GLOBAL_OTG_FS_GLPMCFG_LPMEN_Msk (0x1UL)              /*!< LPMEN (Bitfield-Mask: 0x01)                           */
#define OTG_FS_GLOBAL_OTG_FS_GLPMCFG_LPMACK_Pos (1UL)               /*!< LPMACK (Bit 1)                                        */
#define OTG_FS_GLOBAL_OTG_FS_GLPMCFG_LPMACK_Msk (0x2UL)             /*!< LPMACK (Bitfield-Mask: 0x01)                          */
#define OTG_FS_GLOBAL_OTG_FS_GLPMCFG_BESL_Pos (2UL)                 /*!< BESL (Bit 2)                                          */
#define OTG_FS_GLOBAL_OTG_FS_GLPMCFG_BESL_Msk (0x3cUL)              /*!< BESL (Bitfield-Mask: 0x0f)                            */
#define OTG_FS_GLOBAL_OTG_FS_GLPMCFG_REMWAKE_Pos (6UL)              /*!< REMWAKE (Bit 6)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GLPMCFG_REMWAKE_Msk (0x40UL)           /*!< REMWAKE (Bitfield-Mask: 0x01)                         */
#define OTG_FS_GLOBAL_OTG_FS_GLPMCFG_L1SSEN_Pos (7UL)               /*!< L1SSEN (Bit 7)                                        */
#define OTG_FS_GLOBAL_OTG_FS_GLPMCFG_L1SSEN_Msk (0x80UL)            /*!< L1SSEN (Bitfield-Mask: 0x01)                          */
#define OTG_FS_GLOBAL_OTG_FS_GLPMCFG_BESLTHRS_Pos (8UL)             /*!< BESLTHRS (Bit 8)                                      */
#define OTG_FS_GLOBAL_OTG_FS_GLPMCFG_BESLTHRS_Msk (0xf00UL)         /*!< BESLTHRS (Bitfield-Mask: 0x0f)                        */
#define OTG_FS_GLOBAL_OTG_FS_GLPMCFG_L1DSEN_Pos (12UL)              /*!< L1DSEN (Bit 12)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GLPMCFG_L1DSEN_Msk (0x1000UL)          /*!< L1DSEN (Bitfield-Mask: 0x01)                          */
#define OTG_FS_GLOBAL_OTG_FS_GLPMCFG_LPMRST_Pos (13UL)              /*!< LPMRST (Bit 13)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GLPMCFG_LPMRST_Msk (0x6000UL)          /*!< LPMRST (Bitfield-Mask: 0x03)                          */
#define OTG_FS_GLOBAL_OTG_FS_GLPMCFG_SLPSTS_Pos (15UL)              /*!< SLPSTS (Bit 15)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GLPMCFG_SLPSTS_Msk (0x8000UL)          /*!< SLPSTS (Bitfield-Mask: 0x01)                          */
#define OTG_FS_GLOBAL_OTG_FS_GLPMCFG_L1RSMOK_Pos (16UL)             /*!< L1RSMOK (Bit 16)                                      */
#define OTG_FS_GLOBAL_OTG_FS_GLPMCFG_L1RSMOK_Msk (0x10000UL)        /*!< L1RSMOK (Bitfield-Mask: 0x01)                         */
#define OTG_FS_GLOBAL_OTG_FS_GLPMCFG_LPMCHIDX_Pos (17UL)            /*!< LPMCHIDX (Bit 17)                                     */
#define OTG_FS_GLOBAL_OTG_FS_GLPMCFG_LPMCHIDX_Msk (0x1e0000UL)      /*!< LPMCHIDX (Bitfield-Mask: 0x0f)                        */
#define OTG_FS_GLOBAL_OTG_FS_GLPMCFG_LPMRCNT_Pos (21UL)             /*!< LPMRCNT (Bit 21)                                      */
#define OTG_FS_GLOBAL_OTG_FS_GLPMCFG_LPMRCNT_Msk (0xe00000UL)       /*!< LPMRCNT (Bitfield-Mask: 0x07)                         */
#define OTG_FS_GLOBAL_OTG_FS_GLPMCFG_SNDLPM_Pos (24UL)              /*!< SNDLPM (Bit 24)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GLPMCFG_SNDLPM_Msk (0x1000000UL)       /*!< SNDLPM (Bitfield-Mask: 0x01)                          */
#define OTG_FS_GLOBAL_OTG_FS_GLPMCFG_LPMRCNTSTS_Pos (25UL)          /*!< LPMRCNTSTS (Bit 25)                                   */
#define OTG_FS_GLOBAL_OTG_FS_GLPMCFG_LPMRCNTSTS_Msk (0xe000000UL)   /*!< LPMRCNTSTS (Bitfield-Mask: 0x07)                      */
#define OTG_FS_GLOBAL_OTG_FS_GLPMCFG_ENBESL_Pos (28UL)              /*!< ENBESL (Bit 28)                                       */
#define OTG_FS_GLOBAL_OTG_FS_GLPMCFG_ENBESL_Msk (0x10000000UL)      /*!< ENBESL (Bitfield-Mask: 0x01)                          */

